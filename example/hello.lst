    1 00:0000 -  -  -  -  #define APP_NAME "Hello   "
    2 00:0000 -  -  -  -  #include "app.asm"
Listing for file "../lib/spasm//app.asm"
    1 00:0000 -  -  -  -  ;;; app.asm -- File containing app boilerplate code.
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;;;==========================================================================;;;
    4 00:0000 -  -  -  -  ;;; USAGE ////////////////////////////////////////////////////////////////// ;;;
    5 00:0000 -  -  -  -  ;;;==========================================================================;;;
    6 00:0000 -  -  -  -  
    7 00:0000 -  -  -  -  ;;; In order to (properly) use this library, an application must meet the
    8 00:0000 -  -  -  -  ;;; following conditions:
    9 00:0000 -  -  -  -  ;;;
   10 00:0000 -  -  -  -  ;;;     (1) Before anything that will become part of the application code, the
   11 00:0000 -  -  -  -  ;;;         application must include the present file.
   12 00:0000 -  -  -  -  ;;;
   13 00:0000 -  -  -  -  ;;;     (2) The application must define the symbolic equate ``APP_NAME'', which
   14 00:0000 -  -  -  -  ;;;         must be an 8-character string literal (e.g. ``"Hello   "''),
   15 00:0000 -  -  -  -  ;;;         somewhere that code in the present file will be able to find it.
   16 00:0000 -  -  -  -  ;;;         A good place to define it would be before actually including the
   17 00:0000 -  -  -  -  ;;;         present file.
   18 00:0000 -  -  -  -  ;;;
   19 00:0000 -  -  -  -  ;;;     (3) After including the present file, the application must include a
   20 00:0000 -  -  -  -  ;;;         routine which begins with the label ``appMain''.
   21 00:0000 -  -  -  -  ;;;
   22 00:0000 -  -  -  -  ;;; NOTE that this file is NOT a "library" in that it has no initialization and
   23 00:0000 -  -  -  -  ;;; de-initialization routines which need to be called.
   24 00:0000 -  -  -  -  
   25 00:0000 -  -  -  -  ;;;==========================================================================;;;
   26 00:0000 -  -  -  -  ;;; BOILERPLATE //////////////////////////////////////////////////////////// ;;;
   27 00:0000 -  -  -  -  ;;;==========================================================================;;;
   28 00:0000 -  -  -  -  
   29 00:0000 -  -  -  -  #include "spasm_ti83plus.inc"
Listing for file "../lib/spasm//spasm_ti83plus.inc"
    1 00:0000 -  -  -  -  ;TI-83 Plus Include File
    2 00:0000 -  -  -  -  ;05/07/2007
    3 00:0000 -  -  -  -  
    4 00:0000 -  -  -  -  ;Included for TASM Compatibility
    5 00:0000 -  -  -  -  ;-------------------------------
    6 00:0000 -  -  -  -  #define equ .equ
    7 00:0000 -  -  -  -  #define EQU .equ
    8 00:0000 -  -  -  -  #define end .end
    9 00:0000 -  -  -  -  #define END .end
   10 00:0000 -  -  -  -  
   11 00:0000 -  -  -  -  ;System Variable Equates
   12 00:0000 -  -  -  -  ;------------------------------
   13 00:0000 -  -  -  -  XSCLt			equ 2
   14 00:0000 -  -  -  -  YSCLt			equ 3
   15 00:0000 -  -  -  -  XMINt			equ 0Ah
   16 00:0000 -  -  -  -  XMAXt			equ 0Bh
   17 00:0000 -  -  -  -  YMINt			equ 0Ch
   18 00:0000 -  -  -  -  YMAXt			equ 0Dh
   19 00:0000 -  -  -  -  TMINt			equ 0Eh
   20 00:0000 -  -  -  -  TMAXt			equ 0Fh
   21 00:0000 -  -  -  -  THETMINt		equ 10h
   22 00:0000 -  -  -  -  THETMAXt		equ 11h
   23 00:0000 -  -  -  -  TBLMINt			equ 1Ah
   24 00:0000 -  -  -  -  PLOTSTARTt		equ 1Bh
   25 00:0000 -  -  -  -  NMAXt			equ 1Dh
   26 00:0000 -  -  -  -  NMINt			equ 1Fh
   27 00:0000 -  -  -  -  TBLSTEPt		equ 21h
   28 00:0000 -  -  -  -  TSTEPt			equ 22h
   29 00:0000 -  -  -  -  THETSTEPt		equ 23h
   30 00:0000 -  -  -  -  DELTAXt			equ 26h
   31 00:0000 -  -  -  -  DELTAYt			equ 27h
   32 00:0000 -  -  -  -  XFACTt			equ 28h
   33 00:0000 -  -  -  -  YFACTt			equ 29h
   34 00:0000 -  -  -  -  FINNt			equ 2Bh
   35 00:0000 -  -  -  -  FINIt			equ 2Ch
   36 00:0000 -  -  -  -  FINPVt			equ 2Dh
   37 00:0000 -  -  -  -  FINPMTt			equ 2Eh
   38 00:0000 -  -  -  -  FINFVt			equ 2Fh
   39 00:0000 -  -  -  -  FINPYt			equ 30h
   40 00:0000 -  -  -  -  FINCYt			equ 31h
   41 00:0000 -  -  -  -  PLOTSTEPt		equ 34h
   42 00:0000 -  -  -  -  XRESt			equ 36h
   43 00:0000 -  -  -  -  
   44 00:0000 -  -  -  -  ;Run indicators
   45 00:0000 -  -  -  -  ;------------------------------------
   46 00:0000 -  -  -  -  busyPause		equ 10101010b
   47 00:0000 -  -  -  -  busyNormal		equ 11110000b
   48 00:0000 -  -  -  -  
   49 00:0000 -  -  -  -  ;Banked Call Equates/Macros
   50 00:0000 -  -  -  -  ;-----------------------------------------------
   51 00:0000 -  -  -  -  rBR_CALL		equ 28h
   52 00:0000 -  -  -  -  BRT_JUMP0		equ 50h
   53 00:0000 -  -  -  -  #define bcall(xxxx) rst 28h \ .dw xxxx
   54 00:0000 -  -  -  -  #define bjump(xxxx) call 50h \ .dw xxxx
   55 00:0000 -  -  -  -  
   56 00:0000 -  -  -  -  ;Common Restart Routines
   57 00:0000 -  -  -  -  ;------------------------------
   58 00:0000 -  -  -  -  rOP1TOOP2		equ 08h
   59 00:0000 -  -  -  -  rFINDSYM		equ 10h
   60 00:0000 -  -  -  -  rPUSHREALO1		equ 18h
   61 00:0000 -  -  -  -  rMOV9TOOP1		equ 20h
   62 00:0000 -  -  -  -  rFPADD			equ 30h
   63 00:0000 -  -  -  -  
   64 00:0000 -  -  -  -  ;Error Handler Equates/Macros
   65 00:0000 -  -  -  -  ;-------------------------------------------
   66 00:0000 -  -  -  -  APP_PUSH_ERRORH		equ 59h
   67 00:0000 -  -  -  -  APP_POP_ERRORH		equ 5Ch
   68 00:0000 -  -  -  -  #define AppOnErr(xxxx) ld hl,xxxx \ call 59h
   69 00:0000 -  -  -  -  #define AppOffErr call 5Ch
   70 00:0000 -  -  -  -  
   71 00:0000 -  -  -  -  ;Page 1Bh ROM Calls
   72 00:0000 -  -  -  -  ;--------------------------------
   73 00:0000 -  -  -  -  _JErrorNo		equ 4000h
   74 00:0000 -  -  -  -  _FontHook		equ 4003h
   75 00:0000 -  -  -  -  _call_character_hook	equ 4006h ;calls character(localize) hook
   76 00:0000 -  -  -  -  _ldHLind		equ 4009h ;l=a=(hl),h=(hl+1)
   77 00:0000 -  -  -  -  _CpHLDE			equ 400Ch
   78 00:0000 -  -  -  -  _DivHLBy10		equ 400Fh
   79 00:0000 -  -  -  -  _DivHLByA		equ 4012h
   80 00:0000 -  -  -  -  _kdbScan		equ 4015h
   81 00:0000 -  -  -  -  _GetCSC			equ 4018h ;key board scan codes
   82 00:0000 -  -  -  -  _coorMon		equ 401Bh ;
   83 00:0000 -  -  -  -  _Mon			equ 401Eh ;system monitor, customized through the context vectors
   84 00:0000 -  -  -  -  _monForceKey		equ 4021h ;
   85 00:0000 -  -  -  -  _sendKPress		equ 4024h
   86 00:0000 -  -  -  -  _JForceCmdNoChar	equ 4027h
   87 00:0000 -  -  -  -  _JForceCmd		equ 402Ah ;
   88 00:0000 -  -  -  -  _sysErrHandler		equ 402Dh ;loads error context? sp=(onSP)
   89 00:0000 -  -  -  -  _newContext		equ 4030h ;(kbdKey)=0, loads context, restores page in 4000h-7fffh
   90 00:0000 -  -  -  -  _newContext0		equ 4033h ;loads context
   91 00:0000 -  -  -  -  _cxPutAway		equ 4036h ;
   92 00:0000 -  -  -  -  _cxPutAway2		equ 4039h ;same but also does a B_CALL CanAlphIns
   93 00:0000 -  -  -  -  _cxPPutAway		equ 403Ch
   94 00:0000 -  -  -  -  _cxSizeWind		equ 403Fh
   95 00:0000 -  -  -  -  _cxErrEP		equ 4042h
   96 00:0000 -  -  -  -  _cxMain			equ 4045h
   97 00:0000 -  -  -  -  _monErrHand		equ 4048h ;installs errorhandler to start of ROM call, loads error context, jumps to mon
   98 00:0000 -  -  -  -  _AppInit		equ 404Bh ;loads vector data at hl to cxMain and the rest of the vectors
   99 00:0000 -  -  -  -  _resetRam		equ 404Eh
  100 00:0000 -  -  -  -  _lcd_busy		equ 4051h ;wait till bit 1 of port 2 is set
  101 00:0000 -  -  -  -  _Min			equ 4054h ;op1 = lowest number between op1 and op2
  102 00:0000 -  -  -  -  _Max			equ 4057h ;op1 = highest number between op1 and op2 
  103 00:0000 -  -  -  -  _Trunc			equ 4060h
  104 00:0000 -  -  -  -  _InvSub			equ 4063h
  105 00:0000 -  -  -  -  _Times2			equ 4066h
  106 00:0000 -  -  -  -  _Plus1			equ 4069h ;op1=op1+1
  107 00:0000 -  -  -  -  _Minus1			equ 406Ch
  108 00:0000 -  -  -  -  _FPSub			equ 406Fh
  109 00:0000 -  -  -  -  _FPAdd			equ 4072h
  110 00:0000 -  -  -  -  _DToR			equ 4075h
  111 00:0000 -  -  -  -  _RToD			equ 4078h
  112 00:0000 -  -  -  -  _Cube			equ 407Bh
  113 00:0000 -  -  -  -  _TimesPt5		equ 407Eh
  114 00:0000 -  -  -  -  _FPSquare		equ 4081h
  115 00:0000 -  -  -  -  _FPMult			equ 4084h ;op1=op1*op2
  116 00:0000 -  -  -  -  _LJRND			equ 4087h ;adjusts op1 if 0s precede the actual number... rounding? when
  117 00:0000 -  -  -  -  _InvOP1SC		equ 408Ah
  118 00:0000 -  -  -  -  _InvOP1S		equ 408Dh
  119 00:0000 -  -  -  -  _InvOP2S		equ 4090h
  120 00:0000 -  -  -  -  _frac			equ 4093h
  121 00:0000 -  -  -  -  _fprecip		equ 4096h
  122 00:0000 -  -  -  -  _fpdiv			equ 4099h
  123 00:0000 -  -  -  -  _SqRoot			equ 409Ch
  124 00:0000 -  -  -  -  _RndGuard		equ 409Fh
  125 00:0000 -  -  -  -  _RnFx			equ 40A2h
  126 00:0000 -  -  -  -  _int			equ 40A5h
  127 00:0000 -  -  -  -  _Round			equ 40A8h
  128 00:0000 -  -  -  -  _LnX			equ 40ABh
  129 00:0000 -  -  -  -  _LogX			equ 40AEh
  130 00:0000 -  -  -  -  _LJNORND		equ 40B1h ;like _LJRND but no rounding
  131 00:0000 -  -  -  -  _EToX			equ 40B4h
  132 00:0000 -  -  -  -  _TenX			equ 40B7h
  133 00:0000 -  -  -  -  _SinCosRad		equ 40BAh
  134 00:0000 -  -  -  -  _Sin			equ 40BDh
  135 00:0000 -  -  -  -  _cos			equ 40C0h
  136 00:0000 -  -  -  -  _Tan			equ 40C3h
  137 00:0000 -  -  -  -  _SinHCosH		equ 40C6h
  138 00:0000 -  -  -  -  _TanH			equ 40C9h
  139 00:0000 -  -  -  -  _cosh			equ 40CCh
  140 00:0000 -  -  -  -  _SinH			equ 40CFh
  141 00:0000 -  -  -  -  _ACosRad		equ 40D2h
  142 00:0000 -  -  -  -  _ATanRad		equ 40D5h
  143 00:0000 -  -  -  -  _ATan2Rad		equ 40D8h
  144 00:0000 -  -  -  -  _ASinRad		equ 40DBh
  145 00:0000 -  -  -  -  _ACos			equ 40DEh
  146 00:0000 -  -  -  -  _ATan			equ 40E1h
  147 00:0000 -  -  -  -  _ASin			equ 40E4h
  148 00:0000 -  -  -  -  _ATan2			equ 40E7h
  149 00:0000 -  -  -  -  _ATanH			equ 40EAh
  150 00:0000 -  -  -  -  _ASinH			equ 40EDh
  151 00:0000 -  -  -  -  _ACosH			equ 40F0h
  152 00:0000 -  -  -  -  _PtoR			equ 40F3h
  153 00:0000 -  -  -  -  _RToP			equ 40F6h
  154 00:0000 -  -  -  -  _HLTimes9		equ 40F9h
  155 00:0000 -  -  -  -  _CkOP1Cplx		equ 40FCh
  156 00:0000 -  -  -  -  _CkOP1Real		equ 40FFh
  157 00:0000 -  -  -  -  _Angle			equ 4102h
  158 00:0000 -  -  -  -  _COP1Set0		equ 4105h
  159 00:0000 -  -  -  -  _CpOP4OP3		equ 4108h
  160 00:0000 -  -  -  -  _Mov9OP2Cp		equ 410Bh
  161 00:0000 -  -  -  -  _AbsO1O2Cp		equ 410Eh
  162 00:0000 -  -  -  -  _cpop1op2		equ 4111h
  163 00:0000 -  -  -  -  _OP3ToOP4		equ 4114h
  164 00:0000 -  -  -  -  _OP1ToOP4		equ 4117h
  165 00:0000 -  -  -  -  _OP2ToOP4		equ 411Ah
  166 00:0000 -  -  -  -  _OP4ToOP2		equ 411Dh
  167 00:0000 -  -  -  -  _OP1ToOP3		equ 4123h
  168 00:0000 -  -  -  -  _OP5ToOP2		equ 4126h
  169 00:0000 -  -  -  -  _OP5ToOP6		equ 4129h
  170 00:0000 -  -  -  -  _OP5ToOP4		equ 412Ch
  171 00:0000 -  -  -  -  _OP1ToOP2		equ 412Fh
  172 00:0000 -  -  -  -  _OP6ToOP2		equ 4132h
  173 00:0000 -  -  -  -  _OP6ToOP1		equ 4135h
  174 00:0000 -  -  -  -  _OP4ToOP1		equ 4138h
  175 00:0000 -  -  -  -  _OP5ToOP1		equ 413Bh
  176 00:0000 -  -  -  -  _OP3ToOP1		equ 413Eh
  177 00:0000 -  -  -  -  _OP6ToOP5		equ 4141h
  178 00:0000 -  -  -  -  _OP4ToOP5		equ 4144h
  179 00:0000 -  -  -  -  _OP3ToOP5		equ 4147h
  180 00:0000 -  -  -  -  _OP2ToOP5		equ 414Ah
  181 00:0000 -  -  -  -  _OP2ToOP6		equ 414Dh
  182 00:0000 -  -  -  -  _OP1ToOP6		equ 4150h
  183 00:0000 -  -  -  -  _OP1ToOP5		equ 4153h
  184 00:0000 -  -  -  -  _OP2ToOP1		equ 4156h
  185 00:0000 -  -  -  -  _Mov11B			equ 4159h
  186 00:0000 -  -  -  -  _Mov10B			equ 415Ch
  187 00:0000 -  -  -  -  _Mov9B			equ 415Fh
  188 00:0000 -  -  -  -  _mov9B2			equ 4162h ;points to _mov9B
  189 00:0000 -  -  -  -  _Mov8B			equ 4165h
  190 00:0000 -  -  -  -  _Mov7B			equ 4168h
  191 00:0000 -  -  -  -  _Mov7B2			equ 416Bh ;same pointer as _Mov7B
  192 00:0000 -  -  -  -  _OP2ToOP3		equ 416Eh
  193 00:0000 -  -  -  -  _OP4ToOP3		equ 4171h
  194 00:0000 -  -  -  -  _OP5ToOP3		equ 4174h
  195 00:0000 -  -  -  -  _OP4ToOP6		equ 4177h
  196 00:0000 -  -  -  -  _Mov9ToOP1		equ 417Ah
  197 00:0000 -  -  -  -  _Mov9OP1OP2		equ 417Dh
  198 00:0000 -  -  -  -  _Mov9ToOP2		equ 4180h
  199 00:0000 -  -  -  -  _MovFrOP1		equ 4183h
  200 00:0000 -  -  -  -  _OP4Set1		equ 4186h
  201 00:0000 -  -  -  -  _OP3Set1		equ 4189h
  202 00:0000 -  -  -  -  _OP2Set8		equ 418Ch
  203 00:0000 -  -  -  -  _OP2Set5		equ 418Fh
  204 00:0000 -  -  -  -  _OP2SetA		equ 4192h
  205 00:0000 -  -  -  -  _OP2Set4		equ 4195h
  206 00:0000 -  -  -  -  _OP2Set3		equ 4198h
  207 00:0000 -  -  -  -  _OP1Set1		equ 419Bh
  208 00:0000 -  -  -  -  _OP1Set4		equ 419Eh
  209 00:0000 -  -  -  -  _OP1Set3		equ 41A1h
  210 00:0000 -  -  -  -  _OP3Set2		equ 41A4h
  211 00:0000 -  -  -  -  _OP1Set2		equ 41A7h
  212 00:0000 -  -  -  -  _OP2Set2		equ 41AAh
  213 00:0000 -  -  -  -  _OP2Set1		equ 41ADh
  214 00:0000 -  -  -  -  _Zero16D		equ 41B0h
  215 00:0000 -  -  -  -  _OP5Set0		equ 41B3h
  216 00:0000 -  -  -  -  _OP4Set0		equ 41B6h
  217 00:0000 -  -  -  -  _OP3Set0		equ 41B9h
  218 00:0000 -  -  -  -  _OP2Set0		equ 41BCh
  219 00:0000 -  -  -  -  _OP1Set0		equ 41BFh
  220 00:0000 -  -  -  -  _OPSet0			equ 41C2h ;hl = location to write floating point 0
  221 00:0000 -  -  -  -  _ZeroOP1		equ 41C5h
  222 00:0000 -  -  -  -  _ZeroOP2		equ 41C8h
  223 00:0000 -  -  -  -  _ZeroOP3		equ 41CBh
  224 00:0000 -  -  -  -  _ZeroOP			equ 41CEh
  225 00:0000 -  -  -  -  _ClrLp			equ 41D1h
  226 00:0000 -  -  -  -  _ShRAcc			equ 41D4h ;move high nibble in a to low nibble
  227 00:0000 -  -  -  -  _ShLAcc			equ 41D7h ;move low nibble in a to high nibble
  228 00:0000 -  -  -  -  _ShR18			equ 41DAh ;insert a 0 nibble at high nibble of (hl), shift 9 bytes 1 nibble to right
  229 00:0000 -  -  -  -  _SHR18A			equ 41DDh ;insert low nibble in a at high nibble of (hl), shift 9 bytes 1 nibble to right
  230 00:0000 -  -  -  -  _SHR16			equ 41E0h ;insert a 0 nibble at highnibble of (hl), shift 8 bytes 1 nibble to right
  231 00:0000 -  -  -  -  _SHR14			equ 41E3h ;insert low nibble in a at high nibble of (hl), shift 7 bytes 1 nibble to right
  232 00:0000 -  -  -  -  _SHL16			equ 41E6h ;insert nibble of 0 in low nibble of (hl), shift 8 bytes (before and including (hl)) to the left 1 nibble
  233 00:0000 -  -  -  -  _SHL14			equ 41E9h ;insert low nibble of a in low nibble of (hl), shift 7 bytes (before and including (hl)) to the left 1 nibble
  234 00:0000 -  -  -  -  _SRDO1			equ 41ECh
  235 00:0000 -  -  -  -  _SHRDRND		equ 41EFh
  236 00:0000 -  -  -  -  _MANTPA			equ 41F2h ;adds the value of a to hl which points to the end of the bcd 7 bytes long
  237 00:0000 -  -  -  -  _ADDPROP		equ 41F5h ;adds the value of a to hl which points to the end of the bcd (b bytes long)
  238 00:0000 -  -  -  -  _ADDPROPLP		equ 41F8h ;adds the value of a and carry to hl which points to the end of the bcd (b bytes long)
  239 00:0000 -  -  -  -  _ADD16D 		equ 41FBh ;adds the bcd numbers at (hl-7) and (de-7)
  240 00:0000 -  -  -  -  _ADD14D			equ 41FEh ;adds the bcd numbers at (hl-6) and (de-6)
  241 00:0000 -  -  -  -  _SUB16D			equ 4201h ;subtracts bcd numbers at (hl-7) and (de-7)
  242 00:0000 -  -  -  -  _SUB14D			equ 4204h ;subtracts bcd numbers at (hl-6) and (de-6)
  243 00:0000 -  -  -  -  _OP2ExOP6		equ 4207h
  244 00:0000 -  -  -  -  _OP5ExOP6		equ 420Ah
  245 00:0000 -  -  -  -  _OP1ExOP5		equ 420Dh
  246 00:0000 -  -  -  -  _OP1ExOP6		equ 4210h
  247 00:0000 -  -  -  -  _OP2ExOP4		equ 4213h
  248 00:0000 -  -  -  -  _OP2ExOP5		equ 4216h
  249 00:0000 -  -  -  -  _OP1ExOP3		equ 4219h
  250 00:0000 -  -  -  -  _OP1ExOP4		equ 421Ch
  251 00:0000 -  -  -  -  _OP1ExOP2		equ 421Fh
  252 00:0000 -  -  -  -  _ExLp			equ 4222h
  253 00:0000 -  -  -  -  _CkOP1C0		equ 4225h
  254 00:0000 -  -  -  -  _CkOP1FP0		equ 4228h
  255 00:0000 -  -  -  -  _CkOP2FP0		equ 422Bh
  256 00:0000 -  -  -  -  _PosNo0Int		equ 422Eh
  257 00:0000 -  -  -  -  _CKPosInt		equ 4231h
  258 00:0000 -  -  -  -  _CKInt			equ 4234h
  259 00:0000 -  -  -  -  _CKOdd			equ 4237h
  260 00:0000 -  -  -  -  _CKOP1M			equ 423Ah
  261 00:0000 -  -  -  -  _GETCONOP1		equ 423Dh ;a=0 opX=57.29577951308232 (1 radian in degrees)
  262 00:0000 -  -  -  -  _GETCONOP2		equ 4240h ;a=1 opX=1.570796326794897 (90 deg = pi/2)
  263 00:0000 -  -  -  -  				  ;a=2 opX=.7853981633974483 (45 deg = pi/4)
  264 00:0000 -  -  -  -  				  ;a=3 opX=.4342944819032518 (log e)
  265 00:0000 -  -  -  -  				  ;a=4 opX=3.141592653589800 (pi)
  266 00:0000 -  -  -  -  				  ;a=5 opX=.0174532925199433 (pi/180 = 1 degree in radians)
  267 00:0000 -  -  -  -  				  ;a=6 opX=2.302585092994046 (ln 10)
  268 00:0000 -  -  -  -  _PIDIV2			equ 4243h ;not code, but a pointer to:	.db 80h,15h,70h,79h,63h,26h,79h,48h,97h
  269 00:0000 -  -  -  -  _PIDIV4			equ 4246h ;				.db 7fh,78h,53h,98h,16h,33h,97h,44h,83h
  270 00:0000 -  -  -  -  _PItimes2		equ 4249h ;not code, but a pointer to a 2*pi in non-OP format (no exponent byte)
  271 00:0000 -  -  -  -  _PI			equ 424Ch ;not code, but a pointer to a pi in non-OP format (no exponent byte)
  272 00:0000 -  -  -  -  _ExpToHex		equ 424Fh
  273 00:0000 -  -  -  -  _OP1ExpToDec		equ 4252h
  274 00:0000 -  -  -  -  _ckop2pos		equ 4255h
  275 00:0000 -  -  -  -  _CkOP1Pos		equ 4258h
  276 00:0000 -  -  -  -  _ClrOP2S		equ 425Bh
  277 00:0000 -  -  -  -  _ClrOP1S		equ 425Eh
  278 00:0000 -  -  -  -  _FDIV100		equ 4261h ;op1=op1/100
  279 00:0000 -  -  -  -  _FDIV10			equ 4264h ;op1=op1/10
  280 00:0000 -  -  -  -  _DecO1Exp		equ 4267h ;decrease exponent by 1, this can go from 0 to FF
  281 00:0000 -  -  -  -  _INCO1EXP		equ 426Ah ;op1=op1*10
  282 00:0000 -  -  -  -  _INCEXP			equ 426Dh ;hl points to the floating point's exponent to be multiplied by 10
  283 00:0000 -  -  -  -  _CkValidNum		equ 4270h
  284 00:0000 -  -  -  -  _GETEXP			equ 4273h ;a=OP1's exponent, carry set if negative exponent, Z if e0
  285 00:0000 -  -  -  -  _HTimesL		equ 4276h
  286 00:0000 -  -  -  -  _EOP1NotReal		equ 4279h
  287 00:0000 -  -  -  -  _ThetaName		equ 427Ch
  288 00:0000 -  -  -  -  _RName			equ 427Fh
  289 00:0000 -  -  -  -  _REGEQNAME		equ 4282h
  290 00:0000 -  -  -  -  _RECURNNAME		equ 4285h
  291 00:0000 -  -  -  -  _XName			equ 4288h
  292 00:0000 -  -  -  -  _YName			equ 428Bh
  293 00:0000 -  -  -  -  _TName			equ 428Eh
  294 00:0000 -  -  -  -  _REALNAME		equ 4291h
  295 00:0000 -  -  -  -  _SETesTOfps		equ 4294h ;moves the word at fps to es
  296 00:0000 -  -  -  -  _markTableDirty		equ 4297h ;looks up table variable and marks VAT entry as "dirty" or selected
  297 00:0000 -  -  -  -  _OP1MOP2EXP		equ 429Ah ;op1's exponent = op1's expoent - op2's exponent
  298 00:0000 -  -  -  -  _OP1EXPMinusE		equ 429Dh ;a=(op1+1)-e
  299 00:0000 -  -  -  -  _CHKERRBREAK		equ 42A0h
  300 00:0000 -  -  -  -  _isA2ByteTok		equ 42A3h
  301 00:0000 -  -  -  -  _GETLASTENTRY		equ 42A6h
  302 00:0000 -  -  -  -  _GETLASTENTRYPTR	equ 42A9h
  303 00:0000 -  -  -  -  _REGCLRCHNG		equ 42ACh
  304 00:0000 -  -  -  -  _RESETWINTOP		equ 42AFh ;takes into account grfsplitoverride and grfsplit flags
  305 00:0000 -  -  -  -  _SetYUp			equ 42B2h ;loads 7 to port 10... what does this do?
  306 00:0000 -  -  -  -  _SetXUp			equ 42B5h ;loads 5 to port 10...
  307 00:0000 -  -  -  -  _ISO1NONTLSTorPROG	equ 42B8h ;checks if op1 contains a list, program, group, or appvar obj name
  308 00:0000 -  -  -  -  _ISO1NONTEMPLST		equ 42BBh ;checks if op1 contains a list (why would op1+1 contain 01, or 0d for a var name?)
  309 00:0000 -  -  -  -  _IS_A_LSTorCLST		equ 42BEh ;checks if a = 1 or 0Dh
  310 00:0000 -  -  -  -  _CHK_HL_999		equ 42C1h ;returns nc if less than 999, throws invalid dim error if greater than or equal to 999
  311 00:0000 -  -  -  -  _equ_or_newequ		equ 42C4h
  312 00:0000 -  -  -  -  _errd_op1notpos		equ 42C7h
  313 00:0000 -  -  -  -  _ErrD_OP1Not_R		equ 42CAh
  314 00:0000 -  -  -  -  _ErrD_OP1NotPosInt 	equ 42CDh
  315 00:0000 -  -  -  -  _ErrD_OP1_LE_0		equ 42D0h
  316 00:0000 -  -  -  -  _ErrD_OP1_0		equ 42D3h
  317 00:0000 -  -  -  -  _FINDSYM_GET_SIZE 	equ 42D6h ;like findsym, but on output hl is the size of the variable
  318 00:0000 -  -  -  -  _STO_STATVAR		equ 42D9h
  319 00:0000 -  -  -  -  _Rcl_StatVar		equ 42DCh
  320 00:0000 -  -  -  -  _CkOP2Real		equ 42DFh
  321 00:0000 -  -  -  -  _GET_X_INDIRECT		equ 42E2h ;whatever this is, it uses the imathptrX locations
  322 00:0000 -  -  -  -  _MemChk			equ 42E5h
  323 00:0000 -  -  -  -  _CMPPRGNAMLEN1		equ 42E8h ;gets variable name length from HL
  324 00:0000 -  -  -  -  _CMPPRGNAMLEN		equ 42EBh ;gets variable name length from OP1
  325 00:0000 -  -  -  -  _FINDPROGSYM		equ 42EEh ;find the program whose name is in op1 (see chkfindsym in SDK)
  326 00:0000 -  -  -  -  _ChkFindSym		equ 42F1h
  327 00:0000 -  -  -  -  _FindSym		equ 42F4h
  328 00:0000 -  -  -  -  _InsertMem		equ 42F7h
  329 00:0000 -  -  -  -  _INSERTMEMA		equ 42FAh ;not sure how this differs from insertmem
  330 00:0000 -  -  -  -  _EnoughMem		equ 42FDh
  331 00:0000 -  -  -  -  _CMPMEMNEED		equ 4300h
  332 00:0000 -  -  -  -  _CREATEPVAR4		equ 4303h
  333 00:0000 -  -  -  -  _CREATEPVAR3		equ 4306h
  334 00:0000 -  -  -  -  _CREATEVAR3		equ 4309h
  335 00:0000 -  -  -  -  _CreateCplx		equ 430Ch
  336 00:0000 -  -  -  -  _CreateReal		equ 430Fh
  337 00:0000 -  -  -  -  _CreateTempRList	equ 4312h
  338 00:0000 -  -  -  -  _CreateRList		equ 4315h
  339 00:0000 -  -  -  -  _CREATETCLIST		equ 4318h
  340 00:0000 -  -  -  -  _CreateCList		equ 431Bh
  341 00:0000 -  -  -  -  _CreateTempRMat		equ 431Eh
  342 00:0000 -  -  -  -  _CreateRMat		equ 4321h
  343 00:0000 -  -  -  -  _CreateTempString	equ 4324h
  344 00:0000 -  -  -  -  _CreateStrng		equ 4327h
  345 00:0000 -  -  -  -  _Create0Equ		equ 432Ah
  346 00:0000 -  -  -  -  _CreateTempEqu		equ 432Dh
  347 00:0000 -  -  -  -  _CreateEqu		equ 4330h
  348 00:0000 -  -  -  -  _CreatePict		equ 4333h
  349 00:0000 -  -  -  -  _CreateGDB		equ 4336h
  350 00:0000 -  -  -  -  _CreateProg		equ 4339h
  351 00:0000 -  -  -  -  _CHKDEL			equ 433Ch
  352 00:0000 -  -  -  -  _CHKDELA		equ 433Fh
  353 00:0000 -  -  -  -  _ADJPARSER		equ 4342h
  354 00:0000 -  -  -  -  _ADJMATH		equ 4345h
  355 00:0000 -  -  -  -  _ADJM7			equ 4348h
  356 00:0000 -  -  -  -  _DELMEMA		equ 434Bh
  357 00:0000 -  -  -  -  _GET_FORM_NUM		equ 434Eh
  358 00:0000 -  -  -  -  _DelVar			equ 4351h
  359 00:0000 -  -  -  -  _DELVARIO		equ 4354h
  360 00:0000 -  -  -  -  _DelMem			equ 4357h
  361 00:0000 -  -  -  -  _DELVAR3D		equ 435Ah
  362 00:0000 -  -  -  -  _DELVAR3C		equ 435Dh
  363 00:0000 -  -  -  -  _DELVAR3DC		equ 4360h ;may be incorrect
  364 00:0000 -  -  -  -  _IsFixedName		equ 4363h
  365 00:0000 -  -  -  -  _DelVarEntry		equ 4366h
  366 00:0000 -  -  -  -  _DataSizeA		equ 4369h
  367 00:0000 -  -  -  -  _DataSize		equ 436Ch
  368 00:0000 -  -  -  -  _POPMCPLXO1		equ 436Fh
  369 00:0000 -  -  -  -  _POPMCPLX		equ 4372h
  370 00:0000 -  -  -  -  _MOVCPLX		equ 4375h
  371 00:0000 -  -  -  -  _popOP5			equ 4378h
  372 00:0000 -  -  -  -  _popOP3			equ 437Bh
  373 00:0000 -  -  -  -  _popOP1			equ 437Eh
  374 00:0000 -  -  -  -  _PopRealO6		equ 4381h
  375 00:0000 -  -  -  -  _PopRealO5		equ 4384h
  376 00:0000 -  -  -  -  _PopRealO4		equ 4387h
  377 00:0000 -  -  -  -  _PopRealO3		equ 438Ah
  378 00:0000 -  -  -  -  _PopRealO2		equ 438Dh
  379 00:0000 -  -  -  -  _PopRealO1		equ 4390h
  380 00:0000 -  -  -  -  _PopReal		equ 4393h
  381 00:0000 -  -  -  -  _FPOPCPLX		equ 4396h
  382 00:0000 -  -  -  -  _FPOPREAL		equ 4399h
  383 00:0000 -  -  -  -  _FPOPFPS		equ 439Ch
  384 00:0000 -  -  -  -  _DeallocFPS		equ 439Fh
  385 00:0000 -  -  -  -  _DeallocFPS1		equ 43A2h
  386 00:0000 -  -  -  -  _AllocFPS		equ 43A5h
  387 00:0000 -  -  -  -  _AllocFPS1		equ 43A8h
  388 00:0000 -  -  -  -  _PushRealO6		equ 43ABh
  389 00:0000 -  -  -  -  _PushRealO5		equ 43AEh
  390 00:0000 -  -  -  -  _PushRealO4		equ 43B1h
  391 00:0000 -  -  -  -  _PushRealO3		equ 43B4h
  392 00:0000 -  -  -  -  _PushRealO2		equ 43B7h
  393 00:0000 -  -  -  -  _PushRealO1		equ 43BAh
  394 00:0000 -  -  -  -  _PushReal		equ 43BDh
  395 00:0000 -  -  -  -  _PushOP5		equ 43C0h
  396 00:0000 -  -  -  -  _PushOP3		equ 43C3h
  397 00:0000 -  -  -  -  _PUSHMCPLXO3		equ 43C6h
  398 00:0000 -  -  -  -  _PushOP1		equ 43C9h
  399 00:0000 -  -  -  -  _PUSHMCPLXO1		equ 43CCh
  400 00:0000 -  -  -  -  _PUSHMCPLX		equ 43CFh
  401 00:0000 -  -  -  -  _ExMCplxO1		equ 43D2h
  402 00:0000 -  -  -  -  _Exch9			equ 43D5h
  403 00:0000 -  -  -  -  _CpyTo1FPS11		equ 43D8h
  404 00:0000 -  -  -  -  _CpyTo2FPS5		equ 43DBh
  405 00:0000 -  -  -  -  _CpyTo1FPS5		equ 43DEh
  406 00:0000 -  -  -  -  _CpyTo2FPS6		equ 43E1h
  407 00:0000 -  -  -  -  _CpyTo1FPS6		equ 43E4h
  408 00:0000 -  -  -  -  _CpyTo2FPS7		equ 43E7h
  409 00:0000 -  -  -  -  _CpyTo1FPS7		equ 43EAh
  410 00:0000 -  -  -  -  _CpyTo1FPS8		equ 43EDh
  411 00:0000 -  -  -  -  _CpyTo2FPS8		equ 43F0h
  412 00:0000 -  -  -  -  _CpyTo1FPS10		equ 43F3h
  413 00:0000 -  -  -  -  _CpyTo1FPS9		equ 43F6h
  414 00:0000 -  -  -  -  _CpyTo2FPS4		equ 43F9h
  415 00:0000 -  -  -  -  _CpyTo6FPS3		equ 43FCh
  416 00:0000 -  -  -  -  _CpyTo6FPS2		equ 43FFh
  417 00:0000 -  -  -  -  _CpyTo2FPS3		equ 4402h
  418 00:0000 -  -  -  -  _CPYCTO1FPS3		equ 4405h
  419 00:0000 -  -  -  -  _CpyTo1FPS3		equ 4408h
  420 00:0000 -  -  -  -  _CPYFPS3		equ 440Bh
  421 00:0000 -  -  -  -  _CpyTo1FPS4		equ 440Eh
  422 00:0000 -  -  -  -  _CpyTo3FPS2		equ 4411h
  423 00:0000 -  -  -  -  _CpyTo5FPST		equ 4414h
  424 00:0000 -  -  -  -  _CpyTo6FPST		equ 4417h
  425 00:0000 -  -  -  -  _CpyTo4FPST		equ 441Ah
  426 00:0000 -  -  -  -  _CpyTo3FPST		equ 441Dh
  427 00:0000 -  -  -  -  _CpyTo2FPST		equ 4420h
  428 00:0000 -  -  -  -  _CpyTo1FPST		equ 4423h
  429 00:0000 -  -  -  -  _CPYFPST		equ 4426h
  430 00:0000 -  -  -  -  _CpyStack		equ 4429h
  431 00:0000 -  -  -  -  _CpyTo3FPS1		equ 442Ch
  432 00:0000 -  -  -  -  _CpyTo2FPS1		equ 442Fh
  433 00:0000 -  -  -  -  _CpyTo1FPS1		equ 4432h
  434 00:0000 -  -  -  -  _CPYFPS1		equ 4435h
  435 00:0000 -  -  -  -  _CpyTo2FPS2		equ 4438h
  436 00:0000 -  -  -  -  _CpyTo1FPS2		equ 443Bh
  437 00:0000 -  -  -  -  _CPYFPS2		equ 443Eh
  438 00:0000 -  -  -  -  _CpyO3ToFPST		equ 4441h
  439 00:0000 -  -  -  -  _CpyO2ToFPST		equ 4444h
  440 00:0000 -  -  -  -  _CpyO6ToFPST		equ 4447h
  441 00:0000 -  -  -  -  _CpyO1ToFPST		equ 444Ah
  442 00:0000 -  -  -  -  _CpyToFPST		equ 444Dh
  443 00:0000 -  -  -  -  _CpyToStack		equ 4450h
  444 00:0000 -  -  -  -  _CpyO3ToFPS1		equ 4453h
  445 00:0000 -  -  -  -  _CpyO5ToFPS1		equ 4456h
  446 00:0000 -  -  -  -  _CpyO2ToFPS1		equ 4459h
  447 00:0000 -  -  -  -  _CpyO1ToFPS1		equ 445Ch
  448 00:0000 -  -  -  -  _CpyToFPS1		equ 445Fh
  449 00:0000 -  -  -  -  _CpyO2ToFPS2		equ 4462h
  450 00:0000 -  -  -  -  _CpyO3ToFPS2		equ 4465h
  451 00:0000 -  -  -  -  _CpyO6ToFPS2		equ 4468h
  452 00:0000 -  -  -  -  _CpyO1ToFPS2		equ 446Bh
  453 00:0000 -  -  -  -  _CpyToFPS2		equ 446Eh
  454 00:0000 -  -  -  -  _CpyO5ToFPS3		equ 4471h
  455 00:0000 -  -  -  -  _CpyO2ToFPS3		equ 4474h
  456 00:0000 -  -  -  -  _CpyO1ToFPS3		equ 4477h
  457 00:0000 -  -  -  -  _CpyToFPS3		equ 447Ah
  458 00:0000 -  -  -  -  _CpyO1ToFPS6		equ 447Dh
  459 00:0000 -  -  -  -  _CpyO1ToFPS7		equ 4480h
  460 00:0000 -  -  -  -  _CpyO1ToFPS5		equ 4483h
  461 00:0000 -  -  -  -  _CpyO2ToFPS4		equ 4486h
  462 00:0000 -  -  -  -  _CpyO1ToFPS4		equ 4489h
  463 00:0000 -  -  -  -  _ErrNotEnoughMem 	equ 448Ch ;only if not HL bytes free
  464 00:0000 -  -  -  -  _FPSMINUS9		equ 448Fh
  465 00:0000 -  -  -  -  _HLMINUS9		equ 4492h
  466 00:0000 -  -  -  -  _ErrOverflow		equ 4495h
  467 00:0000 -  -  -  -  _ErrDivBy0		equ 4498h
  468 00:0000 -  -  -  -  _ErrSingularMat		equ 449Bh
  469 00:0000 -  -  -  -  _ErrDomain		equ 449Eh
  470 00:0000 -  -  -  -  _ErrIncrement		equ 44A1h
  471 00:0000 -  -  -  -  _ErrNon_Real		equ 44A4h
  472 00:0000 -  -  -  -  _ErrSyntax		equ 44A7h
  473 00:0000 -  -  -  -  _ErrDataType		equ 44AAh
  474 00:0000 -  -  -  -  _ErrArgument		equ 44ADh
  475 00:0000 -  -  -  -  _ErrDimMismatch		equ 44B0h
  476 00:0000 -  -  -  -  _ErrDimension		equ 44B3h
  477 00:0000 -  -  -  -  _ErrUndefined		equ 44B6h
  478 00:0000 -  -  -  -  _ErrMemory		equ 44B9h
  479 00:0000 -  -  -  -  _ErrInvalid		equ 44BCh
  480 00:0000 -  -  -  -  _ErrBreak		equ 44BFh
  481 00:0000 -  -  -  -  _ErrStat		equ 44C2h
  482 00:0000 -  -  -  -  _ErrSignChange		equ 44C5h
  483 00:0000 -  -  -  -  _ErrIterations		equ 44C8h
  484 00:0000 -  -  -  -  _ErrBadGuess		equ 44CBh
  485 00:0000 -  -  -  -  _ErrTolTooSmall		equ 44CEh
  486 00:0000 -  -  -  -  _ErrStatPlot		equ 44D1h
  487 00:0000 -  -  -  -  _ErrLinkXmit		equ 44D4h
  488 00:0000 -  -  -  -  _JError			equ 44D7h
  489 00:0000 -  -  -  -  _noErrorEntry		equ 44DAh
  490 00:0000 -  -  -  -  _pushErrorHandleR	equ 44DDh
  491 00:0000 -  -  -  -  _popErrorHandleR	equ 44E0h
  492 00:0000 -  -  -  -  _strcopy		equ 44E3h
  493 00:0000 -  -  -  -  _strCat			equ 44E6h
  494 00:0000 -  -  -  -  _isInSet		equ 44E9h
  495 00:0000 -  -  -  -  _sDone			equ 44ECh ;this should actually be called _SetEquToOP1
  496 00:0000 -  -  -  -  _serrort		equ 44EFh
  497 00:0000 -  -  -  -  _sNameEq		equ 44F2h
  498 00:0000 -  -  -  -  _sUnderScr		equ 44F5h
  499 00:0000 -  -  -  -  _sFAIL			equ 44F8h
  500 00:0000 -  -  -  -  _sName			equ 44FBh
  501 00:0000 -  -  -  -  _sOK			equ 44FEh
  502 00:0000 -  -  -  -  _PutMap			equ 4501h
  503 00:0000 -  -  -  -  _PutC			equ 4504h
  504 00:0000 -  -  -  -  _DispHL			equ 4507h
  505 00:0000 -  -  -  -  _PutS			equ 450Ah
  506 00:0000 -  -  -  -  _putpsb			equ 450Dh
  507 00:0000 -  -  -  -  _PutPS			equ 4510h
  508 00:0000 -  -  -  -  _wputps			equ 4513h
  509 00:0000 -  -  -  -  _putbuf			equ 4516h
  510 00:0000 -  -  -  -  _putbuf1		equ 4519h
  511 00:0000 -  -  -  -  _wputc			equ 451Ch
  512 00:0000 -  -  -  -  _wputs			equ 451Fh
  513 00:0000 -  -  -  -  _wputsEOL		equ 4522h ;displays string in HL in big font, and uses ... if too long
  514 00:0000 -  -  -  -  _wdispEOL		equ 4525h
  515 00:0000 -  -  -  -  _whomeup		equ 4528h
  516 00:0000 -  -  -  -  _setNumWindow		equ 452Bh ;based on current cursor position, sets winleft and similar (for input prompts)
  517 00:0000 -  -  -  -  _newline		equ 452Eh
  518 00:0000 -  -  -  -  _moveDown		equ 4531h
  519 00:0000 -  -  -  -  _scrollUp		equ 4534h
  520 00:0000 -  -  -  -  _shrinkWindow		equ 4537h
  521 00:0000 -  -  -  -  _moveUp			equ 453Ah
  522 00:0000 -  -  -  -  _scrollDown		equ 453Dh
  523 00:0000 -  -  -  -  _ClrLCDFull		equ 4540h
  524 00:0000 -  -  -  -  _ClrLCD			equ 4543h
  525 00:0000 -  -  -  -  _ClrScrnFull		equ 4546h
  526 00:0000 -  -  -  -  _ClrScrn		equ 4549h
  527 00:0000 -  -  -  -  _ClrTxtShd		equ 454Ch
  528 00:0000 -  -  -  -  _ClrWindow		equ 454Fh
  529 00:0000 -  -  -  -  _EraseEOL		equ 4552h
  530 00:0000 -  -  -  -  _EraseEOW		equ 4555h
  531 00:0000 -  -  -  -  _HomeUp			equ 4558h
  532 00:0000 -  -  -  -  _getcurloc		equ 455Bh
  533 00:0000 -  -  -  -  _VPutMap		equ 455Eh
  534 00:0000 -  -  -  -  _VPutS			equ 4561h
  535 00:0000 -  -  -  -  _VPutSN			equ 4564h
  536 00:0000 -  -  -  -  _vputsnG		equ 4567h
  537 00:0000 -  -  -  -  _vputsnT		equ 456Ah
  538 00:0000 -  -  -  -  _RunIndicOn		equ 456Dh
  539 00:0000 -  -  -  -  _RunIndicOff		equ 4570h
  540 00:0000 -  -  -  -  _saveCmdShadow		equ 4573h
  541 00:0000 -  -  -  -  _saveShadow		equ 4576h
  542 00:0000 -  -  -  -  _rstrShadow		equ 4579h
  543 00:0000 -  -  -  -  _rstrpartial		equ 457Ch
  544 00:0000 -  -  -  -  _rstrCurRow		equ 457Fh
  545 00:0000 -  -  -  -  _rstrUnderMenu		equ 4582h
  546 00:0000 -  -  -  -  _rstrbotrow		equ 4585h
  547 00:0000 -  -  -  -  _saveTR			equ 4588h ;save top right corner of LCD so 2nd arrow can be displayed, indicinuse flag must be set
  548 00:0000 -  -  -  -  _restoreTR		equ 458Bh ;restore top right corner of LCD destroyed by an arrow. indicinuse flag must be set
  549 00:0000 -  -  -  -  _GetKeyPress		equ 458Eh
  550 00:0000 -  -  -  -  _GetTokLen		equ 4591h ;input: hl=pointer to token. output: a=lenght of string, hl=pointer to string on page 1
  551 00:0000 -  -  -  -  _GET_TOK_STRNG		equ 4594h ;input: hl=pointer to token. output: op3=string of the token, a=length of string
  552 00:0000 -  -  -  -  _GETTOKSTRING		equ 4597h ;input: DE=token. output: hl=pointer to the string on page 1
  553 00:0000 -  -  -  -  _PUTBPATBUF2		equ 459Ah
  554 00:0000 -  -  -  -  _PUTBPATBUF		equ 459Dh
  555 00:0000 -  -  -  -  _putbPAT		equ 45A0h
  556 00:0000 -  -  -  -  _putcCheckScrolL	equ 45A3h
  557 00:0000 -  -  -  -  _DispEOL		equ 45A6h
  558 00:0000 -  -  -  -  _fdispEOL		equ 45A9h
  559 00:0000 -  -  -  -  _MAKEROWCMD		equ 45ACh
  560 00:0000 -  -  -  -  _TOTOSTRP		equ 45AFh
  561 00:0000 -  -  -  -  _SETVARNAME		equ 45B2h
  562 00:0000 -  -  -  -  _DispDone		equ 45B5h
  563 00:0000 -  -  -  -  _finishoutput		equ 45B8h
  564 00:0000 -  -  -  -  _curBlink		equ 45BBh
  565 00:0000 -  -  -  -  _CursorOff		equ 45BEh
  566 00:0000 -  -  -  -  _hideCursor		equ 45C1h
  567 00:0000 -  -  -  -  _CursorOn		equ 45C4h
  568 00:0000 -  -  -  -  _showCursor		equ 45C7h
  569 00:0000 -  -  -  -  _KeyToString		equ 45CAh
  570 00:0000 -  -  -  -  _PULLDOWNCHK		equ 45CDh ;something wrong here
  571 00:0000 -  -  -  -  _MenuCatCommon		equ 45D0h
  572 00:0000 -  -  -  -  _ZIfCatalog		equ 45D3h
  573 00:0000 -  -  -  -  _ZIfMatrixMenu		equ 45D6h ;_loadCurCat
  574 00:0000 -  -  -  -  _LoadMenuNum		equ 45D9h
  575 00:0000 -  -  -  -  _LoadMenuNumL		equ 45DCh
  576 00:0000 -  -  -  -  _MenCatRet		equ 45DFh ;restores display as though a menu were just cleared (restores some flags too)
  577 00:0000 -  -  -  -  _MenuSwitchContext	equ 45E2h ;switches to context in A, calls menu hook with A=3, set 5,(iy+16h) for some sort of override to not make switch
  578 00:0000 -  -  -  -  _MenuEdKey		equ 45E5h
  579 00:0000 -  -  -  -  _BackUpGraphSettings	equ 45E8h
  580 00:0000 -  -  -  -  _notalphnum		equ 45EBh
  581 00:0000 -  -  -  -  _SaveSavedFlags		equ 45EEh
  582 00:0000 -  -  -  -  _SetMenuFlags		equ 45F1h
  583 00:0000 -  -  -  -  _RstrSomeFlags		equ 45F4h
  584 00:0000 -  -  -  -  _RstrOScreen		equ 45F7h ;restores saveSScreen to the display
  585 00:0000 -  -  -  -  _SaveOScreen		equ 45FAh ;stores display in saveSScreen
  586 00:0000 -  -  -  -  _dispListName		equ 45FDh ;_SeeIfErrorCx
  587 00:0000 -  -  -  -  _PrevContext		equ 4600h
  588 00:0000 -  -  -  -  _CompareContext		equ 4603h
  589 00:0000 -  -  -  -  _AdrMRow		equ 4606h
  590 00:0000 -  -  -  -  _AdrMEle		equ 4609h
  591 00:0000 -  -  -  -  _GETMATOP1A		equ 460Ch
  592 00:0000 -  -  -  -  _GETM1TOOP1		equ 460Fh
  593 00:0000 -  -  -  -  _GETM1TOP1A		equ 4612h
  594 00:0000 -  -  -  -  _GetMToOP1		equ 4615h
  595 00:0000 -  -  -  -  _PUTTOM1A		equ 4618h
  596 00:0000 -  -  -  -  _PUTTOMA1		equ 461Bh
  597 00:0000 -  -  -  -  _PutToMat		equ 461Eh
  598 00:0000 -  -  -  -  _MAT_EL_DIV		equ 4621h
  599 00:0000 -  -  -  -  _CMATFUN		equ 4624h
  600 00:0000 -  -  -  -  _ROWECH_POLY		equ 4627h
  601 00:0000 -  -  -  -  _ROWECHELON		equ 462Ah
  602 00:0000 -  -  -  -  _AdrLEle		equ 462Dh
  603 00:0000 -  -  -  -  _GETL1TOOP1		equ 4630h
  604 00:0000 -  -  -  -  _GETL1TOP1A		equ 4633h
  605 00:0000 -  -  -  -  _GetLToOP1		equ 4636h
  606 00:0000 -  -  -  -  _GETL1TOOP2		equ 4639h
  607 00:0000 -  -  -  -  _GETL1TOP2A		equ 463Ch
  608 00:0000 -  -  -  -  _GETL2TOP1A		equ 463Fh
  609 00:0000 -  -  -  -  _PUTTOLA1		equ 4642h
  610 00:0000 -  -  -  -  _PutToL			equ 4645h
  611 00:0000 -  -  -  -  _MAXMINLST		equ 4648h
  612 00:0000 -  -  -  -  _LLOW			equ 464Bh
  613 00:0000 -  -  -  -  _LHIGH			equ 464Eh
  614 00:0000 -  -  -  -  _LSUM			equ 4651h
  615 00:0000 -  -  -  -  CUMSUM			equ 4654h
  616 00:0000 -  -  -  -  _ToFrac			equ 4657h
  617 00:0000 -  -  -  -  _SEQSET			equ 465Ah
  618 00:0000 -  -  -  -  _SEQSOLVE		equ 465Dh
  619 00:0000 -  -  -  -  _CMP_NUM_INIT		equ 4660h
  620 00:0000 -  -  -  -  _BinOPExec		equ 4663h
  621 00:0000 -  -  -  -  _EXMEAN1		equ 4666h
  622 00:0000 -  -  -  -  _SET2MVLPTRS		equ 4669h
  623 00:0000 -  -  -  -  _SETMAT1		equ 466Ch
  624 00:0000 -  -  -  -  _CREATETLIST		equ 466Fh
  625 00:0000 -  -  -  -  _UnOPExec		equ 4672h
  626 00:0000 -  -  -  -  _ThreeExec		equ 4675h
  627 00:0000 -  -  -  -  _RESTOREERRNO		equ 4678h
  628 00:0000 -  -  -  -  _FourExec		equ 467Bh
  629 00:0000 -  -  -  -  _FiveExec		equ 467Eh
  630 00:0000 -  -  -  -  _CPYTO2ES1		equ 4681h
  631 00:0000 -  -  -  -  _CPYTO6ES1		equ 4684h
  632 00:0000 -  -  -  -  _CPYTO1ES1		equ 4687h
  633 00:0000 -  -  -  -  _CPYTO3ES1		equ 468Ah
  634 00:0000 -  -  -  -  _CPYTO3ES2		equ 468Dh
  635 00:0000 -  -  -  -  _CPYTO2ES2		equ 4690h
  636 00:0000 -  -  -  -  _CPYTO1ES2		equ 4693h
  637 00:0000 -  -  -  -  _CPYTO2ES3		equ 4696h
  638 00:0000 -  -  -  -  _CPYTO1ES3		equ 4699h
  639 00:0000 -  -  -  -  _CPYTO3ES4		equ 469Ch
  640 00:0000 -  -  -  -  _CPYTO6ES3		equ 469Fh
  641 00:0000 -  -  -  -  _CPYTO2ES4		equ 46A2h
  642 00:0000 -  -  -  -  _CPYTO1ES4		equ 46A5h
  643 00:0000 -  -  -  -  _CPYTO2ES5		equ 46A8h
  644 00:0000 -  -  -  -  _CPYTO1ES5		equ 46ABh
  645 00:0000 -  -  -  -  _CPYTO4EST		equ 46AEh
  646 00:0000 -  -  -  -  _CPYTO2EST		equ 46B1h
  647 00:0000 -  -  -  -  _CPYTO1EST		equ 46B4h
  648 00:0000 -  -  -  -  _CPYTO2ES6		equ 46B7h
  649 00:0000 -  -  -  -  _CPYTO1ES6		equ 46BAh
  650 00:0000 -  -  -  -  _CPYTO2ES7		equ 46BDh
  651 00:0000 -  -  -  -  _CPYTO1ES7		equ 46C0h
  652 00:0000 -  -  -  -  _CPYTO2ES8		equ 46C3h
  653 00:0000 -  -  -  -  _CPYTO1ES8		equ 46C6h
  654 00:0000 -  -  -  -  _CPYTO1ES9		equ 46C9h
  655 00:0000 -  -  -  -  _CPYTO2ES9		equ 46CCh
  656 00:0000 -  -  -  -  _CPYTO2ES10		equ 46CFh
  657 00:0000 -  -  -  -  _CPYTO1ES10		equ 46D2h
  658 00:0000 -  -  -  -  _CPYTO2ES11		equ 46D5h
  659 00:0000 -  -  -  -  _CPYTO1ES11		equ 46D8h
  660 00:0000 -  -  -  -  _CPYTO2ES12		equ 46DBh
  661 00:0000 -  -  -  -  _CPYTO1ES12		equ 46DEh
  662 00:0000 -  -  -  -  _CPYTO2ES13		equ 46E1h
  663 00:0000 -  -  -  -  _CPYTO1ES13		equ 46E4h
  664 00:0000 -  -  -  -  _CPYTO1ES14		equ 46E7h
  665 00:0000 -  -  -  -  _CPYTO1ES16		equ 46EAh
  666 00:0000 -  -  -  -  _CPYTO1ES17		equ 46EDh
  667 00:0000 -  -  -  -  _CPYTO1ES18		equ 46F0h
  668 00:0000 -  -  -  -  _CPYTO1ES15		equ 46F3h
  669 00:0000 -  -  -  -  _CPYTO2ES15		equ 46F6h
  670 00:0000 -  -  -  -  _CPYO1TOEST		equ 46F9h
  671 00:0000 -  -  -  -  _CPYO1TOES1		equ 46FCh
  672 00:0000 -  -  -  -  _CPYO6TOES1		equ 46FFh
  673 00:0000 -  -  -  -  _CPYO6TOES3		equ 4702h
  674 00:0000 -  -  -  -  _CPYO1TOES2		equ 4705h
  675 00:0000 -  -  -  -  _CPYO2TOES2		equ 4708h
  676 00:0000 -  -  -  -  _CPYO1TOES3		equ 470Bh
  677 00:0000 -  -  -  -  _CPYO1TOES4		equ 470Eh
  678 00:0000 -  -  -  -  _CPYO1TOES5		equ 4711h
  679 00:0000 -  -  -  -  _CPYO1TOES6		equ 4714h
  680 00:0000 -  -  -  -  _CPYO1TOES7		equ 4717h
  681 00:0000 -  -  -  -  _CPYO2TOES4		equ 471Ah
  682 00:0000 -  -  -  -  _CPYO2TOES5		equ 471Dh
  683 00:0000 -  -  -  -  _CPYO2TOES6		equ 4720h
  684 00:0000 -  -  -  -  _CPYO2TOES7		equ 4723h
  685 00:0000 -  -  -  -  _CPYO2TOES8		equ 4726h
  686 00:0000 -  -  -  -  _CPYO2TOES9		equ 4729h
  687 00:0000 -  -  -  -  _CPYO1TOES8		equ 472Ch
  688 00:0000 -  -  -  -  _CPYO1TOES9		equ 472Fh
  689 00:0000 -  -  -  -  _CPYO1TOES10		equ 4732h
  690 00:0000 -  -  -  -  _CPYO1TOES11		equ 4735h
  691 00:0000 -  -  -  -  _CPYO1TOES12		equ 4738h
  692 00:0000 -  -  -  -  _CPYO1TOES13		equ 473Bh
  693 00:0000 -  -  -  -  _CPYO1TOES14		equ 473Eh
  694 00:0000 -  -  -  -  _CPYO1TOES15		equ 4741h
  695 00:0000 -  -  -  -  _EVALF3A		equ 4744h
  696 00:0000 -  -  -  -  _GetK			equ 4747h ;?
  697 00:0000 -  -  -  -  _setTitle               equ 474Ah
  698 00:0000 -  -  -  -  _dispVarVal		equ 474Dh
  699 00:0000 -  -  -  -  _RecallEd		equ 4750h ;_setupBuffer
  700 00:0000 -  -  -  -  _createNumEditBuf	equ 4753h
  701 00:0000 -  -  -  -  _ProcessBufKeys		equ 4756h ;may be default key processing like [CLEAR], etc. especially for an edit buffer.
  702 00:0000 -  -  -  -  _CallCommon		equ 4759h
  703 00:0000 -  -  -  -  _CommonKeys		equ 475Ch
  704 00:0000 -  -  -  -  _Leftmore		equ 475Fh
  705 00:0000 -  -  -  -  _fDel			equ 4762h
  706 00:0000 -  -  -  -  _fClear			equ 4765h
  707 00:0000 -  -  -  -  _finsDisp		equ 4768h ;Michael says _FinsDisp02 equ 4768h (something's not right)
  708 00:0000 -  -  -  -  _FinsDisp02		equ 476Bh ;_setIndicator
  709 00:0000 -  -  -  -  _closeeditbufnor	equ 476Eh
  710 00:0000 -  -  -  -  _releaseBuffer		equ 4771h
  711 00:0000 -  -  -  -  _varnameToOP1hl		equ 4774h
  712 00:0000 -  -  -  -  _nameToOP1		equ 4777h
  713 00:0000 -  -  -  -  _numPPutAway		equ 477Ah
  714 00:0000 -  -  -  -  _numRedisp		equ 477Dh
  715 00:0000 -  -  -  -  _numError02		equ 4780h
  716 00:0000 -  -  -  -  _Load_SFont		equ 4783h
  717 00:0000 -  -  -  -  _SFont_Len		equ 4786h
  718 00:0000 -  -  -  -  _InitNumVec		equ 4789h ;inits window settings/table setup/finance solver context (dialog-like)
  719 00:0000 -  -  -  -  _SetXXOP1		equ 478Ch
  720 00:0000 -  -  -  -  _SetXXOP2		equ 478Fh
  721 00:0000 -  -  -  -  _SetXXXXOP2		equ 4792h
  722 00:0000 -  -  -  -  _UCLineS		equ 4795h
  723 00:0000 -  -  -  -  _CLine			equ 4798h
  724 00:0000 -  -  -  -  _CLineS			equ 479Bh
  725 00:0000 -  -  -  -  _XRootY			equ 479Eh
  726 00:0000 -  -  -  -  _YToX			equ 47A1h
  727 00:0000 -  -  -  -  _ZmStats		equ 47A4h
  728 00:0000 -  -  -  -  _POINT_STAT_HLP		equ 47A7h
  729 00:0000 -  -  -  -  _DRAWSPLOT		equ 47AAh
  730 00:0000 -  -  -  -  _INITNEWTRACEP		equ 47ADh ;A is input here, goes to (8E63h)
  731 00:0000 -  -  -  -  _SPLOTCOORD		equ 47B0h
  732 00:0000 -  -  -  -  _SPLOTRIGHT		equ 47B3h
  733 00:0000 -  -  -  -  _SPLOTLEFT		equ 47B6h
  734 00:0000 -  -  -  -  _CMPBOXINFO		equ 47B9h
  735 00:0000 -  -  -  -  _NEXTPLOT		equ 47BCh
  736 00:0000 -  -  -  -  _PREVPLOT		equ 47BFh
  737 00:0000 -  -  -  -  _CLRPREVPLOT		equ 47C2h
  738 00:0000 -  -  -  -  _PUT_INDEX_LST		equ 47C5h
  739 00:0000 -  -  -  -  _GET_INDEX_LST		equ 47C8h
  740 00:0000 -  -  -  -  _HEAP_SORT		equ 47CBh
  741 00:0000 -  -  -  -  _StoGDB2		equ 47CEh
  742 00:0000 -  -  -  -  _RclGDB2		equ 47D1h
  743 00:0000 -  -  -  -  _CircCmd		equ 47D4h
  744 00:0000 -  -  -  -  _GrphCirc		equ 47D7h
  745 00:0000 -  -  -  -  _Mov18B			equ 47DAh
  746 00:0000 -  -  -  -  _DarkLine		equ 47DDh
  747 00:0000 -  -  -  -  _ILine			equ 47E0h
  748 00:0000 -  -  -  -  _IPoint			equ 47E3h
  749 00:0000 -  -  -  -  _XYRNDBOTH		equ 47E6h
  750 00:0000 -  -  -  -  _XYRND			equ 47E9h
  751 00:0000 -  -  -  -  _CheckTOP		equ 47ECh
  752 00:0000 -  -  -  -  _CheckXY		equ 47EFh
  753 00:0000 -  -  -  -  _DarkPnt		equ 47F2h
  754 00:0000 -  -  -  -  _CPointS		equ 47F5h
  755 00:0000 -  -  -  -  _WTOV			equ 47F8h
  756 00:0000 -  -  -  -  _VtoWHLDE		equ 47FBh
  757 00:0000 -  -  -  -  _Xitof			equ 47FEh
  758 00:0000 -  -  -  -  _YftoI			equ 4801h
  759 00:0000 -  -  -  -  _XftoI			equ 4804h
  760 00:0000 -  -  -  -  _TraceOff		equ 4807h
  761 00:0000 -  -  -  -  _GrRedisp		equ 480Ah
  762 00:0000 -  -  -  -  _GDISPTOKEN		equ 480Dh
  763 00:0000 -  -  -  -  _GRDECODA		equ 4810h
  764 00:0000 -  -  -  -  _LABCOOR		equ 4813h ;draws labels with _GRLABELS and X/Y/whatever coordinates, including stat plot stuff
  765 00:0000 -  -  -  -  _COORDISP		equ 4816h ;draws X & Y coordinates (or R and theta if PolarGC)
  766 00:0000 -  -  -  -  _TMPEQUNOSRC		equ 4819h
  767 00:0000 -  -  -  -  _GRLABELS		equ 481Ch
  768 00:0000 -  -  -  -  _YPIXSET		equ 481Fh
  769 00:0000 -  -  -  -  _XPIXSET		equ 4822h
  770 00:0000 -  -  -  -  _COPYRNG		equ 4825h
  771 00:0000 -  -  -  -  _VALCUR			equ 4828h ;just sets/resets three flags, enables graph cursor
  772 00:0000 -  -  -  -  _GRPUTAWAY		equ 482Bh
  773 00:0000 -  -  -  -  _RSTGFLAGS		equ 482Eh
  774 00:0000 -  -  -  -  _GRReset		equ 4831h
  775 00:0000 -  -  -  -  _XYCENT			equ 4834h
  776 00:0000 -  -  -  -  _ZOOMXYCMD		equ 4837h
  777 00:0000 -  -  -  -  _CPTDELY		equ 483Ah
  778 00:0000 -  -  -  -  _CPTDELX		equ 483Dh
  779 00:0000 -  -  -  -  _SetFuncM		equ 4840h
  780 00:0000 -  -  -  -  _SetSeqM		equ 4843h
  781 00:0000 -  -  -  -  _SetPolM		equ 4846h
  782 00:0000 -  -  -  -  _SetParM		equ 4849h
  783 00:0000 -  -  -  -  _ZmInt			equ 484Ch
  784 00:0000 -  -  -  -  _ZmDecml		equ 484Fh
  785 00:0000 -  -  -  -  _ZmPrev			equ 4852h
  786 00:0000 -  -  -  -  _ZmUsr			equ 4855h
  787 00:0000 -  -  -  -  _SETUZM			equ 4858h
  788 00:0000 -  -  -  -  _ZmFit			equ 485Bh
  789 00:0000 -  -  -  -  _ZmSquare		equ 485Eh
  790 00:0000 -  -  -  -  _ZmTrig			equ 4861h
  791 00:0000 -  -  -  -  _SetXMinMax		equ 4864h
  792 00:0000 -  -  -  -  _ZooDefault		equ 4867h
  793 00:0000 -  -  -  -  _GrBufCpy		equ 486Ah
  794 00:0000 -  -  -  -  _DRAWSPLITLINE		equ 486Dh
  795 00:0000 -  -  -  -  _RestoreDisp		equ 4870h
  796 00:0000 -  -  -  -  _FNDDB			equ 4873h
  797 00:0000 -  -  -  -  _AllEq			equ 4876h
  798 00:0000 -  -  -  -  _fndallseleq		equ 4879h
  799 00:0000 -  -  -  -  _NEXTEQ			equ 487Ch
  800 00:0000 -  -  -  -  _PREVEQ			equ 487Fh
  801 00:0000 -  -  -  -  _BLINKGCUR		equ 4882h
  802 00:0000 -  -  -  -  _NBCURSOR		equ 4885h
  803 00:0000 -  -  -  -  _STATMARK		equ 4888h
  804 00:0000 -  -  -  -  _CHKTEXTCURS		equ 488Bh
  805 00:0000 -  -  -  -  _Regraph		equ 488Eh
  806 00:0000 -  -  -  -  _DOREFFLAGS02		equ 4891h ;something wrong here
  807 00:0000 -  -  -  -  INITNSEQ		equ 4894h
  808 00:0000 -  -  -  -  _YRES			equ 4897h ;_PLOTPTXY2
  809 00:0000 -  -  -  -  _Ceiling		equ 489Ah ;ceil(OP1)
  810 00:0000 -  -  -  -  _PutXY			equ 489Dh ;draws X & Y coordinates (regardless of PolarGC)
  811 00:0000 -  -  -  -  _PUTEQUNO		equ 48A0h
  812 00:0000 -  -  -  -  _PDspGrph		equ 48A3h
  813 00:0000 -  -  -  -  _HorizCmd		equ 48A6h
  814 00:0000 -  -  -  -  _VertCmd		equ 48A9h
  815 00:0000 -  -  -  -  _LineCmd		equ 48ACh
  816 00:0000 -  -  -  -  _UnLineCmd		equ 48AFh
  817 00:0000 -  -  -  -  _PointCmd		equ 48B2h
  818 00:0000 -  -  -  -  _PixelTest		equ 48B5h
  819 00:0000 -  -  -  -  _PixelCmd  		equ 48B8h
  820 00:0000 -  -  -  -  _TanLnF			equ 48BBh
  821 00:0000 -  -  -  -  _DRAWCMD_INIT		equ 48BEh
  822 00:0000 -  -  -  -  _DrawCmd		equ 48C1h
  823 00:0000 -  -  -  -  _SHADECMD		equ 48C4h
  824 00:0000 -  -  -  -  _InvCmd			equ 48C7h
  825 00:0000 -  -  -  -  _STATSHADE		equ 48CAh
  826 00:0000 -  -  -  -  _dspmattable		equ 48CDh
  827 00:0000 -  -  -  -  _dsplsts		equ 48D0h
  828 00:0000 -  -  -  -  _closeEditBuf		equ 48D3h
  829 00:0000 -  -  -  -  _parseEditBuf		equ 48D6h
  830 00:0000 -  -  -  -  _putsm			equ 48D9h
  831 00:0000 -  -  -  -  _DspCurTbl		equ 48DCh
  832 00:0000 -  -  -  -  _DSPGRTBL		equ 48DFh
  833 00:0000 -  -  -  -  _zeroTemplate		equ 48E2h
  834 00:0000 -  -  -  -  _settblrefs		equ 48E5h
  835 00:0000 -  -  -  -  _dispTblBot		equ 48E8h
  836 00:0000 -  -  -  -  _DispTblTop		equ 48EBh
  837 00:0000 -  -  -  -  _dispTblbody		equ 48EEh
  838 00:0000 -  -  -  -  _VPUTBLANK		equ 48F1h
  839 00:0000 -  -  -  -  _TBLTRACE		equ 48F4h
  840 00:0000 -  -  -  -  _dispListNameY		equ 48F7h
  841 00:0000 -  -  -  -  _CurNameLength		equ 48FAh
  842 00:0000 -  -  -  -  _NameToBuf		equ 48FDh
  843 00:0000 -  -  -  -  _jpromptcursor		equ 4900h
  844 00:0000 -  -  -  -  _BufLeft		equ 4903h
  845 00:0000 -  -  -  -  _BufRight		equ 4906h
  846 00:0000 -  -  -  -  _bufInsert		equ 4909h
  847 00:0000 -  -  -  -  _bufQueueChar		equ 490Ch
  848 00:0000 -  -  -  -  _BufReplace		equ 490Fh
  849 00:0000 -  -  -  -  _BufDelete		equ 4912h
  850 00:0000 -  -  -  -  _BUFPEEK		equ 4915h
  851 00:0000 -  -  -  -  _BUFPEEK1		equ 4918h
  852 00:0000 -  -  -  -  _BUFPEEK2		equ 491Bh
  853 00:0000 -  -  -  -  _BUFPEEK3		equ 491Eh
  854 00:0000 -  -  -  -  _BufToBtm		equ 4921h
  855 00:0000 -  -  -  -  _setupEditEqu		equ 4924h
  856 00:0000 -  -  -  -  _BufToTop		equ 4927h
  857 00:0000 -  -  -  -  _isEditFull		equ 492Ah
  858 00:0000 -  -  -  -  _IsEditEmpty		equ 492Dh
  859 00:0000 -  -  -  -  _IsAtTop		equ 4930h
  860 00:0000 -  -  -  -  _IsAtBtm		equ 4933h
  861 00:0000 -  -  -  -  _BufClear		equ 4936h
  862 00:0000 -  -  -  -  _JcursorFirst		equ 4939h
  863 00:0000 -  -  -  -  _JcursorLast		equ 493Ch
  864 00:0000 -  -  -  -  _CursorLeft		equ 493Fh
  865 00:0000 -  -  -  -  _cursorRight		equ 4942h
  866 00:0000 -  -  -  -  _cursorUp		equ 4945h
  867 00:0000 -  -  -  -  _CursorDown		equ 4948h
  868 00:0000 -  -  -  -  _cursorToOffset		equ 494Bh
  869 00:0000 -  -  -  -  _InsDisp		equ 494Eh
  870 00:0000 -  -  -  -  _FDISPBOL1		equ 4951h
  871 00:0000 -  -  -  -  _FDISPBOL		equ 4954h
  872 00:0000 -  -  -  -  _DispEOW		equ 4957h
  873 00:0000 -  -  -  -  _DispHead		equ 495Ah
  874 00:0000 -  -  -  -  _DispTail		equ 495Dh
  875 00:0000 -  -  -  -  _PutTokString		equ 4960h
  876 00:0000 -  -  -  -  _setupEditCmd		equ 4963h
  877 00:0000 -  -  -  -  _setEmptyEditEqu	equ 4966h
  878 00:0000 -  -  -  -  _SetEmptyEditPtr	equ 4969h
  879 00:0000 -  -  -  -  _CloseEditEqu		equ 496Ch
  880 00:0000 -  -  -  -  _GetPrevTok		equ 496Fh
  881 00:0000 -  -  -  -  _getkey			equ 4972h
  882 00:0000 -  -  -  -  _canIndic		equ 4975h
  883 00:0000 -  -  -  -  _LCD_DRIVERON		equ 4978h 
  884 00:0000 -  -  -  -  _DFMIN2			equ 497Bh
  885 00:0000 -  -  -  -  _formDisp		equ 497Eh ;this is directly what the OS calls on the homescreen to display a result
  886 00:0000 -  -  -  -  _formMatrix		equ 4981h
  887 00:0000 -  -  -  -  _wscrollLeft		equ 4984h
  888 00:0000 -  -  -  -  _wscrollUp		equ 4987h
  889 00:0000 -  -  -  -  _wscrollDown		equ 498Ah
  890 00:0000 -  -  -  -  _wscrollRight		equ 498Dh
  891 00:0000 -  -  -  -  _FormEReal		equ 4990h
  892 00:0000 -  -  -  -  _formERealTOK		equ 4993h
  893 00:0000 -  -  -  -  _FormDCplx		equ 4996h
  894 00:0000 -  -  -  -  _FormReal		equ 4999h
  895 00:0000 -  -  -  -  _formScrollUp		equ 499Ch
  896 00:0000 -  -  -  -  _setwinabove		equ 499Fh
  897 00:0000 -  -  -  -  _disarmScroll		equ 49A2h
  898 00:0000 -  -  -  -  _OP1toEdit		equ 49A5h
  899 00:0000 -  -  -  -  _MinToEdit		equ 49A8h
  900 00:0000 -  -  -  -  _rclVarToEdit		equ 49ABh
  901 00:0000 -  -  -  -  _rclVarToEditPtR	equ 49AEh
  902 00:0000 -  -  -  -  _RCLENTRYTOEDIT		equ 49B1h
  903 00:0000 -  -  -  -  _rclToQueue		equ 49B4h ;recalls bytes at OP1 into edit buffer
  904 00:0000 -  -  -  -  _FORMTOTOK		equ 49B7h
  905 00:0000 -  -  -  -  _DISP_INTERVAL		equ 49BAh
  906 00:0000 -  -  -  -  _DisplstName		equ 49BDh
  907 00:0000 -  -  -  -  _dispSLstNameHL		equ 49C0h
  908 00:0000 -  -  -  -  _EditEqu		equ 49C3h
  909 00:0000 -  -  -  -  _closeEquField		equ 49C6h
  910 00:0000 -  -  -  -  _AutoSelect		equ 49C9h
  911 00:0000 -  -  -  -  _DISPYEOS		equ 49CCh
  912 00:0000 -  -  -  -  _dispNumEOS		equ 49CFh
  913 00:0000 -  -  -  -  _setupdispeq		equ 49D2h
  914 00:0000 -  -  -  -  _DispForward		equ 49D5h
  915 00:0000 -  -  -  -  _DispYPrompt2		equ 49D8h
  916 00:0000 -  -  -  -  _stringwidth		equ 49DBh
  917 00:0000 -  -  -  -  _dispErrorScreen	equ 49DEh ;displays top row of error screen (error message)
  918 00:0000 -  -  -  -  _POPCX			equ 49E1h ;moves 14 bytes at cxPrev to cxMain, 15th byte goes to replace appflags
  919 00:0000 -  -  -  -  _loadnoeentry		equ 49E4h
  920 00:0000 -  -  -  -  _SaveScreen		equ 49E7h
  921 00:0000 -  -  -  -  _RETSCREEN		equ 49EAh
  922 00:0000 -  -  -  -  _RetScreenErr		equ 49EDh
  923 00:0000 -  -  -  -  _CheckSplitFlag		equ 49F0h
  924 00:0000 -  -  -  -  _SolveRedisp		equ 49F3h
  925 00:0000 -  -  -  -  _SolveDisp		equ 49F6h
  926 00:0000 -  -  -  -  _itemName		equ 49F9h
  927 00:0000 -  -  -  -  _SetNorm_Vals		equ 49FCh
  928 00:0000 -  -  -  -  _SetYOffset		equ 49FFh ;sets up YOffset and next 4 bytes (possibly specialized for the table editor)
  929 00:0000 -  -  -  -  _ConvKeyToTok		equ 4A02h
  930 00:0000 -  -  -  -  _ConvFCKeyToTok		equ 4A05h
  931 00:0000 -  -  -  -  _ConvFEKeyToTok		equ 4A08h
  932 00:0000 -  -  -  -  _TokToKey		equ 4A0Bh
  933 00:0000 -  -  -  -  _SendSkipExitPacket	equ 4A0Eh
  934 00:0000 -  -  -  -  _GETVARCMD		equ 4A11h
  935 00:0000 -  -  -  -  _SendVarCmd		equ 4A14h
  936 00:0000 -  -  -  -  _SendScreenshot		equ 4A17h
  937 00:0000 -  -  -  -  keyscnlnk		equ 4A1Ah
  938 00:0000 -  -  -  -  _DeselectAllVars	equ 4A1Dh
  939 00:0000 -  -  -  -  _DelRes			equ 4A20h
  940 00:0000 -  -  -  -  _ConvLcToLr		equ 4A23h
  941 00:0000 -  -  -  -  _RedimMat		equ 4A26h
  942 00:0000 -  -  -  -  _IncLstSize		equ 4A29h
  943 00:0000 -  -  -  -  _InsertList		equ 4A2Ch
  944 00:0000 -  -  -  -  _dellistel		equ 4A2Fh
  945 00:0000 -  -  -  -  _EditProg		equ 4A32h
  946 00:0000 -  -  -  -  _CloseProg		equ 4A35h
  947 00:0000 -  -  -  -  _ClrGraphRef		equ 4A38h
  948 00:0000 -  -  -  -  _FixTempCnt		equ 4A3Bh
  949 00:0000 -  -  -  -  _SAVEDATA		equ 4A3Eh
  950 00:0000 -  -  -  -  _RESTOREDATA		equ 4A41h
  951 00:0000 -  -  -  -  _FindAlphaUp		equ 4A44h
  952 00:0000 -  -  -  -  _FindAlphaDn		equ 4A47h
  953 00:0000 -  -  -  -  _CmpSyms		equ 4A4Ah
  954 00:0000 -  -  -  -  _CREATETEMP		equ 4A4Dh
  955 00:0000 -  -  -  -  _CleanAll		equ 4A50h
  956 00:0000 -  -  -  -  _MoveToNextSym		equ 4A53h ;input: hl=pointer to type byte of VAT entry. output: hl = pointer to next entry's type byte
  957 00:0000 -  -  -  -  _ConvLrToLc		equ 4A56h
  958 00:0000 -  -  -  -  _TblScreenDn		equ 4A59h ;something is not right here
  959 00:0000 -  -  -  -  _TblScreenUp		equ 4A5Ch
  960 00:0000 -  -  -  -  _SCREENUP		equ 4A5Fh
  961 00:0000 -  -  -  -  _ScreenUpDown		equ 4A62h
  962 00:0000 -  -  -  -  _ZifRclHandler		equ 4A65h
  963 00:0000 -  -  -  -  _zifrclkapp		equ 4A68h
  964 00:0000 -  -  -  -  _rclkeyRtn		equ 4A6Bh
  965 00:0000 -  -  -  -  _RCLKEY			equ 4A6Bh
  966 00:0000 -  -  -  -  _RCLREGEQ_CALL		equ 4A6Eh
  967 00:0000 -  -  -  -  _RCLREGEQ		equ 4A71h
  968 00:0000 -  -  -  -  _initNamePrompt		equ 4A74h
  969 00:0000 -  -  -  -  _NamePrompt2		equ 4A77h
  970 00:0000 -  -  -  -  _CATALOGCHK		equ 4A7Ah
  971 00:0000 -  -  -  -  _clrTR			equ 4A7Dh
  972 00:0000 -  -  -  -  _QUAD			equ 4A80h
  973 00:0000 -  -  -  -  _GRAPHQUAD		equ 4A83h
  974 00:0000 -  -  -  -  _BC2NOREAL		equ 4A86h
  975 00:0000 -  -  -  -  _ErrNonReal_FPST_FPS1	equ 4A89h
  976 00:0000 -  -  -  -  _ErrNonReal		equ 4A8Ch ;ERR:DATA TYPE if top B numers from FPS are non-real
  977 00:0000 -  -  -  -  _WRITE_TEXT		equ 4A8Fh
  978 00:0000 -  -  -  -  _FORSEQINIT		equ 4A92h
  979 00:0000 -  -  -  -  _GRPHPARS		equ 4A95h
  980 00:0000 -  -  -  -  _PLOTPARS		equ 4A98h
  981 00:0000 -  -  -  -  _ParseInp		equ 4A9Bh
  982 00:0000 -  -  -  -  _PARSEOFF		equ 4A9Eh
  983 00:0000 -  -  -  -  _PARSESCAN		equ 4AA1h
  984 00:0000 -  -  -  -  _GETPARSE		equ 4AA4h
  985 00:0000 -  -  -  -  _SAVEPARSE		equ 4AA7h
  986 00:0000 -  -  -  -  _InitPFlgs		equ 4AAAh
  987 00:0000 -  -  -  -  _CKENDLINERR		equ 4AADh
  988 00:0000 -  -  -  -  _OP2Set60		equ 4AB0h
  989 00:0000 -  -  -  -  _GETSTATPTR		equ 4AB3h
  990 00:0000 -  -  -  -  _CMP_STATPTR		equ 4AB6h
  991 00:0000 -  -  -  -  _VARSYSADR		equ 4AB9h
  992 00:0000 -  -  -  -  _StoSysTok		equ 4ABCh
  993 00:0000 -  -  -  -  _StoAns			equ 4ABFh
  994 00:0000 -  -  -  -  _StoTheta		equ 4AC2h
  995 00:0000 -  -  -  -  _StoR			equ 4AC5h
  996 00:0000 -  -  -  -  _StoY			equ 4AC8h
  997 00:0000 -  -  -  -  _StoN			equ 4ACBh
  998 00:0000 -  -  -  -  _StoT			equ 4ACEh
  999 00:0000 -  -  -  -  _StoX			equ 4AD1h
 1000 00:0000 -  -  -  -  _StoOther		equ 4AD4h
 1001 00:0000 -  -  -  -  _RclAns			equ 4AD7h
 1002 00:0000 -  -  -  -  _RclY			equ 4ADAh
 1003 00:0000 -  -  -  -  _RclN			equ 4ADDh
 1004 00:0000 -  -  -  -  _RclX			equ 4AE0h
 1005 00:0000 -  -  -  -  _RclVarSym		equ 4AE3h
 1006 00:0000 -  -  -  -  _RclSysTok		equ 4AE6h
 1007 00:0000 -  -  -  -  _StMatEl		equ 4AE9h
 1008 00:0000 -  -  -  -  _STLSTVECEL		equ 4AECh
 1009 00:0000 -  -  -  -  _ConvOP1		equ 4AEFh
 1010 00:0000 -  -  -  -  _Find_Parse_Formula	equ 4AF2h
 1011 00:0000 -  -  -  -  _PARSE_FORMULA		equ 4AF5h
 1012 00:0000 -  -  -  -  _FetchQuotedString	equ 4AF8h
 1013 00:0000 -  -  -  -  _FetchNumLine		equ 4AFBh
 1014 00:0000 -  -  -  -  _ParseNameTokens	equ 4AFEh
 1015 00:0000 -  -  -  -  _ParseInpGraph		equ 4B01h ;same as _ParseInp except 3,(iy+1Fh) is graph/split screen override, or something
 1016 00:0000 -  -  -  -  _ParseInpGraphReset	equ 4B04h ;_ParseInpGraph except zeroes out iy+6/7, resets 3,(iy+1Ah) & 0,(iy+1Fh), fmtFlags->fmtOverride, parse within ParseInp?
 1017 00:0000 -  -  -  -  _ParseInpLastEnt	equ 4B07h ;ParseInp on program 05h,23h,00h
 1018 00:0000 -  -  -  -  _ErrOnCertainTypes	equ 4B0Ah ;ERR:DATA TYPE if A is one of a couple of values...subroutine in ParseInp, somehow
 1019 00:0000 -  -  -  -  _CreatePair		equ 4B0Dh
 1020 00:0000 -  -  -  -  _PUSHNUM		equ 4B10h
 1021 00:0000 -  -  -  -  _INCCURPCERREND		equ 4B13h
 1022 00:0000 -  -  -  -  _ERREND			equ 4B16h
 1023 00:0000 -  -  -  -  _COMMAERRF		equ 4B19h
 1024 00:0000 -  -  -  -  _COMMAERR		equ 4B1Ch
 1025 00:0000 -  -  -  -  _STEQARG2		equ 4B1Fh
 1026 00:0000 -  -  -  -  _STEQARG		equ 4B22h
 1027 00:0000 -  -  -  -  _INPARG			equ 4B25h
 1028 00:0000 -  -  -  -  _STEQARG3		equ 4B28h
 1029 00:0000 -  -  -  -  _NXTFETCH		equ 4B2Bh
 1030 00:0000 -  -  -  -  _CKFETCHVAR		equ 4B2Eh
 1031 00:0000 -  -  -  -  _FETCHVARA		equ 4B31h
 1032 00:0000 -  -  -  -  _FETCHVAR		equ 4B34h
 1033 00:0000 -  -  -  -  _CKENDLIN		equ 4B37h ;gets parse byte in A and then _CKENDEXP
 1034 00:0000 -  -  -  -  _CKENDEXP		equ 4B3Ah ;checks A for 3Eh or 3Fh
 1035 00:0000 -  -  -  -  _CKPARSEND		equ 4B3Dh
 1036 00:0000 -  -  -  -  _STOTYPEARG		equ 4B40h
 1037 00:0000 -  -  -  -  _ConvDim		equ 4B43h
 1038 00:0000 -  -  -  -  _ConvDim00		equ 4B46h
 1039 00:0000 -  -  -  -  _AHEADEQUAL		equ 4B49h
 1040 00:0000 -  -  -  -  _PARSAHEADS		equ 4B4Ch
 1041 00:0000 -  -  -  -  _PARSAHEAD              equ 4B4Fh
 1042 00:0000 -  -  -  -  _AnsName		equ 4B52h
 1043 00:0000 -  -  -  -  _STOCMPREALS		equ 4B55h
 1044 00:0000 -  -  -  -  _GETDEPTR		equ 4B58h
 1045 00:0000 -  -  -  -  _PUSH2BOPER		equ 4B5Bh ;push the value in bc onto the operator stack
 1046 00:0000 -  -  -  -  _POP2BOPER		equ 4B5Eh ;pop 2 bytes on the operator stack to bc
 1047 00:0000 -  -  -  -  _PUSHOPER		equ 4B61h ;push the value in a onto the operator stack
 1048 00:0000 -  -  -  -  _POPOPER		equ 4B64h ;pop 1 byte on the operator stack to a
 1049 00:0000 -  -  -  -  _FIND_E_UNDEF		equ 4B67h
 1050 00:0000 -  -  -  -  _STTMPEQ		equ 4B6Ah
 1051 00:0000 -  -  -  -  _FINDEOL		equ 4B6Dh
 1052 00:0000 -  -  -  -  _BRKINC			equ 4B70h
 1053 00:0000 -  -  -  -  _INCFETCH		equ 4B73h
 1054 00:0000 -  -  -  -  _CURFETCH		equ 4B76h
 1055 00:0000 -  -  -  -  _Random			equ 4B79h
 1056 00:0000 -  -  -  -  _StoRand		equ 4B7Ch
 1057 00:0000 -  -  -  -  _RandInit		equ 4B7Fh
 1058 00:0000 -  -  -  -  _resetStacks		equ 4B82h ;(onsp)->(errsp), (fpbase)->(fps), (opbase)->(ops)
 1059 00:0000 -  -  -  -  _Factorial		equ 4B85h
 1060 00:0000 -  -  -  -  _YONOFF			equ 4B88h
 1061 00:0000 -  -  -  -  _EQSELUNSEL		equ 4B8Bh
 1062 00:0000 -  -  -  -  _ITSOLVER		equ 4B8Eh
 1063 00:0000 -  -  -  -  _GRITSOLVER		equ 4B91h
 1064 00:0000 -  -  -  -  _ITSOLVERB		equ 4B94h
 1065 00:0000 -  -  -  -  _ITSOLVERNB		equ 4B97h
 1066 00:0000 -  -  -  -  _ExTest_INT		equ 4B9Ah
 1067 00:0000 -  -  -  -  _DIST_FUN		equ 4BADh
 1068 00:0000 -  -  -  -  _LogGamma		equ 4BA0h
 1069 00:0000 -  -  -  -  _OneVar			equ 4BA3h
 1070 00:0000 -  -  -  -  _ONEVARS_0		equ 4BA6h
 1071 00:0000 -  -  -  -  _ORDSTAT		equ 4BA9h
 1072 00:0000 -  -  -  -  _INITSTATANS2		equ 4BACh
 1073 00:0000 -  -  -  -  _ANOVA_SPEC		equ 4BAFh
 1074 00:0000 -  -  -  -  _OutputExpr		equ 4BB2h
 1075 00:0000 -  -  -  -  _CentCursor		equ 4BB5h
 1076 00:0000 -  -  -  -  _TEXT			equ 4BB8h
 1077 00:0000 -  -  -  -  _FINISHSPEC		equ 4BBBh
 1078 00:0000 -  -  -  -  _TRCYFUNC		equ 4BBEh
 1079 00:0000 -  -  -  -  _RCL_SEQ_X		equ 4BC1h
 1080 00:0000 -  -  -  -  _RCLSEQ2		equ 4BC4h
 1081 00:0000 -  -  -  -  _GRPPutAway		equ 4BC7h
 1082 00:0000 -  -  -  -  _CKVALDELX		equ 4BCAh
 1083 00:0000 -  -  -  -  _CKVALDELTA		equ 4BCDh
 1084 00:0000 -  -  -  -  _GrBufClr		equ 4BD0h
 1085 00:0000 -  -  -  -  _GRBUFCPY_V		equ 4BD3h
 1086 00:0000 -  -  -  -  _FNDSELEQ		equ 4BD6h
 1087 00:0000 -  -  -  -  _CLRGRAPHXY		equ 4BD9h
 1088 00:0000 -  -  -  -  _NEDXT_Y_STYLE		equ 4BDCh
 1089 00:0000 -  -  -  -  _PLOTPT			equ 4BDFh
 1090 00:0000 -  -  -  -  _NEWINDEP		equ 4BE2h
 1091 00:0000 -  -  -  -  _Axes			equ 4BE5h
 1092 00:0000 -  -  -  -  _setPenX		equ 4BE8h
 1093 00:0000 -  -  -  -  _setPenY		equ 4BEBh
 1094 00:0000 -  -  -  -  _setPenT		equ 4BEEh
 1095 00:0000 -  -  -  -  _TAN_EQU_DISP		equ 4BF1h
 1096 00:0000 -  -  -  -  _PutAns			equ 4BF4h
 1097 00:0000 -  -  -  -  _DispOP1A		equ 4BF7h
 1098 00:0000 -  -  -  -  _MATHTANLN		equ 4BFAh
 1099 00:0000 -  -  -  -  _ENDDRAW		equ 4BFDh
 1100 00:0000 -  -  -  -  _SetTblGraphDraw	equ 4C00h
 1101 00:0000 -  -  -  -  _StartDialog		equ 4C03h
 1102 00:0000 -  -  -  -  _DialogInit		equ 4C06h
 1103 00:0000 -  -  -  -  _GetDialogNumOP1	equ 4C09h
 1104 00:0000 -  -  -  -  _SetDialogNumOP1	equ 4C0Ch
 1105 00:0000 -  -  -  -  _GetDialogNumHL		equ 4C0Fh
 1106 00:0000 -  -  -  -  _ErrArgumentO123	equ 4C12h ;ERR:ARGUMENT if OP2>OP1 or OP1>OP3
 1107 00:0000 -  -  -  -  _SetDialogKeyOverride	equ 4C15h
 1108 00:0000 -  -  -  -  _ResDialogKeyOverride	equ 4C18h
 1109 00:0000 -  -  -  -  _ForceDialogKeypress	equ 4C1Bh
 1110 00:0000 -  -  -  -  _DialogStartGetKey	equ 4C1Eh
 1111 00:0000 -  -  -  -  _StartDialog_Override	equ 4C21h
 1112 00:0000 -  -  -  -  _CallDialogCallback	equ 4C24h
 1113 00:0000 -  -  -  -  _SetDialogCallback	equ 4C27h
 1114 00:0000 -  -  -  -  _ResDialogCallback	equ 4C2Ah
 1115 00:0000 -  -  -  -  _CopyDialogNum		equ 4C2Dh
 1116 00:0000 -  -  -  -  _MemClear		equ 4C30h
 1117 00:0000 -  -  -  -  _MemSet			equ 4C33h
 1118 00:0000 -  -  -  -  _ReloadAppEntryVecs	equ 4C36h
 1119 00:0000 -  -  -  -  _PointOn		equ 4C39h
 1120 00:0000 -  -  -  -  _ExecuteNewPrgm		equ 4C3Ch
 1121 00:0000 -  -  -  -  _StrLength		equ 4C3Fh
 1122 00:0000 -  -  -  -  _VPutMapRec		equ 4C42h
 1123 00:0000 -  -  -  -  _getRomPage		equ 4C45h
 1124 00:0000 -  -  -  -  _FindAppUp		equ 4C48h
 1125 00:0000 -  -  -  -  _FindAppDn		equ 4C4Bh
 1126 00:0000 -  -  -  -  _FindApp		equ 4C4Eh
 1127 00:0000 -  -  -  -  _ExecuteApp		equ 4C51h
 1128 00:0000 -  -  -  -  _MonReset		equ 4C54h
 1129 00:0000 -  -  -  -  _ClearParseVar		equ 4C57h
 1130 00:0000 -  -  -  -  _SetParseVarProg	equ 4C5Ah
 1131 00:0000 -  -  -  -  _isContextKey		equ 4C5Dh
 1132 00:0000 -  -  -  -  _IBounds		equ 4C60h
 1133 00:0000 -  -  -  -  _IOffset		equ 4C63h
 1134 00:0000 -  -  -  -  _DrawCirc2		equ 4C66h
 1135 00:0000 -  -  -  -  _CanAlphIns		equ 4C69h
 1136 00:0000 -  -  -  -  cxRedisp		equ 4C6Ch
 1137 00:0000 -  -  -  -  _GetBaseVer		equ 4C6Fh
 1138 00:0000 -  -  -  -  _OPSet0DE		equ 4C72h ;loads a floating point 0 to location de 
 1139 00:0000 -  -  -  -  _AppGetCbl		equ 4C75h
 1140 00:0000 -  -  -  -  _AppGetCalc		equ 4C78h
 1141 00:0000 -  -  -  -  _SaveDisp		equ 4C7Bh
 1142 00:0000 -  -  -  -  _SetIgnoreKey  		equ 4C7Eh ;set 1,(iy+28h) / ret
 1143 00:0000 -  -  -  -  _SetSendThisKeyBack	equ 4C81h ;set 2,(iy+28h) / ld (kbdKey),a / ret
 1144 00:0000 -  -  -  -  _DisableApd		equ 4C84h
 1145 00:0000 -  -  -  -  _EnableApd		equ 4C87h ;set apdable,(iy+apdflags)
 1146 00:0000 -  -  -  -  _JForceCmdNoChar2	equ 4C8Ah ;2.41 at least
 1147 00:0000 -  -  -  -  _set2IY34		equ 4C8Dh ;set 2,(iy+34) / ret
 1148 00:0000 -  -  -  -  _forcecmd		equ 4C90h
 1149 00:0000 -  -  -  -  _ApdSetup		equ 4C93h
 1150 00:0000 -  -  -  -  _Get_NumKey		equ 4C96h
 1151 00:0000 -  -  -  -  _AppSetup		equ 4C99h ;or _AppCleanup, or something
 1152 00:0000 -  -  -  -  _HandleLinkKeyActivity	equ 4C9Ch
 1153 00:0000 -  -  -  -  _JForceCmdNoChar3	equ 4C9Fh ;2.41 at least
 1154 00:0000 -  -  -  -  _ReleaseSedit		equ 4CA2h
 1155 00:0000 -  -  -  -  _initsmalleditline	equ 4CA5h
 1156 00:0000 -  -  -  -  _startsmalledit		equ 4CA8h
 1157 00:0000 -  -  -  -  ;4CABh
 1158 00:0000 -  -  -  -  _SGetTokString		equ 4CAEh
 1159 00:0000 -  -  -  -  _LoadPattern	 	equ 4CB1h
 1160 00:0000 -  -  -  -  _SStringLength		equ 4CB4h
 1161 00:0000 -  -  -  -  _RestorePenCol		equ 4CB7h
 1162 00:0000 -  -  -  -  ;4CBAh
 1163 00:0000 -  -  -  -  _DoNothing		equ 4CBDh
 1164 00:0000 -  -  -  -  _ForceSmallEditReturn	equ 4CC0h
 1165 00:0000 -  -  -  -  ;4CC3h ;saves context
 1166 00:0000 -  -  -  -  ;4CC6h
 1167 00:0000 -  -  -  -  ;4CC9h
 1168 00:0000 -  -  -  -  ;4CCCh
 1169 00:0000 -  -  -  -  _VEraseEOL		equ 4CCFh
 1170 00:0000 -  -  -  -  ;4CD2h
 1171 00:0000 -  -  -  -  ;4CD5h
 1172 00:0000 -  -  -  -  _GoToErr		equ 4CD8h
 1173 00:0000 -  -  -  -  _initsmalleditBox	equ 4CDBh
 1174 00:0000 -  -  -  -  ;4CDEh
 1175 00:0000 -  -  -  -  _EmptyHook		equ 4CE1h
 1176 00:0000 -  -  -  -  _ForceSmallEditReturn2	equ 4CE4h
 1177 00:0000 -  -  -  -  ;4CE7h ;same as 4CC3h
 1178 00:0000 -  -  -  -  ;4CEAh
 1179 00:0000 -  -  -  -  _ClearRow		equ 4CEDh
 1180 00:0000 -  -  -  -  ;4CF0h
 1181 00:0000 -  -  -  -  ;4CF3h
 1182 00:0000 -  -  -  -  ;4CF6h
 1183 00:0000 -  -  -  -  ;4CF9h
 1184 00:0000 -  -  -  -  ;4CFCh
 1185 00:0000 -  -  -  -  ;4CFFh
 1186 00:0000 -  -  -  -  ;4D02h
 1187 00:0000 -  -  -  -  ;4D05h
 1188 00:0000 -  -  -  -  ;4D08h
 1189 00:0000 -  -  -  -  ;4D0Bh
 1190 00:0000 -  -  -  -  ;4D0Eh
 1191 00:0000 -  -  -  -  ;4D11h
 1192 00:0000 -  -  -  -  ;4D14h
 1193 00:0000 -  -  -  -  ;4D17h
 1194 00:0000 -  -  -  -  ;4D1Ah
 1195 00:0000 -  -  -  -  ;4D1Dh
 1196 00:0000 -  -  -  -  ;4D20h
 1197 00:0000 -  -  -  -  ;4D23h
 1198 00:0000 -  -  -  -  _AppScreenUpDown	equ 4D26h ;shifts screen up/down, A is LCD row, H is number of lines to shift, (OP1)-(OP1+3) are something
 1199 00:0000 -  -  -  -  _AppScreenUpDown1	equ 4D29h ;shifts screen up/down, but really no clue what the inputs are (all registers and (OP1)-(OP1+3))
 1200 00:0000 -  -  -  -  ;4D2Ch
 1201 00:0000 -  -  -  -  _initsmalleditlinevar	equ 4D2Fh
 1202 00:0000 -  -  -  -  _initsmalleditlineop1	equ 4D32h
 1203 00:0000 -  -  -  -  _initsmalleditboxvar	equ 4D35h
 1204 00:0000 -  -  -  -  _initsmalleditboxop1	equ 4D38h
 1205 00:0000 -  -  -  -  ;4D3Bh
 1206 00:0000 -  -  -  -  _RestartDialog		equ 4D3Eh
 1207 00:0000 -  -  -  -  _ErrCustom1		equ 4D41h
 1208 00:0000 -  -  -  -  _ErrCustom2		equ 4D44h
 1209 00:0000 -  -  -  -  _AppStartMouse		equ 4D47h
 1210 00:0000 -  -  -  -  _AppStartMouseNoSetup	equ 4D4Ah
 1211 00:0000 -  -  -  -  _AppMouseGetKey		equ 4D4Dh
 1212 00:0000 -  -  -  -  _AppDispMouse		equ 4D50h
 1213 00:0000 -  -  -  -  _AppEraseMouse		equ 4D53h
 1214 00:0000 -  -  -  -  _AppSetupMouseMem	equ 4D56h
 1215 00:0000 -  -  -  -  _GetDispRowOffset	equ 4D59h ;HL=A*12 (intended for A to be row and HL becomes offset into plotSScreen)
 1216 00:0000 -  -  -  -  _ClearRect		equ 4D5Ch
 1217 00:0000 -  -  -  -  _InvertRect		equ 4D5Fh
 1218 00:0000 -  -  -  -  _FillRect		equ 4D62h
 1219 00:0000 -  -  -  -  _AppUpdateMouse		equ 4D65h
 1220 00:0000 -  -  -  -  _AppDispPrevMouse	equ 4D68h ;might bring previous keypress's movement to current coordinates with flags to not display
 1221 00:0000 -  -  -  -  ;4D6Bh ;restores some cursor flags and stuff
 1222 00:0000 -  -  -  -  _initcellbox		equ 4D6Eh
 1223 00:0000 -  -  -  -  _drawcell		equ 4D71h
 1224 00:0000 -  -  -  -  ;4D74h
 1225 00:0000 -  -  -  -  _invertcell		equ 4D77h
 1226 00:0000 -  -  -  -  _setcelloverride	equ 4D7Ah
 1227 00:0000 -  -  -  -  _DrawRectBorder		equ 4D7Dh
 1228 00:0000 -  -  -  -  _ClearCell		equ 4D80h
 1229 00:0000 -  -  -  -  _covercell		equ 4D83h
 1230 00:0000 -  -  -  -  _EraseRectBorder	equ 4D86h
 1231 00:0000 -  -  -  -  _FillRectPattern	equ 4D89h
 1232 00:0000 -  -  -  -  _DrawRectBorderClear	equ 4D8Ch
 1233 00:0000 -  -  -  -  ;4D8Fh ;mouse subroutine
 1234 00:0000 -  -  -  -  ;4D92h
 1235 00:0000 -  -  -  -  _VerticalLine		equ 4D95h
 1236 00:0000 -  -  -  -  _IBoundsFull		equ 4D98h
 1237 00:0000 -  -  -  -  _DisplayImage		equ 4D9Bh
 1238 00:0000 -  -  -  -  ;4D9Eh ;does something dumb with ports 10h/11h
 1239 00:0000 -  -  -  -  ;4DA1h ;mouse subroutine
 1240 00:0000 -  -  -  -  _AppUpdateMouseCoords	equ 4DA4h
 1241 00:0000 -  -  -  -  _ShiftBitsLeft		equ 4DA7h ;mouse subroutine, shifts B bits left from DE sprite to HL one
 1242 00:0000 -  -  -  -  ;4DAAh ;mouse subroutine
 1243 00:0000 -  -  -  -  ;4DADh ;mouse subroutine
 1244 00:0000 -  -  -  -  ;4DB0h ;mouse subroutine
 1245 00:0000 -  -  -  -  ;4DB3h ;mouse subroutine
 1246 00:0000 -  -  -  -  ;4DB6h ;mouse subroutine
 1247 00:0000 -  -  -  -  ;4DB9h ;mouse subroutine
 1248 00:0000 -  -  -  -  ;4DBCh ;mouse subroutine
 1249 00:0000 -  -  -  -  _AppUpdateMouseRow	equ 4DBFh
 1250 00:0000 -  -  -  -  _AppDrawMouse		equ 4DC2h ;set 2,(iy+2Ch) for AppEraseMouse, reset for AppDispMouse
 1251 00:0000 -  -  -  -  _AppDrawMouseDirect	equ 4DC5h ;pretty much _AppDrawMouse, but you pass LCD column in A
 1252 00:0000 -  -  -  -  _CPoint			equ 4DC8h
 1253 00:0000 -  -  -  -  _DeleteApp		equ 4DCBh
 1254 00:0000 -  -  -  -  _AppUpdateMouseXY	equ 4DCEh
 1255 00:0000 -  -  -  -  _setmodecellflag	equ 4DD1h
 1256 00:0000 -  -  -  -  _resetmodecellflag	equ 4DD4h
 1257 00:0000 -  -  -  -  _ismodecellset		equ 4DD7h
 1258 00:0000 -  -  -  -  _getmodecellflag	equ 4DDAh
 1259 00:0000 -  -  -  -  ;4DDDh
 1260 00:0000 -  -  -  -  _CellBoxManager		equ 4DE0h
 1261 00:0000 -  -  -  -  _startnewcell		equ 4DE3h
 1262 00:0000 -  -  -  -  ;4DE6h
 1263 00:0000 -  -  -  -  _CellCursorHandle	equ 4DE9h
 1264 00:0000 -  -  -  -  ;4DECh
 1265 00:0000 -  -  -  -  ;4DEFh
 1266 00:0000 -  -  -  -  _ClearCurCell		equ 4DF2h
 1267 00:0000 -  -  -  -  _drawcurcell		equ 4DF5h
 1268 00:0000 -  -  -  -  _invertcurcell		equ 4DF8h
 1269 00:0000 -  -  -  -  _covercurcell		equ 4DFBh
 1270 00:0000 -  -  -  -  _BlinkCell		equ 4DFEh
 1271 00:0000 -  -  -  -  _BlinkCellNoLookUp	equ 4E01h
 1272 00:0000 -  -  -  -  _BlinkCurCell		equ 4E04h
 1273 00:0000 -  -  -  -  _BlinkCellToOn		equ 4E07h
 1274 00:0000 -  -  -  -  _BlinkCellToOnNoLookUp	equ 4E0Ah
 1275 00:0000 -  -  -  -  _BlinkCurCellToOn	equ 4E0Dh
 1276 00:0000 -  -  -  -  _BlinkCellToOff		equ 4E10h
 1277 00:0000 -  -  -  -  _BlinkCellToOffNoLookUp equ 4E13h
 1278 00:0000 -  -  -  -  _BlinkCurCellToOff	equ 4E16h
 1279 00:0000 -  -  -  -  _getcurmodecellflag	equ 4E19h
 1280 00:0000 -  -  -  -  ;4E1Ch
 1281 00:0000 -  -  -  -  _startsmalleditreturn	equ 4E1Fh
 1282 00:0000 -  -  -  -  ;4E22h
 1283 00:0000 -  -  -  -  ;4E25h
 1284 00:0000 -  -  -  -  _CellkHandle		equ 4E28h
 1285 00:0000 -  -  -  -  _errchkalphabox		equ 4E2Bh
 1286 00:0000 -  -  -  -  ;4E2Eh
 1287 00:0000 -  -  -  -  ;4E31h
 1288 00:0000 -  -  -  -  ;4E34h
 1289 00:0000 -  -  -  -  ;4E37h
 1290 00:0000 -  -  -  -  _eraseallcells		equ 4E3Ah
 1291 00:0000 -  -  -  -  _iscurmodecellset	equ 4E3Dh
 1292 00:0000 -  -  -  -  ;4E40h
 1293 00:0000 -  -  -  -  _initalphabox		equ 4E43h
 1294 00:0000 -  -  -  -  ;4E46h
 1295 00:0000 -  -  -  -  ;4E49h
 1296 00:0000 -  -  -  -  _drawblnkcell		equ 4E4Ch
 1297 00:0000 -  -  -  -  _ClearBlnkCell		equ 4E4Fh
 1298 00:0000 -  -  -  -  _invertblnkcell		equ 4E52h
 1299 00:0000 -  -  -  -  _AppMouseForceKey	equ 4E55h
 1300 00:0000 -  -  -  -  _AppSetupMouseMemCoords	equ 4E58h ;this is _AppSetupMouseMem except you pass starting coordinates in HL
 1301 00:0000 -  -  -  -  _AppMoveMouse		equ 4E5Bh ;this is _AppMouseForceKey and then updating coordinates
 1302 00:0000 -  -  -  -  _GetStringInput		equ 4E5Eh
 1303 00:0000 -  -  -  -  _GetStringInput2	equ 4E61h
 1304 00:0000 -  -  -  -  _WaitEnterKeyValue	equ 4E64h
 1305 00:0000 -  -  -  -  _HorizontalLine		equ 4E67h
 1306 00:0000 -  -  -  -  _CreateAppVar		equ 4E6Ah
 1307 00:0000 -  -  -  -  _CreateProtProg		equ 4E6Dh
 1308 00:0000 -  -  -  -  _CreateVar		equ 4E70h
 1309 00:0000 -  -  -  -  _AsmComp		equ 4E73h
 1310 00:0000 -  -  -  -  _GetAsmSize		equ 4E76h
 1311 00:0000 -  -  -  -  _SquishPrgm		equ 4E79h
 1312 00:0000 -  -  -  -  _ExecutePrgm		equ 4E7Ch
 1313 00:0000 -  -  -  -  _ChkFindSymAsm		equ 4E7Fh
 1314 00:0000 -  -  -  -  _ParsePrgmName		equ 4E82h
 1315 00:0000 -  -  -  -  _CSub			equ 4E85h
 1316 00:0000 -  -  -  -  _CAdd			equ 4E88h
 1317 00:0000 -  -  -  -  _CSqaure		equ 4E8Bh
 1318 00:0000 -  -  -  -  _CMult			equ 4E8Eh
 1319 00:0000 -  -  -  -  _CRecip			equ 4E91h
 1320 00:0000 -  -  -  -  _CDiv			equ 4E94h
 1321 00:0000 -  -  -  -  _CAbs			equ 4E97h
 1322 00:0000 -  -  -  -  _AddSquares		equ 4E9Ah
 1323 00:0000 -  -  -  -  _CSqRoot		equ 4E9Dh
 1324 00:0000 -  -  -  -  _CLN			equ 4EA0h
 1325 00:0000 -  -  -  -  _CLog			equ 4EA3h
 1326 00:0000 -  -  -  -  _CTenX			equ 4EA6h
 1327 00:0000 -  -  -  -  _CEtoX			equ 4EA9h
 1328 00:0000 -  -  -  -  _CXrootY		equ 4EACh
 1329 00:0000 -  -  -  -  ;4EAFh
 1330 00:0000 -  -  -  -  _CYtoX			equ 4EB2h
 1331 00:0000 -  -  -  -  _InvertNonReal		equ 4EB5h
 1332 00:0000 -  -  -  -  _CplxMult		equ 4EB8h
 1333 00:0000 -  -  -  -  _CplxDiv		equ 4EBBh
 1334 00:0000 -  -  -  -  _CplxTrunc		equ 4EBEh
 1335 00:0000 -  -  -  -  _CplxFrac		equ 4EC1h
 1336 00:0000 -  -  -  -  _CplxFloor		equ 4EC4h
 1337 00:0000 -  -  -  -  _SendHeaderPacket	equ 4EC7h
 1338 00:0000 -  -  -  -  _CancelTransmission	equ 4ECAh
 1339 00:0000 -  -  -  -  _SendScreenContents	equ 4ECDh
 1340 00:0000 -  -  -  -  _SendRAMVarData		equ 4ED0h
 1341 00:0000 -  -  -  -  _SendRAMCmd		equ 4ED3h
 1342 00:0000 -  -  -  -  _SendPacket		equ 4ED6h
 1343 00:0000 -  -  -  -  _ReceiveAck		equ 4ED9h
 1344 00:0000 -  -  -  -  _Send4BytePacket	equ 4EDCh
 1345 00:0000 -  -  -  -  _SendDataByte		equ 4EDFh
 1346 00:0000 -  -  -  -  _Send4Bytes		equ 4EE2h
 1347 00:0000 -  -  -  -  _SendAByte		equ 4EE5h
 1348 00:0000 -  -  -  -  _SendCByte		equ 4EE8h
 1349 00:0000 -  -  -  -  _GetSmallPacket		equ 4EEBh
 1350 00:0000 -  -  -  -  _GetDataPacket		equ 4EEEh
 1351 00:0000 -  -  -  -  _SendAck		equ 4EF1h
 1352 00:0000 -  -  -  -  _Get4Bytes		equ 4EF4h
 1353 00:0000 -  -  -  -  _Get3Bytes		equ 4EF7h
 1354 00:0000 -  -  -  -  _Rec1stByte		equ 4EFAh
 1355 00:0000 -  -  -  -  _Rec1stByteNC		equ 4EFDh
 1356 00:0000 -  -  -  -  _ContinueGetByte	equ 4F00h
 1357 00:0000 -  -  -  -  _RecAByteIO		equ 4F03h
 1358 00:0000 -  -  -  -  _ReceiveVar		equ 4F06h
 1359 00:0000 -  -  -  -  _ReceiveVarDataExists	equ 4F09h
 1360 00:0000 -  -  -  -  _ReceiveVarData		equ 4F0Ch
 1361 00:0000 -  -  -  -  _SrchVLstUp		equ 4F0Fh
 1362 00:0000 -  -  -  -  _SrchVLstDn		equ 4F12h
 1363 00:0000 -  -  -  -  _SendVariable		equ 4F15h
 1364 00:0000 -  -  -  -  _Get4BytesCursor	equ 4F18h
 1365 00:0000 -  -  -  -  _Get4BytesNC		equ 4F1Bh
 1366 00:0000 -  -  -  -  _Convert85List		equ 4F1Eh
 1367 00:0000 -  -  -  -  _SendDirectoryContents	equ 4F21h
 1368 00:0000 -  -  -  -  _SendReadyPacket	equ 4F24h
 1369 00:0000 -  -  -  -  _Convert85Real		equ 4F27h
 1370 00:0000 -  -  -  -  _ret_6			equ 4F2Ah
 1371 00:0000 -  -  -  -  _SendCertificate	equ 4F2Dh ;sends certificate in header/data packets, Flash must be unlocked, used with sending an application in LINK menu
 1372 00:0000 -  -  -  -  _SendApplication	equ 4F30h
 1373 00:0000 -  -  -  -  _SendOSHeader		equ 4F33h
 1374 00:0000 -  -  -  -  _SendOSPage		equ 4F36h
 1375 00:0000 -  -  -  -  _SendOS			equ 4F39h
 1376 00:0000 -  -  -  -  _FlashWriteDisable	equ 4F3Ch
 1377 00:0000 -  -  -  -  _SendCmd		equ 4F3Fh
 1378 00:0000 -  -  -  -  _SendOSValidationData	equ 4F42h
 1379 00:0000 -  -  -  -  _Disp			equ 4F45h
 1380 00:0000 -  -  -  -  _SendGetkeyPress	equ 4F48h
 1381 00:0000 -  -  -  -  _RejectCommand		equ 4F4Bh
 1382 00:0000 -  -  -  -  _CheckLinkLines		equ 4F4Eh
 1383 00:0000 -  -  -  -  _GetHookByte		equ 4F51h
 1384 00:0000 -  -  -  -  _GetBytePaged		equ 4F54h
 1385 00:0000 -  -  -  -  _cursorhook		equ 4F57h
 1386 00:0000 -  -  -  -  _call_library_hook	equ 4F5Ah
 1387 00:0000 -  -  -  -  _call_rawkey_hook	equ 4F5Dh
 1388 00:0000 -  -  -  -  _setCursorHook		equ 4F60h ;enable cursor hook
 1389 00:0000 -  -  -  -  _EnableLibraryHook	equ 4F63h
 1390 00:0000 -  -  -  -  _SetGetKeyHook		equ 4F66h
 1391 00:0000 -  -  -  -  _ClrCursorHook		equ 4F69h
 1392 00:0000 -  -  -  -  _DisableLibraryHook	equ 4F6Ch
 1393 00:0000 -  -  -  -  _ClrRawKeyHook  	equ 4F6Fh
 1394 00:0000 -  -  -  -  _ResetHookBytes		equ 4F72h
 1395 00:0000 -  -  -  -  _AdjustAllHooks		equ 4F75h
 1396 00:0000 -  -  -  -  _getkeyhook		equ 4F78h
 1397 00:0000 -  -  -  -  _SetGetcscHook		equ 4F7Bh
 1398 00:0000 -  -  -  -  _ClrGetKeyHook		equ 4F7Eh
 1399 00:0000 -  -  -  -  _call_linkactivity_hook	equ 4F81h
 1400 00:0000 -  -  -  -  _EnableLinkActivityHook	equ 4F84h
 1401 00:0000 -  -  -  -  _DisableLinkHook	equ 4F87h
 1402 00:0000 -  -  -  -  _GetSmallPacket2	equ 4F8Ah
 1403 00:0000 -  -  -  -  _EnableCatalog2Hook	equ 4F8Dh
 1404 00:0000 -  -  -  -  _DisableCatalog2Hook	equ 4F90h
 1405 00:0000 -  -  -  -  _EnableLocalizeHook	equ 4F93h
 1406 00:0000 -  -  -  -  _DisableLocalizeHook	equ 4F96h
 1407 00:0000 -  -  -  -  _SetTokenHook		equ 4F99h
 1408 00:0000 -  -  -  -  _ClearTokenHook		equ 4F9Ch
 1409 00:0000 -  -  -  -  ;4F9Fh ld hl,92c6 / ld a,(92c5) / res 2,a / cp (hl) / ret
 1410 00:0000 -  -  -  -  ;4FA2h hl=11*(92fc)+92c9 / ld a,(hl) / and Fh / cp 2 / ret ; I can almost guarantee this is stat plot related
 1411 00:0000 -  -  -  -  _DispListElementOffLA	equ 4FA5h
 1412 00:0000 -  -  -  -  _Bit_VertSplit		equ 4FA8h
 1413 00:0000 -  -  -  -  _SetHomescreenHook	equ 4FABh
 1414 00:0000 -  -  -  -  _ClrHomeScreenHook	equ 4FAEh
 1415 00:0000 -  -  -  -  _SetWindowHook		equ 4FB1h
 1416 00:0000 -  -  -  -  _DisableWindowHook	equ 4FB4h
 1417 00:0000 -  -  -  -  _SetGraphModeHook	equ 4FB7h
 1418 00:0000 -  -  -  -  _DisableGraphHook	equ 4FBAh
 1419 00:0000 -  -  -  -  _ParseAndStoreSysVar	equ 4FBDh
 1420 00:0000 -  -  -  -  _DisplayEditSysVar	equ 4FC0h
 1421 00:0000 -  -  -  -  _JForceWindowSettings	equ 4FC3h
 1422 00:0000 -  -  -  -  _DelVarArc		equ 4FC6h
 1423 00:0000 -  -  -  -  _DelVarNoArc		equ 4FC9h
 1424 00:0000 -  -  -  -  _SetAllPlots		equ 4FCCh
 1425 00:0000 -  -  -  -  _SetYeditHook     	equ 4FCFh
 1426 00:0000 -  -  -  -  _DisableYEquHook	equ 4FD2h
 1427 00:0000 -  -  -  -  _JForceYEqu		equ 4FD5h
 1428 00:0000 -  -  -  -  _Arc_Unarc		equ 4FD8h ;checks for low battery
 1429 00:0000 -  -  -  -  _ArchiveVar		equ 4FDBh ;set 0,(iy+24h) to check for low battery first
 1430 00:0000 -  -  -  -  _UnarchiveVar		equ 4FDEh
 1431 00:0000 -  -  -  -  _DialogKeyHook		equ 4FE1h ;rawkey hook used by OS for dialog context
 1432 00:0000 -  -  -  -  _SetFontHook		equ 4FE4h
 1433 00:0000 -  -  -  -  _ClrFontHook		equ 4FE7h
 1434 00:0000 -  -  -  -  _SetRegraphHook		equ 4FEAh
 1435 00:0000 -  -  -  -  _DisableRegraphHook	equ 4FEDh
 1436 00:0000 -  -  -  -  _RunGraphingHook	equ 4FF0h
 1437 00:0000 -  -  -  -  _SetTraceHook		equ 4FF3h
 1438 00:0000 -  -  -  -  _DisableTraceHook	equ 4FF6h
 1439 00:0000 -  -  -  -  _RunTraceHook		equ 4FF9h
 1440 00:0000 -  -  -  -  _NDeriv			equ 4FFCh
 1441 00:0000 -  -  -  -  _PolarDerivative	equ 4FFFh
 1442 00:0000 -  -  -  -  _JForceGraphNoKey	equ 5002h
 1443 00:0000 -  -  -  -  _JForceGraphKey		equ 5005h
 1444 00:0000 -  -  -  -  _PowerOff		equ 5008h
 1445 00:0000 -  -  -  -  _GetKeyRetOff		equ 500Bh ;same as getkey, only returns kOff if 2nd+on is pressed 
 1446 00:0000 -  -  -  -  _FindGroupSym		equ 500Eh
 1447 00:0000 -  -  -  -  _FillBasePageTable	equ 5011h
 1448 00:0000 -  -  -  -  _ArcChk			equ 5014h
 1449 00:0000 -  -  -  -  _FlashToRam		equ 5017h
 1450 00:0000 -  -  -  -  _LoadDEIndPaged		equ 501Ah
 1451 00:0000 -  -  -  -  _LoadCIndPaged		equ 501Dh
 1452 00:0000 -  -  -  -  _SetupPagedPtr		equ 5020h
 1453 00:0000 -  -  -  -  _PagedGet		equ 5023h
 1454 00:0000 -  -  -  -  _SetParserHook		equ 5026h
 1455 00:0000 -  -  -  -  _ClearParserHook	equ 5029h
 1456 00:0000 -  -  -  -  _SetAppChangeHook 	equ 502Ch
 1457 00:0000 -  -  -  -  _ClearAppChangeHook	equ 502Fh
 1458 00:0000 -  -  -  -  _EnableGraphicsHook	equ 5032h
 1459 00:0000 -  -  -  -  _DisableGraphicsHook	equ 5035h
 1460 00:0000 -  -  -  -  _IPointNoGraphicsHook	equ 5038h
 1461 00:0000 -  -  -  -  _ILineNoHook		equ 503Bh
 1462 00:0000 -  -  -  -  ;503Eh
 1463 00:0000 -  -  -  -  _DeleteTempPrograms	equ 5041h
 1464 00:0000 -  -  -  -  _EnableCatalog1Hook	equ 5044h
 1465 00:0000 -  -  -  -  _DisableCatalog1Hook	equ 5047h
 1466 00:0000 -  -  -  -  _EnableHelpHook		equ 504Ah
 1467 00:0000 -  -  -  -  _DisableHelpHook	equ 504Dh
 1468 00:0000 -  -  -  -  _DispCatalogEnd		equ 5050h
 1469 00:0000 -  -  -  -  _GetMenuKeypress	equ 5053h
 1470 00:0000 -  -  -  -  _GetCatalogItem		equ 5056h
 1471 00:0000 -  -  -  -  _RunCatalog2Hook	equ 5059h
 1472 00:0000 -  -  -  -  _RunCatalog1Hook	equ 505Ch
 1473 00:0000 -  -  -  -  ;505Fh
 1474 00:0000 -  -  -  -  ;5062h
 1475 00:0000 -  -  -  -  _dispMenuTitle		equ 5065h
 1476 00:0000 -  -  -  -  ;5068h
 1477 00:0000 -  -  -  -  _EnablecxRedispHook	equ 506Bh
 1478 00:0000 -  -  -  -  _DisablecxRedispHook	equ 506Eh
 1479 00:0000 -  -  -  -  _BufCpy			equ 5071h
 1480 00:0000 -  -  -  -  _BufClr			equ 5074h
 1481 00:0000 -  -  -  -  _UnOPExec2		equ 5077h
 1482 00:0000 -  -  -  -  _BinOPExec2		equ 507Ah
 1483 00:0000 -  -  -  -  _LoadMenuB		equ 507Dh ;clears screen and loads menu from B, plus a couple flag changes
 1484 00:0000 -  -  -  -  _DisplayVarInfo		equ 5080h
 1485 00:0000 -  -  -  -  _SetMenuHook		equ 5083h
 1486 00:0000 -  -  -  -  _ClearMenuHook		equ 5086h
 1487 00:0000 -  -  -  -  _getBCOffsetIX		equ 5089h
 1488 00:0000 -  -  -  -  _GetBCOffsetIX2		equ 508Ch
 1489 00:0000 -  -  -  -  _ForceFullScreen	equ 508Fh
 1490 00:0000 -  -  -  -  _GetVariableData	equ 5092h
 1491 00:0000 -  -  -  -  _FindSwapSector		equ 5095h
 1492 00:0000 -  -  -  -  _CopyFlashPage		equ 5098h
 1493 00:0000 -  -  -  -  _FindAppNumPages	equ 509Bh
 1494 00:0000 -  -  -  -  _HLMinus5		equ 509Eh
 1495 00:0000 -  -  -  -  _SendArcPacket		equ 50A1h
 1496 00:0000 -  -  -  -  _ForceGraphKeypress	equ 50A4h
 1497 00:0000 -  -  -  -  _DoNothing3		equ 50A7h
 1498 00:0000 -  -  -  -  _FormBase		equ 50AAh
 1499 00:0000 -  -  -  -  ;50ADh
 1500 00:0000 -  -  -  -  _IsFragmented		equ 50B0h
 1501 00:0000 -  -  -  -  _Chk_Batt_Low		equ 50B3h
 1502 00:0000 -  -  -  -  _Chk_Batt_Low_2		equ 50B6h
 1503 00:0000 -  -  -  -  _Arc_Unarc2		equ 50B9h ;identical to _Arc_Unarc, except you can choose to res 0,(iy+24h) to skip low battery check
 1504 00:0000 -  -  -  -  _GetAppBasePage		equ 50BCh ;input: a=one of an app's pages. output: a=app's first page
 1505 00:0000 -  -  -  -  _SetExSpeed		equ 50BFh
 1506 00:0000 -  -  -  -  _RclExit		equ 50C2h
 1507 00:0000 -  -  -  -  _GroupAllVars		equ 50C5h
 1508 00:0000 -  -  -  -  _UngroupVar		equ 50C8h
 1509 00:0000 -  -  -  -  _WriteToFlash		equ 50CBh ;ReceiveApplication or something like that on OSes below 2.40
 1510 00:0000 -  -  -  -  _SetSilentLinkHook	equ 50CEh
 1511 00:0000 -  -  -  -  _DisableSilentLinkHook	equ 50D1h
 1512 00:0000 -  -  -  -  _TwoVarSet		equ 50D4h
 1513 00:0000 -  -  -  -  _ExecClassCToken	equ 50D7h
 1514 00:0000 -  -  -  -  _ExecClass3Token	equ 50DAh
 1515 00:0000 -  -  -  -  _GetSysInfo		equ 50DDh
 1516 00:0000 -  -  -  -  _NZIf83Plus		equ 50E0h
 1517 00:0000 -  -  -  -  _LinkStatus		equ 50E3h
 1518 00:0000 -  -  -  -  _DoNothing2		equ 50E6h ;originally for TI-Navigator
 1519 00:0000 -  -  -  -  _KeyboardGetKey		equ 50E9h
 1520 00:0000 -  -  -  -  _RunAppLib		equ 50ECh
 1521 00:0000 -  -  -  -  _FindSpecialAppHeader	equ 50EFh
 1522 00:0000 -  -  -  -  _SendUSBData		equ 50F2h
 1523 00:0000 -  -  -  -  _AppGetCBLUSB		equ 50F5h
 1524 00:0000 -  -  -  -  _AppGetCalcUSB		equ 50F8h
 1525 00:0000 -  -  -  -  _GetVarCmdUSB		equ 50FBh
 1526 00:0000 -  -  -  -  ;50FEh
 1527 00:0000 -  -  -  -  _TenX2			equ 5101h
 1528 00:0000 -  -  -  -  ;5104h
 1529 00:0000 -  -  -  -  ;5107h
 1530 00:0000 -  -  -  -  _GetVarVersion		equ 510Ah
 1531 00:0000 -  -  -  -  ;510Dh
 1532 00:0000 -  -  -  -  ;5110h
 1533 00:0000 -  -  -  -  _DeleteTempEditEqu	equ 5113h
 1534 00:0000 -  -  -  -  _JcursorFirst2		equ 5116h
 1535 00:0000 -  -  -  -  ;5119h
 1536 00:0000 -  -  -  -  _PromptMoveBackLeft	equ 511Ch
 1537 00:0000 -  -  -  -  _wputsEOL2		equ 511Fh ;same except res 0,(iy+0Eh) first
 1538 00:0000 -  -  -  -  _InvertTextInsMode	equ 5122h
 1539 00:0000 -  -  -  -  ;5125h
 1540 00:0000 -  -  -  -  _ResetDefaults		equ 5128h
 1541 00:0000 -  -  -  -  _ZeroFinanceVars	equ 512Bh
 1542 00:0000 -  -  -  -  _DispHeader		equ 512Eh
 1543 00:0000 -  -  -  -  _JForceGroup		equ 5131h
 1544 00:0000 -  -  -  -  ;5134h
 1545 00:0000 -  -  -  -  ;5137h
 1546 00:0000 -  -  -  -  _DispCoords		equ 513Ah
 1547 00:0000 -  -  -  -  ;513Dh
 1548 00:0000 -  -  -  -  ;5140h
 1549 00:0000 -  -  -  -  _chkTmr			equ 5143h
 1550 00:0000 -  -  -  -  ;5146h
 1551 00:0000 -  -  -  -  ;5149h
 1552 00:0000 -  -  -  -  ;514Ch
 1553 00:0000 -  -  -  -  _getDate		equ 514Fh
 1554 00:0000 -  -  -  -  _GetDateString		equ 5152h
 1555 00:0000 -  -  -  -  _getDtFmt		equ 5155h
 1556 00:0000 -  -  -  -  _getDtStr		equ 5158h
 1557 00:0000 -  -  -  -  _getTime		equ 515Bh
 1558 00:0000 -  -  -  -  _GetTimeString		equ 515Eh
 1559 00:0000 -  -  -  -  _getTmFmt		equ 5161h
 1560 00:0000 -  -  -  -  _getTmStr		equ 5164h
 1561 00:0000 -  -  -  -  _SetZeroOne		equ 5167h
 1562 00:0000 -  -  -  -  _setDate		equ 516Ah
 1563 00:0000 -  -  -  -  _IsOneTwoThree		equ 516Dh
 1564 00:0000 -  -  -  -  _setTime		equ 5170h
 1565 00:0000 -  -  -  -  _IsOP112or24		equ 5173h
 1566 00:0000 -  -  -  -  _chkTimer0		equ 5176h
 1567 00:0000 -  -  -  -  _timeCnv		equ 5179h
 1568 00:0000 -  -  -  -  _GetLToOP1Extra		equ 517Ch
 1569 00:0000 -  -  -  -  _ClrWindowAndFlags	equ 517Fh
 1570 00:0000 -  -  -  -  _SetMachineID		equ 5182h
 1571 00:0000 -  -  -  -  _ResetLists		equ 5185h
 1572 00:0000 -  -  -  -  _DispValue		equ 5188h
 1573 00:0000 -  -  -  -  ;518Bh
 1574 00:0000 -  -  -  -  ;518Eh
 1575 00:0000 -  -  -  -  _ExecLib		equ 5191h
 1576 00:0000 -  -  -  -  ;5194h
 1577 00:0000 -  -  -  -  _CPOP1OP2Rounded	equ 5197h
 1578 00:0000 -  -  -  -  _CPOP1OP2Rounded2	equ 519Ah
 1579 00:0000 -  -  -  -  _OpenLib		equ 519Dh
 1580 00:0000 -  -  -  -  ;51A0h
 1581 00:0000 -  -  -  -  ;51A3h
 1582 00:0000 -  -  -  -  _ResetIOPrompt		equ 51A6h
 1583 00:0000 -  -  -  -  _StrCpyVarData		equ 51A9h
 1584 00:0000 -  -  -  -  _SetUpEditor		equ 51ACh
 1585 00:0000 -  -  -  -  _SortA			equ 51AFh
 1586 00:0000 -  -  -  -  _SortD			equ 51B2h
 1587 00:0000 -  -  -  -  ;51B5h
 1588 00:0000 -  -  -  -  _IsOP1ResID		equ 51B8h
 1589 00:0000 -  -  -  -  _ListEdNameCxMain	equ 51BBh
 1590 00:0000 -  -  -  -  _ListEdEnterNewName	equ 51BEh
 1591 00:0000 -  -  -  -  ;51C1h
 1592 00:0000 -  -  -  -  _ForceModeKeypress	equ 51C4h ;forces a keypress (and calls help hook) on any of several mode-setting contexts
 1593 00:0000 -  -  -  -  _DispAboutScreen	equ 51C7h
 1594 00:0000 -  -  -  -  _ChkHelpHookVer		equ 51CAh
 1595 00:0000 -  -  -  -  _Disp32			equ 51CDh
 1596 00:0000 -  -  -  -  ;51D0h
 1597 00:0000 -  -  -  -  ;51D3h
 1598 00:0000 -  -  -  -  ;51D6h
 1599 00:0000 -  -  -  -  ;51D9h
 1600 00:0000 -  -  -  -  _DrawTableEditor	equ 51DCh ;draws table editor lines
 1601 00:0000 -  -  -  -  _DisplayListNameEquals	equ 51DFh
 1602 00:0000 -  -  -  -  _DisplayListHeader	equ 51E2h
 1603 00:0000 -  -  -  -  _DispMatrixDimensions	equ 51E5h
 1604 00:0000 -  -  -  -  _HighlightListEdItem	equ 51E8h
 1605 00:0000 -  -  -  -  ;51EBh
 1606 00:0000 -  -  -  -  ;51EEh
 1607 00:0000 -  -  -  -  _MatrixName		equ 51F1h
 1608 00:0000 -  -  -  -  ;51F4h
 1609 00:0000 -  -  -  -  ;51F7h
 1610 00:0000 -  -  -  -  ;51FAh
 1611 00:0000 -  -  -  -  ;51FDh
 1612 00:0000 -  -  -  -  ;5200h
 1613 00:0000 -  -  -  -  ;5203h
 1614 00:0000 -  -  -  -  ;5206h
 1615 00:0000 -  -  -  -  ;5209h
 1616 00:0000 -  -  -  -  ;520Ch
 1617 00:0000 -  -  -  -  ;520Fh
 1618 00:0000 -  -  -  -  _SetupEmptyEditTempEqu	equ 5212h
 1619 00:0000 -  -  -  -  _ExecClass1Token	equ 5215h
 1620 00:0000 -  -  -  -  _HandleMathTokenParse	equ 5218h
 1621 00:0000 -  -  -  -  _MaybePushMultiplyOp	equ 521Bh
 1622 00:0000 -  -  -  -  _RestartParseOP1Result	equ 521Eh
 1623 00:0000 -  -  -  -  _Chk_Batt_Level		equ 5221h
 1624 00:0000 -  -  -  -  ;5224h
 1625 00:0000 -  -  -  -  ;5227h
 1626 00:0000 -  -  -  -  ;522Ah
 1627 00:0000 -  -  -  -  _DisplayListEquals	equ 522Dh
 1628 00:0000 -  -  -  -  _GetCurPlotListOffset	equ 5230h
 1629 00:0000 -  -  -  -  _GoToLastRow		equ 5233h
 1630 00:0000 -  -  -  -  _RectBorder		equ 5236h
 1631 00:0000 -  -  -  -  ;5239h
 1632 00:0000 -  -  -  -  ;523Ch
 1633 00:0000 -  -  -  -  ;523Fh
 1634 00:0000 -  -  -  -  _LoadA5			equ 5242h
 1635 00:0000 -  -  -  -  ;5245h
 1636 00:0000 -  -  -  -  _NamedListToOP1		equ 5248h
 1637 00:0000 -  -  -  -  ;524Bh
 1638 00:0000 -  -  -  -  ;524Eh
 1639 00:0000 -  -  -  -  ;5251h
 1640 00:0000 -  -  -  -  _InitUSBDeviceCallback	equ 5254h
 1641 00:0000 -  -  -  -  _KillUSBDevice		equ 5257h ;this actually recycles the USB connection and re-inits it (I think)
 1642 00:0000 -  -  -  -  _SetUSBConfiguration	equ 525Ah
 1643 00:0000 -  -  -  -  _RequestUSBData		equ 525Dh
 1644 00:0000 -  -  -  -  _StopReceivingUSBData	equ 5260h
 1645 00:0000 -  -  -  -  _FindAppHeaderByPage	equ 5263h
 1646 00:0000 -  -  -  -  _FindNextHeaderByPage	equ 5266h
 1647 00:0000 -  -  -  -  _IsMatchingLaunchApp	equ 5269h
 1648 00:0000 -  -  -  -  _InitTimer		equ 526Ch
 1649 00:0000 -  -  -  -  _KillTimer		equ 526Fh
 1650 00:0000 -  -  -  -  _StartTimer		equ 5272h
 1651 00:0000 -  -  -  -  _RestartTimer		equ 5275h
 1652 00:0000 -  -  -  -  _StopTimer		equ 5278h
 1653 00:0000 -  -  -  -  _WaitTimer		equ 527Bh
 1654 00:0000 -  -  -  -  _CheckTimer		equ 527Eh
 1655 00:0000 -  -  -  -  _CheckTimerRestart	equ 5281h
 1656 00:0000 -  -  -  -  _SetVertGraphActive	equ 5284h
 1657 00:0000 -  -  -  -  _ClearVertGraphActive	equ 5287h
 1658 00:0000 -  -  -  -  _EnableUSBHook		equ 528Ah
 1659 00:0000 -  -  -  -  _DisableUSBHook		equ 528Dh
 1660 00:0000 -  -  -  -  _InitUSBDevice		equ 5290h
 1661 00:0000 -  -  -  -  _KillUSBPeripheral	equ 5293h
 1662 00:0000 -  -  -  -  _GetCurPlotListOffset2	equ 5296h
 1663 00:0000 -  -  -  -  ;5299h
 1664 00:0000 -  -  -  -  _GraphLine		equ 529Ch
 1665 00:0000 -  -  -  -  ;529Fh
 1666 00:0000 -  -  -  -  ;52A2h
 1667 00:0000 -  -  -  -  ;52A5h
 1668 00:0000 -  -  -  -  ;52A8h
 1669 00:0000 -  -  -  -  ;52ABh
 1670 00:0000 -  -  -  -  ;52AEh
 1671 00:0000 -  -  -  -  _ZifTableEditor		equ 52B1h
 1672 00:0000 -  -  -  -  ;52B4h
 1673 00:0000 -  -  -  -  _GetCurPlotOffset	equ 52B7h
 1674 00:0000 -  -  -  -  ;52BAh
 1675 00:0000 -  -  -  -  _FindAppName		equ 52BDh
 1676 00:0000 -  -  -  -  ;52C0h
 1677 00:0000 -  -  -  -  ;52C3h
 1678 00:0000 -  -  -  -  _UpdateStatPlotLists	equ 52C6h
 1679 00:0000 -  -  -  -  _GrBufCpyCustom		equ 52C9h
 1680 00:0000 -  -  -  -  ;52CCh
 1681 00:0000 -  -  -  -  ;52CFh
 1682 00:0000 -  -  -  -  ;52D2h
 1683 00:0000 -  -  -  -  _VDispRealOP1		equ 52D5h
 1684 00:0000 -  -  -  -  _DispXEqualsNum		equ 52D8h
 1685 00:0000 -  -  -  -  _ResetGraphSettings	equ 52DBh
 1686 00:0000 -  -  -  -  _InitializeVariables	equ 52DEh
 1687 00:0000 -  -  -  -  ;52E1h ;bit 4,(9C75h) (this is DEFINITELY returning the status of something when acting as a TI-SmartView Input Pad...this bit is bit 1 of the data byte from a PC HID Set Report request)
 1688 00:0000 -  -  -  -  _DelVarSym		equ 52E4h
 1689 00:0000 -  -  -  -  _FindAppUpNoCase	equ 52E7h
 1690 00:0000 -  -  -  -  _FindAppDnNoCase	equ 52EAh
 1691 00:0000 -  -  -  -  _DeleteInvalidApps	equ 52EDh
 1692 00:0000 -  -  -  -  _DeleteApp_Link		equ 52F0h
 1693 00:0000 -  -  -  -  _CmpSymsNoCase		equ 52F3h
 1694 00:0000 -  -  -  -  _SetAppRestrictions	equ 52F6h
 1695 00:0000 -  -  -  -  _RemoveAppRestrictions	equ 52F9h
 1696 00:0000 -  -  -  -  _QueryAppRestrictions	equ 52FCh
 1697 00:0000 -  -  -  -  _DispAppRestrictions	equ 52FFh
 1698 00:0000 -  -  -  -  _SetupHome		equ 5302h
 1699 00:0000 -  -  -  -  _GRPUTAWAYFull		equ 5305h ;same as _GRPUTAWAY except it assumes no split screen
 1700 00:0000 -  -  -  -  _SendSmartPadKeypress	equ 5308h ;B and A are the inputs
 1701 00:0000 -  -  -  -  _ToggleUSBSmartPadInput	equ 530Bh ;A is input, 0 or 1 to enable/disable
 1702 00:0000 -  -  -  -  _IsUSBDeviceConnected	equ 530Eh ;bit 4,(81h) \ ret, this is just a guess on its purpose but it seems to work
 1703 00:0000 -  -  -  -  _RecycleUSB		equ 5311h ;identical to 5257h
 1704 00:0000 -  -  -  -  _PolarEquToOP1		equ 5314h
 1705 00:0000 -  -  -  -  _ParamXEquToOP1		equ 5317h
 1706 00:0000 -  -  -  -  _ParamYEquToOP1		equ 531Ah
 1707 00:0000 -  -  -  -  _GetRestrictionsOptions	equ 531Dh
 1708 00:0000 -  -  -  -  _DispResetComplete	equ 5320h
 1709 00:0000 -  -  -  -  _PTTReset		equ 5323h
 1710 00:0000 -  -  -  -  _FindAppCustom		equ 5326h
 1711 00:0000 -  -  -  -  _ClearGraphStyles	equ 5329h
 1712 00:0000 -  -  -  -  ;532Ch
 1713 00:0000 -  -  -  -  ;532Fh
 1714 00:0000 -  -  -  -  ;5332h
 1715 00:0000 -  -  -  -  ;5335h
 1716 00:0000 -  -  -  -  ;5338h
 1717 00:0000 -  -  -  -  ;533Bh
 1718 00:0000 -  -  -  -  ;533Eh
 1719 00:0000 -  -  -  -  ;5341h
 1720 00:0000 -  -  -  -  ;5344h
 1721 00:0000 -  -  -  -  ;5347h
 1722 00:0000 -  -  -  -  ;534Ah
 1723 00:0000 -  -  -  -  ;534Dh
 1724 00:0000 -  -  -  -  ;5350h
 1725 00:0000 -  -  -  -  ;5353h
 1726 00:0000 -  -  -  -  ;5356h
 1727 00:0000 -  -  -  -  ;5359h
 1728 00:0000 -  -  -  -  ;535Ch
 1729 00:0000 -  -  -  -  ;535Fh
 1730 00:0000 -  -  -  -  ;5362h
 1731 00:0000 -  -  -  -  ;5365h
 1732 00:0000 -  -  -  -  ;5368h
 1733 00:0000 -  -  -  -  ;536Bh
 1734 00:0000 -  -  -  -  ;536Eh
 1735 00:0000 -  -  -  -  ;5371h
 1736 00:0000 -  -  -  -  ;5374h
 1737 00:0000 -  -  -  -  ;5377h
 1738 00:0000 -  -  -  -  ;537Ah
 1739 00:0000 -  -  -  -  ;537Dh
 1740 00:0000 -  -  -  -  ;5380h
 1741 00:0000 -  -  -  -  ;5383h
 1742 00:0000 -  -  -  -  ;5386h
 1743 00:0000 -  -  -  -  ;5389h
 1744 00:0000 -  -  -  -  ;538Ch
 1745 00:0000 -  -  -  -  ;538Fh
 1746 00:0000 -  -  -  -  ;5392h
 1747 00:0000 -  -  -  -  ;5395h
 1748 00:0000 -  -  -  -  ;5398h
 1749 00:0000 -  -  -  -  ;539Bh
 1750 00:0000 -  -  -  -  ;539Eh
 1751 00:0000 -  -  -  -  ;53A1h
 1752 00:0000 -  -  -  -  ;53A4h
 1753 00:0000 -  -  -  -  ;53A7h
 1754 00:0000 -  -  -  -  ;53AAh
 1755 00:0000 -  -  -  -  ;53ADh
 1756 00:0000 -  -  -  -  ;53B0h
 1757 00:0000 -  -  -  -  ;53B3h
 1758 00:0000 -  -  -  -  ;53B6h
 1759 00:0000 -  -  -  -  ;53B9h
 1760 00:0000 -  -  -  -  ;53BCh
 1761 00:0000 -  -  -  -  ;53BFh
 1762 00:0000 -  -  -  -  ;53C2h
 1763 00:0000 -  -  -  -  ;53C5h
 1764 00:0000 -  -  -  -  ;53C8h
 1765 00:0000 -  -  -  -  ;53CBh
 1766 00:0000 -  -  -  -  ;53CEh
 1767 00:0000 -  -  -  -  ;53D1h
 1768 00:0000 -  -  -  -  ;53D4h
 1769 00:0000 -  -  -  -  ;53D7h
 1770 00:0000 -  -  -  -  ;53DAh
 1771 00:0000 -  -  -  -  ;53DDh
 1772 00:0000 -  -  -  -  ;53E0h
 1773 00:0000 -  -  -  -  ;53E3h
 1774 00:0000 -  -  -  -  ;53E6h
 1775 00:0000 -  -  -  -  ;53E9h
 1776 00:0000 -  -  -  -  ;53ECh
 1777 00:0000 -  -  -  -  ;53EFh
 1778 00:0000 -  -  -  -  ;53F2h
 1779 00:0000 -  -  -  -  ;53F5h
 1780 00:0000 -  -  -  -  ;53F8h
 1781 00:0000 -  -  -  -  ;53FBh
 1782 00:0000 -  -  -  -  ;53FEh
 1783 00:0000 -  -  -  -  ;5401h
 1784 00:0000 -  -  -  -  ;5404h
 1785 00:0000 -  -  -  -  ;5407h
 1786 00:0000 -  -  -  -  ;540Ah
 1787 00:0000 -  -  -  -  ;540Dh
 1788 00:0000 -  -  -  -  ;5410h
 1789 00:0000 -  -  -  -  ;5413h
 1790 00:0000 -  -  -  -  ;5416h
 1791 00:0000 -  -  -  -  ;5419h
 1792 00:0000 -  -  -  -  ;541Ch
 1793 00:0000 -  -  -  -  ;541Fh
 1794 00:0000 -  -  -  -  ;5422h
 1795 00:0000 -  -  -  -  ;5425h
 1796 00:0000 -  -  -  -  ;5428h
 1797 00:0000 -  -  -  -  ;542Bh
 1798 00:0000 -  -  -  -  ;542Eh
 1799 00:0000 -  -  -  -  ;5431h
 1800 00:0000 -  -  -  -  ;5434h
 1801 00:0000 -  -  -  -  ;5437h
 1802 00:0000 -  -  -  -  ;543Ah
 1803 00:0000 -  -  -  -  ;543Dh
 1804 00:0000 -  -  -  -  ;5440h
 1805 00:0000 -  -  -  -  ;5443h
 1806 00:0000 -  -  -  -  ;5446h
 1807 00:0000 -  -  -  -  ;5449h
 1808 00:0000 -  -  -  -  _xorAret			equ 5443h
 1809 00:0000 -  -  -  -  _scfRet				equ 5446h
 1810 00:0000 -  -  -  -  _ret				equ 5449h
 1811 00:0000 -  -  -  -  
 1812 00:0000 -  -  -  -  ;Page 1Fh ROM Calls
 1813 00:0000 -  -  -  -  ;--------------------------------
 1814 00:0000 -  -  -  -  bootbtf				equ 8000h
 1815 00:0000 -  -  -  -  ;400Fh may point to version string ("1.02 ",0)
 1816 00:0000 -  -  -  -  _MD5Final			equ 8018h
 1817 00:0000 -  -  -  -  _RSAValidate			equ 801Bh
 1818 00:0000 -  -  -  -  _cmpStr				equ 801Eh ;BigNumCompare
 1819 00:0000 -  -  -  -  _WriteAByte			equ 8021h
 1820 00:0000 -  -  -  -  _EraseFlash			equ 8024h
 1821 00:0000 -  -  -  -  _FindFirstCertField		equ 8027h
 1822 00:0000 -  -  -  -  _ZeroToCertificate		equ 802Ah
 1823 00:0000 -  -  -  -  _GetCertificateEnd		equ 802Dh
 1824 00:0000 -  -  -  -  _FindGroupedField		equ 8030h
 1825 00:0000 -  -  -  -  _ret_1				equ 8033h
 1826 00:0000 -  -  -  -  _ret_2				equ 8036h
 1827 00:0000 -  -  -  -  _ret_3				equ 8039h
 1828 00:0000 -  -  -  -  _ret_4				equ 803Ch
 1829 00:0000 -  -  -  -  _ret_5				equ 803Fh
 1830 00:0000 -  -  -  -  _Mult8By8			equ 8042h
 1831 00:0000 -  -  -  -  _Mult16By8			equ 8045h
 1832 00:0000 -  -  -  -  _Div16By8			equ 8048h
 1833 00:0000 -  -  -  -  _Div16By16			equ 804Bh
 1834 00:0000 -  -  -  -  ;804Eh ;scary certificate reading and writing, something about calc ID and fields 0A10/0A20
 1835 00:0000 -  -  -  -  _LoadAIndPaged			equ 8051h
 1836 00:0000 -  -  -  -  _FlashToRam2			equ 8054h
 1837 00:0000 -  -  -  -  _GetCertificateStart		equ 8057h
 1838 00:0000 -  -  -  -  _GetFieldSize			equ 805Ah
 1839 00:0000 -  -  -  -  _FindSubField			equ 805Dh
 1840 00:0000 -  -  -  -  _EraseCertificateSector		equ 8060h
 1841 00:0000 -  -  -  -  _CheckHeaderKey			equ 8063h
 1842 00:0000 -  -  -  -  ;8066h ;just returns Z if specified data in field 0310h, subfield 0610h exists, DE points to data of that field you want to find
 1843 00:0000 -  -  -  -  ;8069h ;just returns number of 0810h/0710h fields that exist in certificate or something, in IX
 1844 00:0000 -  -  -  -  _Load_LFontV2			equ 806Ch
 1845 00:0000 -  -  -  -  _Load_LFontV			equ 806Fh
 1846 00:0000 -  -  -  -  _ReceiveOS			equ 8072h
 1847 00:0000 -  -  -  -  _FindOSHeaderSubField		equ 8075h
 1848 00:0000 -  -  -  -  _FindNextCertField		equ 8078h
 1849 00:0000 -  -  -  -  _GetByteOrBoot			equ 807Bh
 1850 00:0000 -  -  -  -  _getSerial			equ 807Eh ;GetCalcSerial
 1851 00:0000 -  -  -  -  _ReceiveCalcID			equ 8081h ;receives certificate replacement (including calculator ID, fails if already exists) and writes it, requires Flash unlocked
 1852 00:0000 -  -  -  -  _EraseFlashPage			equ 8084h
 1853 00:0000 -  -  -  -  _WriteFlashUnsafe		equ 8087h
 1854 00:0000 -  -  -  -  _dispBootVer			equ 808Ah
 1855 00:0000 -  -  -  -  _MD5Init			equ 808Dh
 1856 00:0000 -  -  -  -  _MD5Update			equ 8090h
 1857 00:0000 -  -  -  -  _MarkOSInvalid			equ 8093h
 1858 00:0000 -  -  -  -  _FindProgramLicense		equ 8096h ;copies 8010h field to appID and other insane stuff that makes zero sense
 1859 00:0000 -  -  -  -  _MarkOSValid			equ 8099h
 1860 00:0000 -  -  -  -  _CheckOSValidated		equ 809Ch
 1861 00:0000 -  -  -  -  _SetupAppPubKey			equ 809Fh
 1862 00:0000 -  -  -  -  _SigModR			equ 80A2h
 1863 00:0000 -  -  -  -  _TransformHash			equ 80A5h
 1864 00:0000 -  -  -  -  _IsAppFreeware			equ 80A8h
 1865 00:0000 -  -  -  -  _FindAppHeaderSubField		equ 80ABh
 1866 00:0000 -  -  -  -  _WriteValidationNumber		equ 80AEh ;generates two-byte validation number from calc ID and stores to certificate
 1867 00:0000 -  -  -  -  _Div32By16			equ 80B1h
 1868 00:0000 -  -  -  -  _FindGroup			equ 80B4h ;searches until field of DE-like group is found (DE=0A00h, it stops when it finds 0Ax0h)
 1869 00:0000 -  -  -  -  _getBootVer			equ 80B7h
 1870 00:0000 -  -  -  -  _getHardwareVersion		equ 80BAh
 1871 00:0000 -  -  -  -  _xorA				equ 80BDh ;xor a
 1872 00:0000 -  -  -  -  _bignumpowermod17		equ 80C0h
 1873 00:0000 -  -  -  -  _ProdNrPart1			equ 80C3h
 1874 00:0000 -  -  -  -  _WriteAByteSafe			equ 80C6h
 1875 00:0000 -  -  -  -  _WriteFlash			equ 80C9h
 1876 00:0000 -  -  -  -  _SetupDateStampPubKey		equ 80CCh
 1877 00:0000 -  -  -  -  _SetFlashLowerBound		equ 80CFh
 1878 00:0000 -  -  -  -  _LowBatteryBoot			equ 80D2h
 1879 00:0000 -  -  -  -  ;TI-84 Plus/Silver Edition Only Entry Points
 1880 00:0000 -  -  -  -  _AttemptUSBOSReceive		equ 80E4h ;Z to wait for USB cable insert & get OS, NZ and A= contents of port 4Dh or 56h, ON to cancel & clear RAM
 1881 00:0000 -  -  -  -  _DisplayBootMessage		equ 80E7h
 1882 00:0000 -  -  -  -  _NewLine2			equ 80EAh
 1883 00:0000 -  -  -  -  _DisplayBootError10		equ 80EDh
 1884 00:0000 -  -  -  -  _Chk_Batt_Low_B			equ 80F0h
 1885 00:0000 -  -  -  -  _Chk_Batt_Low_B2		equ 80F3h
 1886 00:0000 -  -  -  -  _ReceiveOS_USB			equ 80F6h
 1887 00:0000 -  -  -  -  _DisplayOSProgress		equ 80F9h
 1888 00:0000 -  -  -  -  _ResetCalc			equ 80FCh
 1889 00:0000 -  -  -  -  _SetupOSPubKey			equ 80FFh
 1890 00:0000 -  -  -  -  _CheckHeaderKeyHL		equ 8102h ;same as _CheckHeaderKey, only you pass the address of header in HL, not at appData
 1891 00:0000 -  -  -  -  _USBErrorCleanup		equ 8105h ;kills some USB stuff (doesn't completely kill periph communication), error handler in boot code
 1892 00:0000 -  -  -  -  _InitUSB			equ 8108h ;initializes USB hardware as peripheral, sets 5,(iy+1Bh), C set if problems
 1893 00:0000 -  -  -  -  ;810Bh set 1,(81h) and wait (has something to do with USB peripheral kill, but it doesn't actually kill it)
 1894 00:0000 -  -  -  -  _KillUSB			equ 810Eh ;identical to 8105h, except in the middle of the outputs, it sends zero to port 4Ch
 1895 00:0000 -  -  -  -  _DisplayBootError1		equ 8111h
 1896 00:0000 -  -  -  -  _DisplayBootError2		equ 8114h
 1897 00:0000 -  -  -  -  _DisplayBootError3		equ 8117h
 1898 00:0000 -  -  -  -  _DisplayBootError4		equ 811Ah
 1899 00:0000 -  -  -  -  _DisplayBootError5		equ 811Dh
 1900 00:0000 -  -  -  -  _DisplayBootError6		equ 8120h
 1901 00:0000 -  -  -  -  _DisplayBootError7		equ 8123h
 1902 00:0000 -  -  -  -  _DisplayBootError8		equ 8126h
 1903 00:0000 -  -  -  -  _DisplayBootError9		equ 8129h
 1904 00:0000 -  -  -  -  
 1905 00:0000 -  -  -  -  ;RAM Equates
 1906 00:0000 -  -  -  -  ;--------------------------------
 1907 00:0000 -  -  -  -  ramStart		equ 8000h
 1908 00:0000 -  -  -  -  appData			equ 8000h
 1909 00:0000 -  -  -  -  ramCode			equ 8100h
 1910 00:0000 -  -  -  -  SmallEditColumnLeft	equ 8177h
 1911 00:0000 -  -  -  -  SmallEditRow		equ 8178h
 1912 00:0000 -  -  -  -  SmallEditColumnRight	equ 8179h
 1913 00:0000 -  -  -  -  ;penCol left edge?	equ 817Bh
 1914 00:0000 -  -  -  -  bigInteger1		equ 8182h
 1915 00:0000 -  -  -  -  SmallEditCancelParse	equ 8194h
 1916 00:0000 -  -  -  -  SmallEditRowCount	equ 81B7h
 1917 00:0000 -  -  -  -  bigInteger2		equ 81C3h
 1918 00:0000 -  -  -  -  SmallEditPromptString	equ 81CCh
 1919 00:0000 -  -  -  -  ramCodeEnd		equ 822Fh
 1920 00:0000 -  -  -  -  baseAppBrTab		equ 8230h ;table of base pages for apps on page < 20h (starts with eight zeroes because they're OS pages)
 1921 00:0000 -  -  -  -  clockFlag		equ 8230h ;bit 2 set for 24-hour mode and don't display "AM/PM"
 1922 00:0000 -  -  -  -  clockIDs		equ 8231h ;five bytes, numbers 0-4 in memory, that when present, stops displaying clock numbers in time setting context?
 1923 00:0000 -  -  -  -  bootTemp		equ 8251h
 1924 00:0000 -  -  -  -  MD5Temp			equ 8259h
 1925 00:0000 -  -  -  -  MD5Length		equ 8269h
 1926 00:0000 -  -  -  -  MD5Hash			equ 8292h
 1927 00:0000 -  -  -  -  appSearchPage		equ 82A3h
 1928 00:0000 -  -  -  -  tempSwapArea		equ 82A5h
 1929 00:0000 -  -  -  -  ;something		equ 837Bh ;18 bytes, probably indicates something about Flash app pages, start out as 0FFh
 1930 00:0000 -  -  -  -  appID			equ 838Dh
 1931 00:0000 -  -  -  -  arcPageEnd		equ 8392h
 1932 00:0000 -  -  -  -  arcPtrEnd		equ 8393h
 1933 00:0000 -  -  -  -  ;839Fh something...field size bytes?
 1934 00:0000 -  -  -  -  MD5Buffer		equ 83A5h
 1935 00:0000 -  -  -  -  Abackup			equ 83EBh
 1936 00:0000 -  -  -  -  ramReturnData		equ 83EDh
 1937 00:0000 -  -  -  -  arcInfo			equ 83EEh
 1938 00:0000 -  -  -  -  savedArcInfo		equ 8406h
 1939 00:0000 -  -  -  -  appInfo			equ 8432h
 1940 00:0000 -  -  -  -  appBank_jump		equ 843Ch
 1941 00:0000 -  -  -  -  appPage			equ 843Eh
 1942 00:0000 -  -  -  -  kbdScanCode		equ 843Fh
 1943 00:0000 -  -  -  -  kbdKey			equ 8444h
 1944 00:0000 -  -  -  -  kbdGetKy		equ 8445h
 1945 00:0000 -  -  -  -  keyExtend		equ 8446h
 1946 00:0000 -  -  -  -  EXTECHO			equ keyExtend
 1947 00:0000 -  -  -  -  contrast		equ 8447h
 1948 00:0000 -  -  -  -  apdSubTimer		equ 8448h
 1949 00:0000 -  -  -  -  apdTimer		equ 8449h
 1950 00:0000 -  -  -  -  curTime			equ 844Ah
 1951 00:0000 -  -  -  -  curRow			equ 844Bh
 1952 00:0000 -  -  -  -  curCol			equ 844Ch
 1953 00:0000 -  -  -  -  curOffset		equ 844Dh
 1954 00:0000 -  -  -  -  curUnder		equ 844Eh
 1955 00:0000 -  -  -  -  curY			equ 844Fh
 1956 00:0000 -  -  -  -  curType			equ 8450h
 1957 00:0000 -  -  -  -  curXRow			equ 8451h
 1958 00:0000 -  -  -  -  prevDData		equ 8452h
 1959 00:0000 -  -  -  -  lFont_record		equ 845Ah
 1960 00:0000 -  -  -  -  sFont_record		equ 8462h
 1961 00:0000 -  -  -  -  tokVarPtr		equ 846Ah
 1962 00:0000 -  -  -  -  tokLen			equ 846Ch
 1963 00:0000 -  -  -  -  indicMem		equ 846Eh ;eight bytes used by _saveTR and _restoreTR to store image in top right corner
 1964 00:0000 -  -  -  -  indicCounter		equ 8476h
 1965 00:0000 -  -  -  -  indicBusy		equ 8477h
 1966 00:0000 -  -  -  -  OP1			equ 8478h
 1967 00:0000 -  -  -  -  OP1M			equ 847Ah
 1968 00:0000 -  -  -  -  OP2			equ 8483h
 1969 00:0000 -  -  -  -  OP2M			equ 8485h
 1970 00:0000 -  -  -  -  OP2EXT			equ 848Ch
 1971 00:0000 -  -  -  -  OP3			equ 848Eh
 1972 00:0000 -  -  -  -  OP3M			equ 8490h
 1973 00:0000 -  -  -  -  OP4			equ 8499h
 1974 00:0000 -  -  -  -  OP4M			equ 849Bh
 1975 00:0000 -  -  -  -  OP5			equ 84A4h
 1976 00:0000 -  -  -  -  OP5M			equ 84A6h
 1977 00:0000 -  -  -  -  OP6			equ 84AFh
 1978 00:0000 -  -  -  -  OP6M			equ 84B1h
 1979 00:0000 -  -  -  -  OP6EXT			equ 84B8h
 1980 00:0000 -  -  -  -  progToEdit		equ 84BFh
 1981 00:0000 -  -  -  -  nameBuff		equ 84C7h
 1982 00:0000 -  -  -  -  equ_edit_save		equ 84D2h
 1983 00:0000 -  -  -  -  iMathPtr1		equ 84D3h
 1984 00:0000 -  -  -  -  iMathPtr2		equ 84D5h
 1985 00:0000 -  -  -  -  iMathPtr3		equ 84D7h
 1986 00:0000 -  -  -  -  iMathPtr4		equ 84D9h
 1987 00:0000 -  -  -  -  iMathPtr5		equ 84DBh
 1988 00:0000 -  -  -  -  chkDelPtr1		equ 84DDh
 1989 00:0000 -  -  -  -  chkDelPtr2		equ 84DFh
 1990 00:0000 -  -  -  -  insDelPtr		equ 84E1h
 1991 00:0000 -  -  -  -  upDownPtr		equ 84E3h
 1992 00:0000 -  -  -  -  fOutDat			equ 84E5h
 1993 00:0000 -  -  -  -  asm_data_ptr1		equ 84EBh
 1994 00:0000 -  -  -  -  asm_data_ptr2		equ 84EDh
 1995 00:0000 -  -  -  -  asm_sym_ptr1		equ 84EFh
 1996 00:0000 -  -  -  -  asm_sym_ptr2		equ 84F1h
 1997 00:0000 -  -  -  -  asm_ram			equ 84F3h
 1998 00:0000 -  -  -  -  asm_ind_call		equ 8507h
 1999 00:0000 -  -  -  -  textShadow		equ 8508h
 2000 00:0000 -  -  -  -  textShadCur		equ 8588h
 2001 00:0000 -  -  -  -  textShadTop		equ 858Ah
 2002 00:0000 -  -  -  -  textShadAlph		equ 858Bh
 2003 00:0000 -  -  -  -  textShadIns		equ 858Ch
 2004 00:0000 -  -  -  -  cxMain			equ 858Dh
 2005 00:0000 -  -  -  -  cxPPutAway		equ 858Fh
 2006 00:0000 -  -  -  -  cxPutAway		equ 8591h
 2007 00:0000 -  -  -  -  cxErrorEP		equ 8595h
 2008 00:0000 -  -  -  -  cxSizeWind		equ 8597h
 2009 00:0000 -  -  -  -  cxPage			equ 8599h
 2010 00:0000 -  -  -  -  cxCurApp		equ 859Ah
 2011 00:0000 -  -  -  -  cxPrev			equ 859Bh ;12 bytes are shadows of cxMain through cxCurApp and appFlags
 2012 00:0000 -  -  -  -  monQH			equ 85AAh
 2013 00:0000 -  -  -  -  monQT			equ 85ABh
 2014 00:0000 -  -  -  -  monQueue		equ 85ACh
 2015 00:0000 -  -  -  -  onSP			equ 85BCh
 2016 00:0000 -  -  -  -  promptRow		equ 85C0h
 2017 00:0000 -  -  -  -  promptCol		equ 85C1h
 2018 00:0000 -  -  -  -  promptIns		equ 85C2h
 2019 00:0000 -  -  -  -  promptShift		equ 85C3h
 2020 00:0000 -  -  -  -  promptRet		equ 85C4h
 2021 00:0000 -  -  -  -  promptValid		equ 85C6h
 2022 00:0000 -  -  -  -  promptTop		equ 85C8h
 2023 00:0000 -  -  -  -  promptCursor		equ 85CAh
 2024 00:0000 -  -  -  -  promptTail		equ 85CCh
 2025 00:0000 -  -  -  -  promptBtm		equ 85CEh
 2026 00:0000 -  -  -  -  varType			equ 85D0h
 2027 00:0000 -  -  -  -  varCurrent		equ 85D1h
 2028 00:0000 -  -  -  -  varClass		equ 85D9h
 2029 00:0000 -  -  -  -  CatalogCurrent		equ 85DAh ;word at this location starting with 6007h corresponds to what is highlighted in catalog
 2030 00:0000 -  -  -  -  menuActive		equ 85DCh
 2031 00:0000 -  -  -  -  menuAppDepth		equ 85DDh
 2032 00:0000 -  -  -  -  MenuCurrent		equ 85DEh
 2033 00:0000 -  -  -  -  ;			equ 85DFh ;holds current submenu index
 2034 00:0000 -  -  -  -  ;			equ 85E0h ;holds currently selected item in current submenu
 2035 00:0000 -  -  -  -  ;			equ 85E1h ;holds number of submenus for this menu
 2036 00:0000 -  -  -  -  ;			equ 85E2h ;holds number of items in this submenu
 2037 00:0000 -  -  -  -  ;			equ 85E3h ;iy+appFlags backup for menu stuff
 2038 00:0000 -  -  -  -  ;			equ 85E4h ;iy+0Ch backup for menu stuff
 2039 00:0000 -  -  -  -  ;			equ 85E5h ;curGStyle backup for menu stuff
 2040 00:0000 -  -  -  -  ;			equ 85E6h ;iy+graphFlags backup for menu stuff
 2041 00:0000 -  -  -  -  ProgCurrent		equ 85E8h
 2042 00:0000 -  -  -  -  ;something, OP1 backup?	equ 85F2h ;type and name of topmost variable on menu with names
 2043 00:0000 -  -  -  -  ;something		equ 85FDh
 2044 00:0000 -  -  -  -  userMenuSA		equ 85FEh
 2045 00:0000 -  -  -  -  ioPrompt		equ 865Fh
 2046 00:0000 -  -  -  -  dImageWidth		equ 8660h
 2047 00:0000 -  -  -  -  ioFlag			equ 8670h
 2048 00:0000 -  -  -  -  sndRecState		equ 8672h
 2049 00:0000 -  -  -  -  ioErrState		equ 8673h
 2050 00:0000 -  -  -  -  header			equ 8674h
 2051 00:0000 -  -  -  -  ioData			equ 867Dh
 2052 00:0000 -  -  -  -  ioNewData		equ 8689h
 2053 00:0000 -  -  -  -  bakHeader		equ 868Bh
 2054 00:0000 -  -  -  -  ;something		equ 8697h ;app bitmap for selecting stuff from menus
 2055 00:0000 -  -  -  -  ;something		equ 86B7h ;used in 47h and 74h link packets
 2056 00:0000 -  -  -  -  penCol			equ 86D7h
 2057 00:0000 -  -  -  -  penRow			equ 86D8h
 2058 00:0000 -  -  -  -  rclQueue		equ 86D9h
 2059 00:0000 -  -  -  -  rclQueueEnd		equ 86DBh
 2060 00:0000 -  -  -  -  errNo			equ 86DDh
 2061 00:0000 -  -  -  -  errSP			equ 86DEh
 2062 00:0000 -  -  -  -  errOffset		equ 86E0h
 2063 00:0000 -  -  -  -  saveSScreen		equ 86ECh
 2064 00:0000 -  -  -  -  asm_prgm_size		equ 89ECh
 2065 00:0000 -  -  -  -  bstCounter		equ 89EEh
 2066 00:0000 -  -  -  -  flags			equ 89F0h
 2067 00:0000 -  -  -  -  appFlagsAddr		equ 89FDh
 2068 00:0000 -  -  -  -  ;something		equ 8A36h ;stats-related? This gets stored to (varCurrent) for some reason
 2069 00:0000 -  -  -  -  statVars		equ 8A3Ah
 2070 00:0000 -  -  -  -  anovaf_vars		equ 8C17h
 2071 00:0000 -  -  -  -  infVars			equ 8C4Dh
 2072 00:0000 -  -  -  -  infVar1			equ 8C56h
 2073 00:0000 -  -  -  -  infVar2			equ 8C5Fh
 2074 00:0000 -  -  -  -  infVar3			equ 8C68h
 2075 00:0000 -  -  -  -  infVar4			equ 8C71h
 2076 00:0000 -  -  -  -  infVar5			equ 8C7Ah
 2077 00:0000 -  -  -  -  infVar6			equ 8C83h
 2078 00:0000 -  -  -  -  infVar7			equ 8C8Ch
 2079 00:0000 -  -  -  -  infVar8			equ 8C95h
 2080 00:0000 -  -  -  -  infVar9			equ 8C9Eh
 2081 00:0000 -  -  -  -  infVar10		equ 8CA7h
 2082 00:0000 -  -  -  -  infVar11		equ 8CB0h
 2083 00:0000 -  -  -  -  infVar12		equ 8CB9h
 2084 00:0000 -  -  -  -  infVar13		equ 8CC2h
 2085 00:0000 -  -  -  -  infVar14		equ 8CCBh
 2086 00:0000 -  -  -  -  infVar15		equ 8CD4h
 2087 00:0000 -  -  -  -  infVar16		equ 8CDDh
 2088 00:0000 -  -  -  -  infVar17		equ 8CE6h
 2089 00:0000 -  -  -  -  infVar18		equ 8CEFh
 2090 00:0000 -  -  -  -  infVar19		equ 8CF8h
 2091 00:0000 -  -  -  -  infVar20		equ 8D01h
 2092 00:0000 -  -  -  -  ;something		equ 8D0Bh
 2093 00:0000 -  -  -  -  ;list-related stat vars	equ 8D0Dh
 2094 00:0000 -  -  -  -  curGStyle		equ 8D17h
 2095 00:0000 -  -  -  -  curGY			equ 8D18h
 2096 00:0000 -  -  -  -  curGX			equ 8D19h
 2097 00:0000 -  -  -  -  curGY2			equ 8D1Ah
 2098 00:0000 -  -  -  -  curGX2			equ 8D1Bh ;currently selected equation while graphing
 2099 00:0000 -  -  -  -  freeSaveY		equ 8D1Ch
 2100 00:0000 -  -  -  -  freeSaveX		equ 8D1Dh
 2101 00:0000 -  -  -  -  ;100 bytes		equ 8D2Ah
 2102 00:0000 -  -  -  -  XOffset			equ 8DA1h
 2103 00:0000 -  -  -  -  YOffset			equ 8DA2h
 2104 00:0000 -  -  -  -  lcdTallP		equ 8DA3h
 2105 00:0000 -  -  -  -  pixWideP		equ 8DA4h
 2106 00:0000 -  -  -  -  pixWide_m_1		equ 8DA5h
 2107 00:0000 -  -  -  -  pixWide_m_2		equ 8DA6h
 2108 00:0000 -  -  -  -  lastEntryPTR		equ 8DA7h ;pointer to the next available byte in the entry stack
 2109 00:0000 -  -  -  -  lastEntryStk		equ 8DA9h ;the start of entry stack (note last entry is not in the stack, it is in the program '#'.)  This is a stack of strings.  first 2 bytes are length, followed by string. 2nd from last entry is first in this stack.
 2110 00:0000 -  -  -  -  numLastEntries		equ 8E29h ;number of entries you can back-track through minus one
 2111 00:0000 -  -  -  -  currLastEntry		equ 8E2Ah ;counter used by OS to keep track of which entry was just displayed by pressing 2nd+enter
 2112 00:0000 -  -  -  -  curPlotNumber		equ 8E63h ;current plot being graphed (1-3), this gets reset back to 0
 2113 00:0000 -  -  -  -  ;something		equ 8E65h
 2114 00:0000 -  -  -  -  ;something		equ 8E66h
 2115 00:0000 -  -  -  -  curInc			equ 8E67h
 2116 00:0000 -  -  -  -  uXmin			equ 8E7Eh
 2117 00:0000 -  -  -  -  uXmax			equ 8E87h
 2118 00:0000 -  -  -  -  uXscl			equ 8E90h
 2119 00:0000 -  -  -  -  uYmin			equ 8E99h
 2120 00:0000 -  -  -  -  uYmax			equ 8EA2h
 2121 00:0000 -  -  -  -  uYscl			equ 8EABh
 2122 00:0000 -  -  -  -  uThetMin		equ 8EB4h
 2123 00:0000 -  -  -  -  uThetMax		equ 8EBDh
 2124 00:0000 -  -  -  -  uThetStep		equ 8EC6h
 2125 00:0000 -  -  -  -  uTmin			equ 8ECFh
 2126 00:0000 -  -  -  -  uTmax			equ 8ED8h
 2127 00:0000 -  -  -  -  uTStep			equ 8EE1h
 2128 00:0000 -  -  -  -  uPlotStart		equ 8EEAh
 2129 00:0000 -  -  -  -  unMax			equ 8EF3h
 2130 00:0000 -  -  -  -  uu0			equ 8EFCh
 2131 00:0000 -  -  -  -  uv0			equ 8F05h
 2132 00:0000 -  -  -  -  unMin			equ 8F0Eh
 2133 00:0000 -  -  -  -  uu02			equ 8F17h
 2134 00:0000 -  -  -  -  uv02			equ 8F20h
 2135 00:0000 -  -  -  -  uw0			equ 8F29h
 2136 00:0000 -  -  -  -  uPlotStep		equ 8F32h
 2137 00:0000 -  -  -  -  uXres			equ 8F3Bh
 2138 00:0000 -  -  -  -  uw02			equ 8F44h
 2139 00:0000 -  -  -  -  Xmin			equ 8F50h
 2140 00:0000 -  -  -  -  Xmax			equ 8F59h
 2141 00:0000 -  -  -  -  Xscl			equ 8F62h
 2142 00:0000 -  -  -  -  Ymin			equ 8F6Bh
 2143 00:0000 -  -  -  -  Ymax			equ 8F74h
 2144 00:0000 -  -  -  -  Yscl			equ 8F7Dh
 2145 00:0000 -  -  -  -  ThetaMin		equ 8F86h
 2146 00:0000 -  -  -  -  ThetaMax		equ 8F8Fh
 2147 00:0000 -  -  -  -  ThetaStep		equ 8F98h
 2148 00:0000 -  -  -  -  TminPar			equ 8FA1h
 2149 00:0000 -  -  -  -  TmaxPar			equ 8FAAh
 2150 00:0000 -  -  -  -  Tstep			equ 8FB3h
 2151 00:0000 -  -  -  -  PlotStart		equ 8FBCh
 2152 00:0000 -  -  -  -  nMax			equ 8FC5h
 2153 00:0000 -  -  -  -  u0			equ 8FCEh
 2154 00:0000 -  -  -  -  v0			equ 8FD7h
 2155 00:0000 -  -  -  -  nMin			equ 8FE0h
 2156 00:0000 -  -  -  -  u02			equ 8FE9h
 2157 00:0000 -  -  -  -  v02			equ 8FF2h
 2158 00:0000 -  -  -  -  w0			equ 8FFBh
 2159 00:0000 -  -  -  -  PlotStep		equ 9004h
 2160 00:0000 -  -  -  -  XresO			equ 900Dh
 2161 00:0000 -  -  -  -  w02			equ 9016h
 2162 00:0000 -  -  -  -  un1			equ 901Fh
 2163 00:0000 -  -  -  -  un2			equ 9028h
 2164 00:0000 -  -  -  -  vn1			equ 9031h
 2165 00:0000 -  -  -  -  vn2			equ 903Ah
 2166 00:0000 -  -  -  -  wn1			equ 9043h
 2167 00:0000 -  -  -  -  wn2			equ 904Ch
 2168 00:0000 -  -  -  -  fin_N			equ 9055h
 2169 00:0000 -  -  -  -  fin_I			equ 905Eh
 2170 00:0000 -  -  -  -  fin_PV			equ 9067h
 2171 00:0000 -  -  -  -  fin_PMT			equ 9070h
 2172 00:0000 -  -  -  -  fin_FV			equ 9079h
 2173 00:0000 -  -  -  -  fin_PY			equ 9082h
 2174 00:0000 -  -  -  -  fin_CY			equ 908Bh
 2175 00:0000 -  -  -  -  cal_N			equ 9094h
 2176 00:0000 -  -  -  -  cal_I			equ 909Dh
 2177 00:0000 -  -  -  -  cal_PV			equ 90A6h
 2178 00:0000 -  -  -  -  cal_PMT			equ 90AFh
 2179 00:0000 -  -  -  -  cal_FV			equ 90B8h
 2180 00:0000 -  -  -  -  cal_PY			equ 90C1h
 2181 00:0000 -  -  -  -  smallEditRAM		equ 90D3h
 2182 00:0000 -  -  -  -  XFact			equ 913Fh
 2183 00:0000 -  -  -  -  YFact			equ 9148h
 2184 00:0000 -  -  -  -  Xres_int		equ 9151h
 2185 00:0000 -  -  -  -  deltaX			equ 9152h
 2186 00:0000 -  -  -  -  deltaY			equ 915Bh
 2187 00:0000 -  -  -  -  shortX			equ 9164h
 2188 00:0000 -  -  -  -  shortY			equ 916Dh
 2189 00:0000 -  -  -  -  lower			equ 9176h
 2190 00:0000 -  -  -  -  upper			equ 917Fh
 2191 00:0000 -  -  -  -  XOutSym			equ 918Ch
 2192 00:0000 -  -  -  -  XOutDat			equ 918Eh
 2193 00:0000 -  -  -  -  YOutSym			equ 9190h
 2194 00:0000 -  -  -  -  YOutDat			equ 9192h
 2195 00:0000 -  -  -  -  inputSym		equ 9194h
 2196 00:0000 -  -  -  -  inputDat		equ 9196h
 2197 00:0000 -  -  -  -  prevData		equ 9198h
 2198 00:0000 -  -  -  -  ;something		equ 91D9h
 2199 00:0000 -  -  -  -  ;something		equ 91DAh
 2200 00:0000 -  -  -  -  CurTableRow		equ 91DCh
 2201 00:0000 -  -  -  -  CurTableCol		equ 91DDh
 2202 00:0000 -  -  -  -  TblMin			equ 92B3h
 2203 00:0000 -  -  -  -  TblStep			equ 92BCh
 2204 00:0000 -  -  -  -  ;something		equ 92C5h
 2205 00:0000 -  -  -  -  ;something		equ 92C6h
 2206 00:0000 -  -  -  -  ;somePlotThing1		equ 92D9h
 2207 00:0000 -  -  -  -  ;somePlotThing2		equ 92EAh
 2208 00:0000 -  -  -  -  ;somePlotThing3		equ 92FBh
 2209 00:0000 -  -  -  -  ES			equ 9302h ;bottom of the es
 2210 00:0000 -  -  -  -  EST			equ 9305h ;current height of the es
 2211 00:0000 -  -  -  -  ;something		equ 9311h ;this is the pointer to a table of stuff for a BASIC menu
 2212 00:0000 -  -  -  -  plotSScreen		equ 9340h
 2213 00:0000 -  -  -  -  seed1			equ 9640h
 2214 00:0000 -  -  -  -  seed2			equ 9649h
 2215 00:0000 -  -  -  -  basic_prog		equ 9652h
 2216 00:0000 -  -  -  -  basic_start		equ 965Bh
 2217 00:0000 -  -  -  -  nextParseByte		equ 965Dh ;basic_pc
 2218 00:0000 -  -  -  -  basic_end		equ 965Fh
 2219 00:0000 -  -  -  -  numArguments		equ 9661h
 2220 00:0000 -  -  -  -  ;something		equ 9665h ;parser-related word
 2221 00:0000 -  -  -  -  ;something		equ 966Ch
 2222 00:0000 -  -  -  -  ;something		equ 966Dh
 2223 00:0000 -  -  -  -  cmdShadow		equ 966Eh
 2224 00:0000 -  -  -  -  cmdShadCur		equ 96EEh
 2225 00:0000 -  -  -  -  cmdShadAlph		equ 96F0h
 2226 00:0000 -  -  -  -  cmdShadIns		equ 96F1h
 2227 00:0000 -  -  -  -  cmdCursor		equ 96F2h
 2228 00:0000 -  -  -  -  editTop			equ 96F4h
 2229 00:0000 -  -  -  -  editCursor		equ 96F6h
 2230 00:0000 -  -  -  -  editTail		equ 96F8h
 2231 00:0000 -  -  -  -  editBtm			equ 96FAh
 2232 00:0000 -  -  -  -  ;something		equ 96FEh ;word, this is offset into list for currently-highlighted element in list editor
 2233 00:0000 -  -  -  -  ;something		equ 9700h ;table entry pointer used in dialog/menu/edit buffer routines
 2234 00:0000 -  -  -  -  matrixDimensions	equ 9702h ;dimensions of matrix being edited in matrix editor
 2235 00:0000 -  -  -  -  editSym			equ 9706h ;pointer to symbol table entry of variable being edited
 2236 00:0000 -  -  -  -  editDat			equ 9708h ;pointer to data of variable being edited
 2237 00:0000 -  -  -  -  ;something		equ 970Eh ;stats/list editor related, usually 1
 2238 00:0000 -  -  -  -  ;something		equ 970Fh ;stats/list editor related, usually 0 (this is 0-based offset from listName1), pretty sure this is a page offset
 2239 00:0000 -  -  -  -  ;something		equ 9710h ;stats/list editor related, usually 0 (this is 0-based currently-selected list)
 2240 00:0000 -  -  -  -  listName1		equ 9711h
 2241 00:0000 -  -  -  -  listName2		equ 9716h
 2242 00:0000 -  -  -  -  listName3		equ 971Bh
 2243 00:0000 -  -  -  -  listName4		equ 9720h
 2244 00:0000 -  -  -  -  listName5		equ 9725h
 2245 00:0000 -  -  -  -  listName6		equ 972Ah
 2246 00:0000 -  -  -  -  listName7		equ 972Fh
 2247 00:0000 -  -  -  -  listName8		equ 9734h
 2248 00:0000 -  -  -  -  listName9		equ 9739h
 2249 00:0000 -  -  -  -  listName10		equ 973Eh
 2250 00:0000 -  -  -  -  listName11		equ 9743h
 2251 00:0000 -  -  -  -  listName12		equ 9748h
 2252 00:0000 -  -  -  -  listName13		equ 974Dh
 2253 00:0000 -  -  -  -  listName14		equ 9752h
 2254 00:0000 -  -  -  -  listName15		equ 9757h
 2255 00:0000 -  -  -  -  listName16		equ 975Ch
 2256 00:0000 -  -  -  -  listName17		equ 9761h
 2257 00:0000 -  -  -  -  listName18		equ 9766h
 2258 00:0000 -  -  -  -  listName19		equ 976Bh
 2259 00:0000 -  -  -  -  listName20		equ 9770h
 2260 00:0000 -  -  -  -  ;something		equ 9775h
 2261 00:0000 -  -  -  -  y1LineType		equ 9776h ;these bytes define the line type for functions which are graphed
 2262 00:0000 -  -  -  -  y2LineType		equ 9777h
 2263 00:0000 -  -  -  -  y3LineType		equ 9778h
 2264 00:0000 -  -  -  -  y4LineType		equ 9779h
 2265 00:0000 -  -  -  -  y5LineType		equ 977Ah
 2266 00:0000 -  -  -  -  y6LineType		equ 977Bh
 2267 00:0000 -  -  -  -  y7LineType		equ 977Ch
 2268 00:0000 -  -  -  -  y8LineType		equ 977Dh
 2269 00:0000 -  -  -  -  y9LineType		equ 977Eh
 2270 00:0000 -  -  -  -  y0LineType		equ 977Fh
 2271 00:0000 -  -  -  -  para1LineType		equ 9780h
 2272 00:0000 -  -  -  -  para2LineType		equ 9781h
 2273 00:0000 -  -  -  -  para3LineType		equ 9782h
 2274 00:0000 -  -  -  -  para4LineType		equ 9783h
 2275 00:0000 -  -  -  -  para5LineType		equ 9784h
 2276 00:0000 -  -  -  -  para6LineType		equ 9785h
 2277 00:0000 -  -  -  -  polar1LineType		equ 9786h
 2278 00:0000 -  -  -  -  polar2LineType		equ 9787h
 2279 00:0000 -  -  -  -  polar3LineType		equ 9788h
 2280 00:0000 -  -  -  -  polar4LineType		equ 9789h
 2281 00:0000 -  -  -  -  polar5LineType		equ 978Ah
 2282 00:0000 -  -  -  -  polar6LineType		equ 978Bh
 2283 00:0000 -  -  -  -  secULineType		equ 978Ch
 2284 00:0000 -  -  -  -  secVLineType		equ 978Dh
 2285 00:0000 -  -  -  -  secWLineType		equ 978Eh
 2286 00:0000 -  -  -  -  ;something		equ 979Fh
 2287 00:0000 -  -  -  -  ;something		equ 97A1h
 2288 00:0000 -  -  -  -  winTop			equ 97A5h
 2289 00:0000 -  -  -  -  winBtm			equ 97A6h
 2290 00:0000 -  -  -  -  winLeftEdge		equ 97A7h
 2291 00:0000 -  -  -  -  winLeft			equ 97A8h
 2292 00:0000 -  -  -  -  winAbove		equ 97AAh
 2293 00:0000 -  -  -  -  winRow			equ 97ACh
 2294 00:0000 -  -  -  -  winCol			equ 97AEh
 2295 00:0000 -  -  -  -  fmtDigits		equ 97B0h
 2296 00:0000 -  -  -  -  fmtString		equ 97B1h
 2297 00:0000 -  -  -  -  fmtConv			equ 97F2h
 2298 00:0000 -  -  -  -  fmtLeft			equ 9804h
 2299 00:0000 -  -  -  -  fmtIndex		equ 9806h
 2300 00:0000 -  -  -  -  fmtMatSym		equ 9808h
 2301 00:0000 -  -  -  -  fmtMatMem		equ 980Ah
 2302 00:0000 -  -  -  -  EQS			equ 980Ch
 2303 00:0000 -  -  -  -  ;something		equ 980Eh
 2304 00:0000 -  -  -  -  ;something		equ 9810h
 2305 00:0000 -  -  -  -  freeRAM			equ 9815h ;pretty sure this is the amount of RAM free, valid in Mem Mgmt/Del anyway
 2306 00:0000 -  -  -  -  ;something		equ 9817h
 2307 00:0000 -  -  -  -  tSymPtr1		equ 9818h
 2308 00:0000 -  -  -  -  tSymPtr2		equ 981Ah
 2309 00:0000 -  -  -  -  chkDelPtr3		equ 981Ch
 2310 00:0000 -  -  -  -  chkDelPtr4		equ 981Eh
 2311 00:0000 -  -  -  -  tempMem			equ 9820h
 2312 00:0000 -  -  -  -  fpBase			equ 9822h
 2313 00:0000 -  -  -  -  FPS			equ 9824h
 2314 00:0000 -  -  -  -  OPBase			equ 9826h
 2315 00:0000 -  -  -  -  OPS			equ 9828h
 2316 00:0000 -  -  -  -  pTempCnt		equ 982Ah
 2317 00:0000 -  -  -  -  cleanTmp		equ 982Ch
 2318 00:0000 -  -  -  -  pTemp                   equ 982Eh ;end of symbol table
 2319 00:0000 -  -  -  -  progPtr			equ 9830h
 2320 00:0000 -  -  -  -  newDataPtr		equ 9832h
 2321 00:0000 -  -  -  -  pagedCount		equ 9834h
 2322 00:0000 -  -  -  -  pagedPN			equ 9835h
 2323 00:0000 -  -  -  -  pagedGetPtr		equ 9836h
 2324 00:0000 -  -  -  -  pagedPutPtr		equ 9838h
 2325 00:0000 -  -  -  -  pagedBuf		equ 983Ah
 2326 00:0000 -  -  -  -  ;something		equ 984Ah ;this is the top LCD row for a menu (usually 1)
 2327 00:0000 -  -  -  -  appErr1			equ 984Dh
 2328 00:0000 -  -  -  -  appErr2			equ 985Ah
 2329 00:0000 -  -  -  -  flashByte1		equ 9867h
 2330 00:0000 -  -  -  -  flashByte2		equ 9868h
 2331 00:0000 -  -  -  -  freeArcBlock		equ 9869h
 2332 00:0000 -  -  -  -  arcPage			equ 986Bh
 2333 00:0000 -  -  -  -  arcPtr			equ 986Ch
 2334 00:0000 -  -  -  -  appRawKeyHandle		equ 9870h
 2335 00:0000 -  -  -  -  appBackUpScreen		equ 9872h
 2336 00:0000 -  -  -  -  customHeight		equ 9B72h
 2337 00:0000 -  -  -  -  localLanguage		equ 9B73h
 2338 00:0000 -  -  -  -  hookExecTemp		equ 9B75h
 2339 00:0000 -  -  -  -  linkActivityHook	equ 9B78h
 2340 00:0000 -  -  -  -  cursorHookPtr		equ 9B7Ch
 2341 00:0000 -  -  -  -  libraryHookPtr		equ 9B80h
 2342 00:0000 -  -  -  -  rawKeyHookPtr		equ 9B84h
 2343 00:0000 -  -  -  -  getKeyHookPtr		equ 9B88h
 2344 00:0000 -  -  -  -  homescreenHookPtr	equ 9B8Ch
 2345 00:0000 -  -  -  -  windowHookPtr		equ 9B90h
 2346 00:0000 -  -  -  -  graphHookPtr		equ 9B94h
 2347 00:0000 -  -  -  -  yEqualsHookPtr		equ 9B98h
 2348 00:0000 -  -  -  -  fontHookPtr		equ 9B9Ch
 2349 00:0000 -  -  -  -  regraphHookPtr		equ 9BA0h
 2350 00:0000 -  -  -  -  graphicsHook		equ 9BA4h
 2351 00:0000 -  -  -  -  traceHookPtr		equ 9BA8h
 2352 00:0000 -  -  -  -  parserHookPtr		equ 9BACh
 2353 00:0000 -  -  -  -  appChangeHookPtr	equ 9BB0h
 2354 00:0000 -  -  -  -  catalog1HookPtr		equ 9BB4h
 2355 00:0000 -  -  -  -  helpHookPtr		equ 9BB8h
 2356 00:0000 -  -  -  -  cxRedispHookPtr		equ 9BBCh
 2357 00:0000 -  -  -  -  menuHookPtr		equ 9BC0h
 2358 00:0000 -  -  -  -  catalog2HookPtr		equ 9BC4h
 2359 00:0000 -  -  -  -  tokenHookPtr		equ 9BC8h
 2360 00:0000 -  -  -  -  localizeHookPtr		equ 9BCCh
 2361 00:0000 -  -  -  -  silentLinkHookPtr	equ 9BD0h ;restartClr?
 2362 00:0000 -  -  -  -  USBActivityHookPtr	equ 9BD4h
 2363 00:0000 -  -  -  -  baseAppBrTab2		equ 9C06h ;table of base pages for apps on page >= 20h; first 20h bytes are zeroes.
 2364 00:0000 -  -  -  -  USBcallbackPage		equ 9C13h
 2365 00:0000 -  -  -  -  USBcallbackPtr		equ 9C14h
 2366 00:0000 -  -  -  -  vendorID		equ 9C16h
 2367 00:0000 -  -  -  -  productID		equ 9C18h
 2368 00:0000 -  -  -  -  devReleaseNumber	equ 9C1Ah
 2369 00:0000 -  -  -  -  oldSESpeed		equ 9C21h
 2370 00:0000 -  -  -  -  calcPeripheralState	equ 9C26h
 2371 00:0000 -  -  -  -  usb_dataWaitingCount	equ 9C27h
 2372 00:0000 -  -  -  -  basePageTable2End	equ 9C6Fh ;this is the last page
 2373 00:0000 -  -  -  -  port91hTemp		equ 9C79h
 2374 00:0000 -  -  -  -  usb_dataExpectCount	equ 9C80h
 2375 00:0000 -  -  -  -  offPageCallPage		equ 9C83h ;temporarily stores off-page page and address
 2376 00:0000 -  -  -  -  offPageCallAddress	equ 9C84h
 2377 00:0000 -  -  -  -  ;something		equ 9C86h ;used with SE link activity, values of 00h, 0FAh, 0FFh probably mean something
 2378 00:0000 -  -  -  -  ;something		equ 9C87h ;zero this to force the APPS menu to recache itself (this is always either 0, 1, or last app page, for some reason)
 2379 00:0000 -  -  -  -  ;something		equ 9C88h ;don't know, but it's 14 bytes and has to do with selecting stuff (if 9C87h is non-zero, this is zeroed out)
 2380 00:0000 -  -  -  -  ;something		equ 9C9Eh ;funky, this actually gets written to the certificate on non-83+ (11 bytes)
 2381 00:0000 -  -  -  -  SEspeed			equ 9CAEh
 2382 00:0000 -  -  -  -  ;something, table index	equ 9CAFh
 2383 00:0000 -  -  -  -  ;something		equ 9CB0h
 2384 00:0000 -  -  -  -  ;something		equ 9CB1h ;table
 2385 00:0000 -  -  -  -  ;something		equ 9CCDh
 2386 00:0000 -  -  -  -  localTokStr		equ 9D65h
 2387 00:0000 -  -  -  -  keyForStr		equ 9D76h
 2388 00:0000 -  -  -  -  keyToStrRam		equ 9D77h
 2389 00:0000 -  -  -  -  sedMonSp		equ 9D88h ;small edit monitor SP
 2390 00:0000 -  -  -  -  bpSave			equ 9D8Ah
 2391 00:0000 -  -  -  -  userMem			equ 9D95h
 2392 00:0000 -  -  -  -  symTable		equ 0FE66h
 2393 00:0000 -  -  -  -  
 2394 00:0000 -  -  -  -  ;System Flags
 2395 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2396 00:0000 -  -  -  -  ioDelFlag		equ 0h
 2397 00:0000 -  -  -  -  inDelete		equ 0		;1 = DELETE SCREEN 
 2398 00:0000 -  -  -  -  
 2399 00:0000 -  -  -  -  trigFlags		equ 0h	;Trigonometry mode settings
 2400 00:0000 -  -  -  -  trigDeg			equ 2		;1=degrees, 0=radians
 2401 00:0000 -  -  -  -  
 2402 00:0000 -  -  -  -  kbdFlags		equ 0h	;Keyboard scan
 2403 00:0000 -  -  -  -  kbdSCR			equ 3		;1=scan code ready
 2404 00:0000 -  -  -  -  kbdKeyPress		equ 4		;1=key has been pressed
 2405 00:0000 -  -  -  -  
 2406 00:0000 -  -  -  -  doneFlags		equ 0h	;display "Done"
 2407 00:0000 -  -  -  -  donePrgm		equ 5		;1=display "Done" after prgm
 2408 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2409 00:0000 -  -  -  -  editFlags		equ 1h
 2410 00:0000 -  -  -  -  editOpen		equ 2		;1=edit buffer is open
 2411 00:0000 -  -  -  -  
 2412 00:0000 -  -  -  -  ansFlags		equ 1
 2413 00:0000 -  -  -  -  AnsScroll		equ 3		;1=answer can scroll, seems must be reset in order to move about edit buffer
 2414 00:0000 -  -  -  -  
 2415 00:0000 -  -  -  -  monFlags		equ 1h	 ;monitor flags
 2416 00:0000 -  -  -  -  monAbandon		equ 4		;1=don't start any long process in put away (#715)
 2417 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2418 00:0000 -  -  -  -  plotFlags		equ 2h	;plot generation flags
 2419 00:0000 -  -  -  -  plotLoc 		equ 1		;0=bkup & display, 1=display only
 2420 00:0000 -  -  -  -  plotDisp		equ 2		;1=plot is in display, 0=text in display, this also indicates whether graph is being shown or not
 2421 00:0000 -  -  -  -  
 2422 00:0000 -  -  -  -  grfModeFlags		equ 2h	;graph mode settings
 2423 00:0000 -  -  -  -  grfFuncM		equ 4		;1=function graph
 2424 00:0000 -  -  -  -  grfPolarM		equ 5		;1=polar graph
 2425 00:0000 -  -  -  -  grfParamM		equ 6		;1=parametric graph
 2426 00:0000 -  -  -  -  grfRecurM		equ 7		;1=RECURSION graph
 2427 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2428 00:0000 -  -  -  -  graphFlags		equ 3h
 2429 00:0000 -  -  -  -  graphDraw		equ 0		;0=graph is valid, 1=redraw graph(dirty)
 2430 00:0000 -  -  -  -  graphCursor		equ 2
 2431 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2432 00:0000 -  -  -  -  grfDBFlags		equ 4h
 2433 00:0000 -  -  -  -  grfDot			equ 0		;0=line, 1=dot
 2434 00:0000 -  -  -  -  grfSimul		equ 1		;0=sequential, 1=simultaneous
 2435 00:0000 -  -  -  -  grfGrid 		equ 2		;0=no grid, 1=grid
 2436 00:0000 -  -  -  -  grfPolar		equ 3		;0=rectangular, 1=polar coordinates
 2437 00:0000 -  -  -  -  grfNoCoord		equ 4		;0=display coordinates, 1=off
 2438 00:0000 -  -  -  -  grfNoAxis		equ 5		;0=axis, 1=no axis
 2439 00:0000 -  -  -  -  grfLabel		equ 6		;0=off, 1=axis label
 2440 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2441 00:0000 -  -  -  -  textFlags		equ 5h	;Text output flags
 2442 00:0000 -  -  -  -  textEraseBelow		equ 1		;1=erase line below small char
 2443 00:0000 -  -  -  -  textScrolled		equ 2		;1=screen scrolled
 2444 00:0000 -  -  -  -  textInverse		equ 3		;1=display inverse bit-map
 2445 00:0000 -  -  -  -  textInsMode		equ 4		;0=overstrike, 1=insert mode
 2446 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2447 00:0000 -  -  -  -  ParsFlag		equ 6h	;PARSER flags
 2448 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2449 00:0000 -  -  -  -  ParsFlag2		equ 7h	;PARSER flags
 2450 00:0000 -  -  -  -  numOP1			equ 0		;1=RESULT IN OP1, 0=NO RESULT
 2451 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2452 00:0000 -  -  -  -  newDispF		equ 8h	;Derivative mode flags
 2453 00:0000 -  -  -  -  preClrForMode		equ 0		;1=HELP BLINK ON MODE SCREEN
 2454 00:0000 -  -  -  -  allowProgTokens		equ 1		;1=allow programming tokens to be parsed in BASIC programs
 2455 00:0000 -  -  -  -  
 2456 00:0000 -  -  -  -  apdFlags		equ 8h	;Automatic power-down
 2457 00:0000 -  -  -  -  apdAble 		equ 2		;1=APD enabled
 2458 00:0000 -  -  -  -  apdRunning		equ 3		;1=APD clock running
 2459 00:0000 -  -  -  -  apdWarmStart		equ 4		;1=calculator is turning on from APD or power loss
 2460 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2461 00:0000 -  -  -  -  web_err_mask		equ 60h
 2462 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2463 00:0000 -  -  -  -  onFlags 		equ 9h	;on key flags
 2464 00:0000 -  -  -  -  parseInput		equ 1		;1=parse input when done
 2465 00:0000 -  -  -  -  onRunning		equ 3		;1=calculator is running
 2466 00:0000 -  -  -  -  onInterrupt		equ 4		;1=on key interrupt request
 2467 00:0000 -  -  -  -  
 2468 00:0000 -  -  -  -  statFlags		equ 9h	;statistics flags
 2469 00:0000 -  -  -  -  ;unknown		equ 5		;unknown
 2470 00:0000 -  -  -  -  statsValid		equ 6		;1=stats are valid
 2471 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2472 00:0000 -  -  -  -  fmtFlags		equ 0Ah	;numeric format flags
 2473 00:0000 -  -  -  -  fmtExponent		equ 0	 	;1=show exponent, 0=no exponent
 2474 00:0000 -  -  -  -  fmtEng			equ 1	 	;1=engineering notion, 0=scientific
 2475 00:0000 -  -  -  -  fmtHex			equ 2	 	;1=hexadecimal
 2476 00:0000 -  -  -  -  fmtOct			equ 3	 	;1=octal
 2477 00:0000 -  -  -  -  fmtBin			equ 4	 	;1=binary
 2478 00:0000 -  -  -  -  
 2479 00:0000 -  -  -  -  numMode			equ 0Ah
 2480 00:0000 -  -  -  -  fmtReal			equ 5
 2481 00:0000 -  -  -  -  fmtRect			equ 6
 2482 00:0000 -  -  -  -  fmtPolar		equ 7
 2483 00:0000 -  -  -  -  
 2484 00:0000 -  -  -  -  realMode		equ 5
 2485 00:0000 -  -  -  -  rectMode		equ 6
 2486 00:0000 -  -  -  -  polarMode		equ 7
 2487 00:0000 -  -  -  -  ;					;if Hex and Oct both = 1
 2488 00:0000 -  -  -  -  ;					; then Bin=0 means >Frac
 2489 00:0000 -  -  -  -  ;					; Bin=1 means >DMS
 2490 00:0000 -  -  -  -  fmtBaseMask		equ  00011100b	; mask to base flags
 2491 00:0000 -  -  -  -  fmtBaseShift		equ  2		; offset to base flags
 2492 00:0000 -  -  -  -  ;
 2493 00:0000 -  -  -  -  ;       CHECK IF THESE ARE USED BY NUMFORM,
 2494 00:0000 -  -  -  -  ;
 2495 00:0000 -  -  -  -  ;               	equ  6
 2496 00:0000 -  -  -  -  ;               	equ  7
 2497 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2498 00:0000 -  -  -  -  fmtOverride		equ 0Bh	;copy of fmtFlags with conversion override
 2499 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2500 00:0000 -  -  -  -  fmtEditFlags		equ 0Ch	;numeric editing flags
 2501 00:0000 -  -  -  -  fmtEdit			equ 0		;1=format number for editing
 2502 00:0000 -  -  -  -  
 2503 00:0000 -  -  -  -  curFlags		equ 0Ch	;Cursor
 2504 00:0000 -  -  -  -  curAble 		equ 2		;1=cursor flash is enabled
 2505 00:0000 -  -  -  -  curOn			equ 3		;1=cursor is showing
 2506 00:0000 -  -  -  -  curLock 		equ 4		;1=cursor is locked off
 2507 00:0000 -  -  -  -  
 2508 00:0000 -  -  -  -  cmdFlags		equ 0Ch	;command editor flags
 2509 00:0000 -  -  -  -  cmdVirgin		equ 5		;1=nothing has been typed in cmd bfr
 2510 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2511 00:0000 -  -  -  -  appFlags		equ 0Dh	;application flags
 2512 00:0000 -  -  -  -  appWantIntrpt		equ 0		;1=want ON key interrupts
 2513 00:0000 -  -  -  -  appTextSave		equ 1		;1=save characters in textShadow
 2514 00:0000 -  -  -  -  appAutoScroll		equ 2		;1=auto-scroll text on last line
 2515 00:0000 -  -  -  -  appMenus		equ 3		;1=process keys that bring up menus, 0=check Lock menu flag
 2516 00:0000 -  -  -  -  appLockMenus		equ 4		;1=ignore menu keys, 0=switch to home screen and bring up menu
 2517 00:0000 -  -  -  -  appCurGraphic		equ 5		;1=graphic cursor
 2518 00:0000 -  -  -  -  appCurWord		equ 6		;1=text cursor covers entire word
 2519 00:0000 -  -  -  -  appExit 		equ 7		;1=application handles [EXIT] key itself
 2520 00:0000 -  -  -  -  
 2521 00:0000 -  -  -  -  appWantIntrptF		equ 1<<appWantIntrpt
 2522 00:0000 -  -  -  -  appTextSaveF		equ 1<<appTextSave
 2523 00:0000 -  -  -  -  appAutoScrollF		equ 1<<appAutoScroll
 2524 00:0000 -  -  -  -  appMenusF		equ 1<<appMenus
 2525 00:0000 -  -  -  -  appLockMenusF		equ 1<<appLockMenus
 2526 00:0000 -  -  -  -  appCurGraphicF		equ 1<<appCurGraphic
 2527 00:0000 -  -  -  -  appCurWordF		equ 1<<appCurWord
 2528 00:0000 -  -  -  -  appExitF		equ 1<<appExit
 2529 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2530 00:0000 -  -  -  -  rclFlag			equ 0Eh	;OS recall queue flags
 2531 00:0000 -  -  -  -  enableQueue		equ 7		;1 = enable recall queue
 2532 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2533 00:0000 -  -  -  -  seqFlags		equ 0Fh	;Sequential Graph flags
 2534 00:0000 -  -  -  -  webMode			equ 0		;0 = NORMAL SEQ MODE, 1 = WEB MODE
 2535 00:0000 -  -  -  -  webVert			equ 1
 2536 00:0000 -  -  -  -  sequv			equ 2		;U vs V
 2537 00:0000 -  -  -  -  seqvw			equ 3		;V vs W
 2538 00:0000 -  -  -  -  sequw			equ 4		;U vs W
 2539 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2540 00:0000 -  -  -  -  promptFlags		equ 11h	;prompt line flags
 2541 00:0000 -  -  -  -  promptEdit		equ 0		;1=editing in prompt buffer
 2542 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2543 00:0000 -  -  -  -  indicFlags		equ 12h	;Indicator flags
 2544 00:0000 -  -  -  -  indicRun		equ 0		;1=run indicator ON
 2545 00:0000 -  -  -  -  indicInUse		equ 1		;indicator save area in use=1, free=0 ;resetting will disable 2nd while in _getkey
 2546 00:0000 -  -  -  -  indicOnly		equ 2		;interrupt handler only checks run indicator
 2547 00:0000 -  -  -  -  
 2548 00:0000 -  -  -  -  shiftFlags		equ 12h	;[2nd] and [ALPHA] flags
 2549 00:0000 -  -  -  -  shift2nd		equ 3		;1=[2nd] has been pressed
 2550 00:0000 -  -  -  -  shiftAlpha		equ 4		;1=[ALPHA] has been pressed
 2551 00:0000 -  -  -  -  shiftLwrAlph		equ 5		;1=lower case, 0=upper case
 2552 00:0000 -  -  -  -  shiftALock		equ 6		;1=alpha lock has been pressed
 2553 00:0000 -  -  -  -  shiftKeepAlph		equ 7		;1=cannot cancel alpha shift
 2554 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2555 00:0000 -  -  -  -  tblFlags		equ 13h	;table flags.
 2556 00:0000 -  -  -  -  autoFill		equ 4		;1=prompt, 0=fillAuto
 2557 00:0000 -  -  -  -  autoCalc		equ 5		;1=prompt, 0=CalcAuto
 2558 00:0000 -  -  -  -  reTable			equ 6		;0=table is okay, 1=must recompute table.
 2559 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2560 00:0000 -  -  -  -  sGrFlags		equ 14h
 2561 00:0000 -  -  -  -  grfSplit		equ 0		;1=Split Graph, 0=Normal
 2562 00:0000 -  -  -  -  vertSplit		equ 1		;1=Vertical (left-right) Split
 2563 00:0000 -  -  -  -  grfSChanged		equ 2		;1=Graph just changed Split <-> normal
 2564 00:0000 -  -  -  -  grfSplitOverride	equ 3		;1 = ignore graph split flag if set
 2565 00:0000 -  -  -  -  write_on_graph		equ 4		;1 = TEXT OR EQU WRITING TO GRAPH SCREEN
 2566 00:0000 -  -  -  -  g_style_active		equ 5		;1 = GRAPH STYLES ARE ENABLED, USE THEM
 2567 00:0000 -  -  -  -  cmp_mod_box		equ 6		;1 = DOING MOD BOX PLOT COMPUTATION
 2568 00:0000 -  -  -  -  textWrite		equ 7
 2569 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2570 00:0000 -  -  -  -  newIndicFlags		equ 15h
 2571 00:0000 -  -  -  -  extraIndic		equ 0
 2572 00:0000 -  -  -  -  saIndic			equ 1
 2573 00:0000 -  -  -  -  ;3 has something to do with stat/list editor
 2574 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2575 00:0000 -  -  -  -  interruptFlags		equ 16h
 2576 00:0000 -  -  -  -  secondTimerEnabled	equ 0		;1 = second hardware timer enabled
 2577 00:0000 -  -  -  -  batteryFlags		equ 16h
 2578 00:0000 -  -  -  -  batteriesGood		equ 2		;1 = batteries good, I think this being reset will force the calc to shut off, used in USB error handler
 2579 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2580 00:0000 -  -  -  -  smartFlags		equ 17h
 2581 00:0000 -  -  -  -  smarter_mask		equ 3
 2582 00:0000 -  -  -  -  smarter_test		equ 1
 2583 00:0000 -  -  -  -  smartGraph		equ 0
 2584 00:0000 -  -  -  -  smartGraph_inv		equ 1
 2585 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2586 00:0000 -  -  -  -  traceFlags		equ 18h
 2587 00:0000 -  -  -  -  grfExpr			equ 0		;set to hide expression while tracing
 2588 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2589 00:0000 -  -  -  -  ;There is a flag 19h.
 2590 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2591 00:0000 -  -  -  -  statFlags2		equ 1Ah
 2592 00:0000 -  -  -  -  statDiagnosticsOn	equ 0		;1 = stat diagnostics on
 2593 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2594 00:0000 -  -  -  -  linkFlags		equ 1Bh
 2595 00:0000 -  -  -  -  IDis95h			equ 1		;1 = link routines use machine ID 95h (CBL)
 2596 00:0000 -  -  -  -  IDis82h			equ 2		;1 = link routines use machine ID 82h (TI-82)
 2597 00:0000 -  -  -  -  IDis83h			equ 3		;1 = link routines use machine ID 83h (TI-83)
 2598 00:0000 -  -  -  -  IDis03h			equ 4		;1 = link routines use machine ID 03h (PC to TI-83)
 2599 00:0000 -  -  -  -  USBenabled		equ 5		;1 = use USB port first, or at least try to
 2600 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2601 00:0000 -  -  -  -  ;There is a flag 1Ch (stats-related).
 2602 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2603 00:0000 -  -  -  -  ;There is a flag 1Dh.
 2604 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2605 00:0000 -  -  -  -  ;There is a flag 1Eh.
 2606 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2607 00:0000 -  -  -  -  varTypeMask		equ 1Fh	;is this a flag byte? yes
 2608 00:0000 -  -  -  -  varGraphRef		equ 6
 2609 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2610 00:0000 -  -  -  -  graphFlags2		equ 1Fh
 2611 00:0000 -  -  -  -  splitOverride		equ 3		;0 = force full screen with ParseInp, or something
 2612 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2613 00:0000 -  -  -  -  asm_Flag1		equ 21h	;ASM CODING
 2614 00:0000 -  -  -  -  asm_Flag2		equ 22h	;ASM CODING
 2615 00:0000 -  -  -  -  asm_Flag3		equ 23h	;ASM CODING
 2616 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2617 00:0000 -  -  -  -  arcFlag			equ 24h
 2618 00:0000 -  -  -  -  checkBatteryLevelFirst	equ 0		;1 = check battery levels in Arc_Unarc first and throw error if low
 2619 00:0000 -  -  -  -  
 2620 00:0000 -  -  -  -  getSendFlg		equ 24h
 2621 00:0000 -  -  -  -  comFailed		equ 1		;1 = Get/Send Communication Failed
 2622 00:0000 -  -  -  -  
 2623 00:0000 -  -  -  -  selfTestFlag		equ 24h
 2624 00:0000 -  -  -  -  resetOnPowerOn		equ 2		;1 = Force RAM reset when APD disabled on next power on
 2625 00:0000 -  -  -  -  
 2626 00:0000 -  -  -  -  appLwrCaseFlag		equ 24h
 2627 00:0000 -  -  -  -  lwrCaseActive		equ 3
 2628 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2629 00:0000 -  -  -  -  contextFlags		equ 25h
 2630 00:0000 -  -  -  -  nocxPutAway		equ 5		;1 = do not call cxPutAway routine
 2631 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2632 00:0000 -  -  -  -  groupFlags		equ 26h ;used temporarily in Arc_Unarc
 2633 00:0000 -  -  -  -  inGroup			equ 1		;1 = IN GROUP CONTEXT
 2634 00:0000 -  -  -  -  noCompletionByte	equ 2		;1 = do not write 0FCh when calling Arc_Unarc, leave as 0FEh
 2635 00:0000 -  -  -  -  noDataWrite		equ 3		;1 = do not write data when calling Arc_Unarc, nor size bytes
 2636 00:0000 -  -  -  -  writeSizeBytesOnly	equ 5		;1 = only write size bytes when calling Arc_Unarc
 2637 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2638 00:0000 -  -  -  -  ;There is a flag 27h.
 2639 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2640 00:0000 -  -  -  -  APIFlg			equ 28h
 2641 00:0000 -  -  -  -  appAllowContext		equ 0           ;App wants context changes to happen
 2642 00:0000 -  -  -  -  ;1 set to ignore a key after returning from rawkeyhook
 2643 00:0000 -  -  -  -  ;2 set to send this key back?
 2644 00:0000 -  -  -  -  ;3
 2645 00:0000 -  -  -  -  appRunning		equ 4		;app is currently running
 2646 00:0000 -  -  -  -  ;5
 2647 00:0000 -  -  -  -  ;6
 2648 00:0000 -  -  -  -  appRetKeyOff		equ 7		;1 = GetKey returns kOff when [2nd]+[ON] pressed
 2649 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2650 00:0000 -  -  -  -  apiFlg2			equ 29h
 2651 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2652 00:0000 -  -  -  -  apiFlg3			equ 2Ah
 2653 00:0000 -  -  -  -  ;1 set means using small font?
 2654 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2655 00:0000 -  -  -  -  apiFlg4			equ 2Bh
 2656 00:0000 -  -  -  -  cellOverride		equ 1		;use cell override
 2657 00:0000 -  -  -  -  fullScrnDraw		equ 2		;DRAW INTO LAST ROW/COL OF SCREEN
 2658 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2659 00:0000 -  -  -  -  mouseFlag1		equ 2Ch
 2660 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2661 00:0000 -  -  -  -  mouseFlag2		equ 2Dh ;might want to keep this always reset
 2662 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2663 00:0000 -  -  -  -  xapFlag0		equ 2Eh	;external app flags, do not use 0,(iy+2Eh) (used by mouse routines)
 2664 00:0000 -  -  -  -  xapFlag1		equ 2Fh
 2665 00:0000 -  -  -  -  xapFlag2		equ 30h
 2666 00:0000 -  -  -  -  xapFlag3		equ 31h
 2667 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2668 00:0000 -  -  -  -  fontFlags		equ 32h
 2669 00:0000 -  -  -  -  fracDrawLFont		equ 2
 2670 00:0000 -  -  -  -  fracTallLFont		equ 3
 2671 00:0000 -  -  -  -  customFont		equ 7
 2672 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2673 00:0000 -  -  -  -  hookflags1		equ 33h ;also scriptFlag, rclFlag2, backGroundLink
 2674 00:0000 -  -  -  -  alt_On			equ 0		;run ONSCRPT at startup
 2675 00:0000 -  -  -  -  alt_Off			equ 1		;run OFFSCRPT at shutdown
 2676 00:0000 -  -  -  -  useRclQueueEnd		equ 2		;1 = external mode
 2677 00:0000 -  -  -  -  ignoreBPLink		equ 3		;1 = override flag for link activity hook
 2678 00:0000 -  -  -  -  bPLinkOn		equ 4		;1 = link activity hook active
 2679 00:0000 -  -  -  -  enableKeyEcho		equ 5		;1 = sends keypresses back to connected calc as remote control packets (with GetCSC vs. GetKey codes...really dumb, TI)
 2680 00:0000 -  -  -  -  noTempDelete		equ 6		;1 = do not delete temporary programs at homescreen
 2681 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2682 00:0000 -  -  -  -  hookflags2		equ 34h ;also sysHookFlg
 2683 00:0000 -  -  -  -  getCSCHookActive	equ 0		;1 = GetCSC hook active
 2684 00:0000 -  -  -  -  libraryHookActive	equ 1		;1 = library hook active
 2685 00:0000 -  -  -  -  ;2 This is set in the OS, but never referenced and the code is never executed
 2686 00:0000 -  -  -  -  homescreenHookActive	equ 4		;1 = homescreen hook active
 2687 00:0000 -  -  -  -  rawKeyHookActive	equ 5		;1 = raw key hook active
 2688 00:0000 -  -  -  -  catalog2HookActive	equ 6		;1 = catalog 2 hook active
 2689 00:0000 -  -  -  -  cursorHookActive	equ 7		;1 = cursor hook active
 2690 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2691 00:0000 -  -  -  -  hookflags3		equ 35h ;also sysHookFlg1
 2692 00:0000 -  -  -  -  tokenHookActive		equ 0		;1 = token hook active
 2693 00:0000 -  -  -  -  localizeHookActive	equ 1		;1 = localize hook active
 2694 00:0000 -  -  -  -  windowHookActive	equ 2		;1 = window hook active
 2695 00:0000 -  -  -  -  graphHookActive		equ 3		;1 = graph hook active
 2696 00:0000 -  -  -  -  yEquHookActive		equ 4		;1 = Y= hook active
 2697 00:0000 -  -  -  -  fontHookActive		equ 5		;1 = font hook active
 2698 00:0000 -  -  -  -  regraphHookActive	equ 6		;1 = regraph hook active
 2699 00:0000 -  -  -  -  drawingHookActive	equ 7		;1 = drawing hook active
 2700 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2701 00:0000 -  -  -  -  hookflags4		equ 36h ;also sysHookFlag2
 2702 00:0000 -  -  -  -  traceHookActive		equ 0		;1 = trace hook active
 2703 00:0000 -  -  -  -  parserHookActive	equ 1		;1 = parser hook active
 2704 00:0000 -  -  -  -  appChangeHookActive	equ 2		;1 = app change hook active
 2705 00:0000 -  -  -  -  catalog1HookActive	equ 3		;1 = catalog 1 hook active
 2706 00:0000 -  -  -  -  helpHookActive		equ 4		;1 = help hook active
 2707 00:0000 -  -  -  -  cxRedispHookActive	equ 5		;1 = cxRedisp hook active
 2708 00:0000 -  -  -  -  menuHookActive		equ 6		;1 = menu hook active
 2709 00:0000 -  -  -  -  silentLinkHookActive	equ 7		;1 = silent link hook active
 2710 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2711 00:0000 -  -  -  -  ;hookflags2Override	equ 37h		;set corresponding bit to kill iy+35h hook when executing app
 2712 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2713 00:0000 -  -  -  -  ;hookflags3Override	equ 38h		;set corresponding bit to kill iy+36h hook when executing app
 2714 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2715 00:0000 -  -  -  -  ;hookflags4Override	equ 39h		;set corresponding bit to kill iy+37h hook when executing app
 2716 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2717 00:0000 -  -  -  -  ;hookflags5		equ 3Ah
 2718 00:0000 -  -  -  -  usbActivityHookActive	equ 0		;1 = USB activity hook active
 2719 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2720 00:0000 -  -  -  -  plotFlag3		equ 3Ch  
 2721 00:0000 -  -  -  -  bufferOnly		equ 0
 2722 00:0000 -  -  -  -  useFastCirc		equ 4
 2723 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2724 00:0000 -  -  -  -  dBKeyFlags		equ 3Dh
 2725 00:0000 -  -  -  -  keyDefaultsF		equ 6		;1 = GetKey returns extended keycodes with TI-Keyboard
 2726 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2727 00:0000 -  -  -  -  silentLinkFlags		equ 3Eh
 2728 00:0000 -  -  -  -  silentLinkActive	equ 0		;1 = SE/84+ silent link is active
 2729 00:0000 -  -  -  -  
 2730 00:0000 -  -  -  -  extraHookFlags		equ 3Eh
 2731 00:0000 -  -  -  -  checkCatalog2HookVer	equ 3		;1 = check catalog 2 hook's version before executing it (and error or take other action if so)
 2732 00:0000 -  -  -  -  openLibActive		equ 4		;1 = OpenLib( was successfully called on a Flash application (ExecLib will error if zero)
 2733 00:0000 -  -  -  -  ;5
 2734 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2735 00:0000 -  -  -  -  clockFlags		equ 3Fh
 2736 00:0000 -  -  -  -  notMDYMode		equ 0		;0 = M/D/Y format
 2737 00:0000 -  -  -  -  isYMDMode		equ 1		;1 = Y/M/D format
 2738 00:0000 -  -  -  -  is24Hour		equ 2		;1 = clock in 24 hour mode
 2739 00:0000 -  -  -  -  inAfternoon		equ 3		;1 = current time is in afternoon (PM) (I think)
 2740 00:0000 -  -  -  -  useTokensInString	equ 4		;1 = use tokens instead of characters when displaying clock as string (for getTmStr and getDtStr vs. MODE screen) (keep this reset)
 2741 00:0000 -  -  -  -  displayClock		equ 5		;1 = display clock (this is set every second, reset otherwise)
 2742 00:0000 -  -  -  -  clockOn			equ 6		;1 = clock on
 2743 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2744 00:0000 -  -  -  -  USBFlag1		equ 40h
 2745 00:0000 -  -  -  -  ;1 Reset in I/O receiving code, doesn't seem to be used anywhere else
 2746 00:0000 -  -  -  -  usbReceiveZone1		equ 2		;1 = receive to RAM pages 3/2 ("zone 1")
 2747 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2748 00:0000 -  -  -  -  USBFlag2		equ 41h
 2749 00:0000 -  -  -  -  ;0
 2750 00:0000 -  -  -  -  ;2
 2751 00:0000 -  -  -  -  noUSBHostInit		equ 3		;1 = _InitSpecificUSBDevice must fail
 2752 00:0000 -  -  -  -  usbDataWaiting		equ 5
 2753 00:0000 -  -  -  -  ;6
 2754 00:0000 -  -  -  -  ;7
 2755 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2756 00:0000 -  -  -  -  USBFlag3		equ 42h
 2757 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2758 00:0000 -  -  -  -  USBFlag4		equ 43h
 2759 00:0000 -  -  -  -  usbTimeoutError		equ 0		;1 = USB timeout error (crystal timer expired)
 2760 00:0000 -  -  -  -  ;----------------------------------------------------------------------
 2761 00:0000 -  -  -  -  
 2762 00:0000 -  -  -  -  ;Character Font Equates  
 2763 00:0000 -  -  -  -  ;-------------------------------
 2764 00:0000 -  -  -  -  LrecurN			equ 001h
 2765 00:0000 -  -  -  -  LrecurU			equ 002h
 2766 00:0000 -  -  -  -  LrecurV			equ 003h
 2767 00:0000 -  -  -  -  LrecurW			equ 004h
 2768 00:0000 -  -  -  -  Lconvert		equ 005h
 2769 00:0000 -  -  -  -  LsqUp			equ 006h
 2770 00:0000 -  -  -  -  LsqDown			equ 007h
 2771 00:0000 -  -  -  -  Lintegral		equ 008h
 2772 00:0000 -  -  -  -  Lcross			equ 009h
 2773 00:0000 -  -  -  -  LboxIcon 		equ 00Ah
 2774 00:0000 -  -  -  -  LcrossIcon 		equ 00Bh
 2775 00:0000 -  -  -  -  LdotIcon 		equ 00Ch
 2776 00:0000 -  -  -  -  LsubT   		equ 00Dh ;small capital T for parametric mode.
 2777 00:0000 -  -  -  -  LcubeR  		equ 00Eh ;slightly different 3 for cubed root.
 2778 00:0000 -  -  -  -  LhexF			equ 00Fh
 2779 00:0000 -  -  -  -  Lroot			equ 010h
 2780 00:0000 -  -  -  -  Linverse		equ 011h
 2781 00:0000 -  -  -  -  Lsquare			equ 012h
 2782 00:0000 -  -  -  -  Langle			equ 013h
 2783 00:0000 -  -  -  -  Ldegree			equ 014h
 2784 00:0000 -  -  -  -  Lradian			equ 015h
 2785 00:0000 -  -  -  -  Ltranspose		equ 016h
 2786 00:0000 -  -  -  -  LLE			equ 017h
 2787 00:0000 -  -  -  -  LNE			equ 018h
 2788 00:0000 -  -  -  -  LGE			equ 019h
 2789 00:0000 -  -  -  -  Lneg			equ 01Ah
 2790 00:0000 -  -  -  -  Lexponent		equ 01Bh
 2791 00:0000 -  -  -  -  Lstore			equ 01Ch
 2792 00:0000 -  -  -  -  Lten			equ 01Dh
 2793 00:0000 -  -  -  -  LupArrow		equ 01Eh
 2794 00:0000 -  -  -  -  LdownArrow		equ 01Fh
 2795 00:0000 -  -  -  -  Lspace			equ 020h
 2796 00:0000 -  -  -  -  Lexclam			equ 021h
 2797 00:0000 -  -  -  -  Lquote			equ 022h
 2798 00:0000 -  -  -  -  Lpound			equ 023h
 2799 00:0000 -  -  -  -  Lfourth			equ 024h
 2800 00:0000 -  -  -  -  Lpercent		equ 025h
 2801 00:0000 -  -  -  -  Lampersand		equ 026h
 2802 00:0000 -  -  -  -  Lapostrophe		equ 027h
 2803 00:0000 -  -  -  -  LlParen			equ 028h
 2804 00:0000 -  -  -  -  LrParen			equ 029h
 2805 00:0000 -  -  -  -  Lasterisk		equ 02Ah
 2806 00:0000 -  -  -  -  LplusSign		equ 02Bh
 2807 00:0000 -  -  -  -  Lcomma			equ 02Ch
 2808 00:0000 -  -  -  -  Ldash			equ 02Dh
 2809 00:0000 -  -  -  -  Lperiod			equ 02Eh
 2810 00:0000 -  -  -  -  Lslash			equ 02Fh
 2811 00:0000 -  -  -  -  L0			equ 030h
 2812 00:0000 -  -  -  -  L1			equ 031h
 2813 00:0000 -  -  -  -  L2			equ 032h
 2814 00:0000 -  -  -  -  L3			equ 033h
 2815 00:0000 -  -  -  -  L4			equ 034h
 2816 00:0000 -  -  -  -  L5			equ 035h
 2817 00:0000 -  -  -  -  L6			equ 036h
 2818 00:0000 -  -  -  -  L7			equ 037h
 2819 00:0000 -  -  -  -  L8			equ 038h
 2820 00:0000 -  -  -  -  L9			equ 039h
 2821 00:0000 -  -  -  -  Lcolon			equ 03Ah
 2822 00:0000 -  -  -  -  Lsemicolon		equ 03Bh
 2823 00:0000 -  -  -  -  LLT			equ 03Ch
 2824 00:0000 -  -  -  -  LEQ			equ 03Dh
 2825 00:0000 -  -  -  -  LGT			equ 03Eh
 2826 00:0000 -  -  -  -  Lquestion		equ 03Fh
 2827 00:0000 -  -  -  -  LatSign			equ 040h
 2828 00:0000 -  -  -  -  LcapA			equ 041h
 2829 00:0000 -  -  -  -  LcapB			equ 042h
 2830 00:0000 -  -  -  -  LcapC			equ 043h
 2831 00:0000 -  -  -  -  LcapD			equ 044h
 2832 00:0000 -  -  -  -  LcapE			equ 045h
 2833 00:0000 -  -  -  -  LcapF			equ 046h
 2834 00:0000 -  -  -  -  LcapG			equ 047h
 2835 00:0000 -  -  -  -  LcapH			equ 048h
 2836 00:0000 -  -  -  -  LcapI			equ 049h
 2837 00:0000 -  -  -  -  LcapJ			equ 04Ah
 2838 00:0000 -  -  -  -  LcapK			equ 04Bh
 2839 00:0000 -  -  -  -  LcapL			equ 04Ch
 2840 00:0000 -  -  -  -  LcapM			equ 04Dh
 2841 00:0000 -  -  -  -  LcapN			equ 04Eh
 2842 00:0000 -  -  -  -  LcapO			equ 04Fh
 2843 00:0000 -  -  -  -  LcapP			equ 050h
 2844 00:0000 -  -  -  -  LcapQ			equ 051h
 2845 00:0000 -  -  -  -  LcapR			equ 052h
 2846 00:0000 -  -  -  -  LcapS			equ 053h
 2847 00:0000 -  -  -  -  LcapT			equ 054h
 2848 00:0000 -  -  -  -  LcapU			equ 055h
 2849 00:0000 -  -  -  -  LcapV			equ 056h
 2850 00:0000 -  -  -  -  LcapW			equ 057h
 2851 00:0000 -  -  -  -  LcapX			equ 058h
 2852 00:0000 -  -  -  -  LcapY			equ 059h
 2853 00:0000 -  -  -  -  LcapZ			equ 05Ah
 2854 00:0000 -  -  -  -  Ltheta			equ 05Bh
 2855 00:0000 -  -  -  -  Lbackslash		equ 05Ch
 2856 00:0000 -  -  -  -  LrBrack			equ 05Dh
 2857 00:0000 -  -  -  -  Lcaret			equ 05Eh
 2858 00:0000 -  -  -  -  Lunderscore		equ 05Fh
 2859 00:0000 -  -  -  -  Lbackquote		equ 060h
 2860 00:0000 -  -  -  -  La			equ 061h
 2861 00:0000 -  -  -  -  Lb			equ 062h
 2862 00:0000 -  -  -  -  Lc			equ 063h
 2863 00:0000 -  -  -  -  Ld			equ 064h
 2864 00:0000 -  -  -  -  Le			equ 065h
 2865 00:0000 -  -  -  -  Lf			equ 066h
 2866 00:0000 -  -  -  -  Lg			equ 067h
 2867 00:0000 -  -  -  -  Lh			equ 068h
 2868 00:0000 -  -  -  -  Li			equ 069h
 2869 00:0000 -  -  -  -  Lj			equ 06Ah
 2870 00:0000 -  -  -  -  Lk			equ 06Bh
 2871 00:0000 -  -  -  -  Ll			equ 06Ch
 2872 00:0000 -  -  -  -  Lm			equ 06Dh
 2873 00:0000 -  -  -  -  Ln			equ 06Eh
 2874 00:0000 -  -  -  -  Lo			equ 06Fh
 2875 00:0000 -  -  -  -  Lp			equ 070h
 2876 00:0000 -  -  -  -  Lq			equ 071h
 2877 00:0000 -  -  -  -  Lr			equ 072h
 2878 00:0000 -  -  -  -  Ls			equ 073h
 2879 00:0000 -  -  -  -  Lt			equ 074h
 2880 00:0000 -  -  -  -  Lu			equ 075h
 2881 00:0000 -  -  -  -  Lv			equ 076h
 2882 00:0000 -  -  -  -  Lw			equ 077h
 2883 00:0000 -  -  -  -  Lx			equ 078h
 2884 00:0000 -  -  -  -  Ly			equ 079h
 2885 00:0000 -  -  -  -  Lz			equ 07Ah
 2886 00:0000 -  -  -  -  LlBrace			equ 07Bh
 2887 00:0000 -  -  -  -  Lbar			equ 07Ch
 2888 00:0000 -  -  -  -  LrBrace			equ 07Dh
 2889 00:0000 -  -  -  -  Ltilde			equ 07Eh
 2890 00:0000 -  -  -  -  LinvEQ			equ 07Fh
 2891 00:0000 -  -  -  -  Lsub0			equ 080h
 2892 00:0000 -  -  -  -  Lsub1			equ 081h
 2893 00:0000 -  -  -  -  Lsub2			equ 082h
 2894 00:0000 -  -  -  -  Lsub3			equ 083h
 2895 00:0000 -  -  -  -  Lsub4			equ 084h
 2896 00:0000 -  -  -  -  Lsub5			equ 085h
 2897 00:0000 -  -  -  -  Lsub6			equ 086h
 2898 00:0000 -  -  -  -  Lsub7			equ 087h
 2899 00:0000 -  -  -  -  Lsub8			equ 088h
 2900 00:0000 -  -  -  -  Lsub9			equ 089h
 2901 00:0000 -  -  -  -  LcapAAcute		equ 08Ah
 2902 00:0000 -  -  -  -  LcapAGrave		equ 08Bh
 2903 00:0000 -  -  -  -  LcapACaret		equ 08Ch
 2904 00:0000 -  -  -  -  LcapADier		equ 08Dh
 2905 00:0000 -  -  -  -  LaAcute			equ 08Eh
 2906 00:0000 -  -  -  -  LaGrave			equ 08Fh
 2907 00:0000 -  -  -  -  LaCaret			equ 090h
 2908 00:0000 -  -  -  -  LaDier			equ 091h
 2909 00:0000 -  -  -  -  LcapEAcute		equ 092h
 2910 00:0000 -  -  -  -  LcapEGrave		equ 093h
 2911 00:0000 -  -  -  -  LcapECaret		equ 094h
 2912 00:0000 -  -  -  -  LcapEDier		equ 095h
 2913 00:0000 -  -  -  -  LeAcute			equ 096h
 2914 00:0000 -  -  -  -  LeGrave			equ 097h
 2915 00:0000 -  -  -  -  LeCaret			equ 098h
 2916 00:0000 -  -  -  -  LeDier			equ 099h
 2917 00:0000 -  -  -  -  LcapIAcute		equ 09Ah
 2918 00:0000 -  -  -  -  LcapIGrave		equ 09Bh
 2919 00:0000 -  -  -  -  LcapICaret		equ 09Ch
 2920 00:0000 -  -  -  -  LcapIDier		equ 09Dh
 2921 00:0000 -  -  -  -  LiAcute			equ 09Eh
 2922 00:0000 -  -  -  -  LiGrave			equ 09Fh
 2923 00:0000 -  -  -  -  LiCaret			equ 0A0h
 2924 00:0000 -  -  -  -  LiDier			equ 0A1h
 2925 00:0000 -  -  -  -  LcapOAcute		equ 0A2h
 2926 00:0000 -  -  -  -  LcapOGrave		equ 0A3h
 2927 00:0000 -  -  -  -  LcapOCaret		equ 0A4h
 2928 00:0000 -  -  -  -  LcapODier		equ 0A5h
 2929 00:0000 -  -  -  -  LoAcute			equ 0A6h
 2930 00:0000 -  -  -  -  LoGrave			equ 0A7h
 2931 00:0000 -  -  -  -  LoCaret			equ 0A8h
 2932 00:0000 -  -  -  -  LoDier			equ 0A9h
 2933 00:0000 -  -  -  -  LcapUAcute		equ 0AAh
 2934 00:0000 -  -  -  -  LcapUGrave		equ 0ABh
 2935 00:0000 -  -  -  -  LcapUCaret		equ 0ACh
 2936 00:0000 -  -  -  -  LcapUDier		equ 0ADh
 2937 00:0000 -  -  -  -  LuAcute			equ 0AEh
 2938 00:0000 -  -  -  -  LuGrave			equ 0AFh
 2939 00:0000 -  -  -  -  LuCaret			equ 0B0h
 2940 00:0000 -  -  -  -  LuDier			equ 0B1h
 2941 00:0000 -  -  -  -  LcapCCed		equ 0B2h
 2942 00:0000 -  -  -  -  LcCed			equ 0B3h
 2943 00:0000 -  -  -  -  LcapNTilde		equ 0B4h
 2944 00:0000 -  -  -  -  LnTilde			equ 0B5h
 2945 00:0000 -  -  -  -  Laccent			equ 0B6h
 2946 00:0000 -  -  -  -  Lgrave			equ 0B7h
 2947 00:0000 -  -  -  -  Ldieresis		equ 0B8h
 2948 00:0000 -  -  -  -  LquesDown		equ 0B9h
 2949 00:0000 -  -  -  -  LexclamDown		equ 0BAh
 2950 00:0000 -  -  -  -  Lalpha			equ 0BBh
 2951 00:0000 -  -  -  -  Lbeta			equ 0BCh
 2952 00:0000 -  -  -  -  Lgamma			equ 0BDh
 2953 00:0000 -  -  -  -  LcapDelta		equ 0BEh
 2954 00:0000 -  -  -  -  Ldelta			equ 0BFh
 2955 00:0000 -  -  -  -  Lepsilon		equ 0C0h
 2956 00:0000 -  -  -  -  LlBrack 		equ 0C1h
 2957 00:0000 -  -  -  -  Llambda			equ 0C2h
 2958 00:0000 -  -  -  -  Lmu			equ 0C3h
 2959 00:0000 -  -  -  -  Lpi			equ 0C4h
 2960 00:0000 -  -  -  -  Lrho			equ 0C5h
 2961 00:0000 -  -  -  -  LcapSigma		equ 0C6h
 2962 00:0000 -  -  -  -  Lsigma			equ 0C7h
 2963 00:0000 -  -  -  -  Ltau			equ 0C8h
 2964 00:0000 -  -  -  -  Lphi			equ 0C9h
 2965 00:0000 -  -  -  -  LcapOmega		equ 0CAh
 2966 00:0000 -  -  -  -  LxMean			equ 0CBh
 2967 00:0000 -  -  -  -  LyMean			equ 0CCh
 2968 00:0000 -  -  -  -  LsupX			equ 0CDh
 2969 00:0000 -  -  -  -  Lellipsis		equ 0CEh
 2970 00:0000 -  -  -  -  Lleft			equ 0CFh
 2971 00:0000 -  -  -  -  Lblock			equ 0D0h
 2972 00:0000 -  -  -  -  Lper			equ 0D1h
 2973 00:0000 -  -  -  -  Lhyphen			equ 0D2h
 2974 00:0000 -  -  -  -  Larea			equ 0D3h
 2975 00:0000 -  -  -  -  Ltemp			equ 0D4h
 2976 00:0000 -  -  -  -  Lcube			equ 0D5h
 2977 00:0000 -  -  -  -  Lenter			equ 0D6h
 2978 00:0000 -  -  -  -  LimagI			equ 0D7h
 2979 00:0000 -  -  -  -  Lphat			equ 0D8h
 2980 00:0000 -  -  -  -  Lchi			equ 0D9h
 2981 00:0000 -  -  -  -  LstatF			equ 0DAh
 2982 00:0000 -  -  -  -  Llne			equ 0DBh
 2983 00:0000 -  -  -  -  LlistL			equ 0DCh
 2984 00:0000 -  -  -  -  LfinanN 		equ 0DDh
 2985 00:0000 -  -  -  -  L2_r_paren 		equ 0DEh
 2986 00:0000 -  -  -  -  LblockArrow     	equ 0DFh
 2987 00:0000 -  -  -  -  LcurO   		equ 0E0h
 2988 00:0000 -  -  -  -  LcurO2  		equ 0E1h
 2989 00:0000 -  -  -  -  LcurOcapA       	equ 0E2h
 2990 00:0000 -  -  -  -  LcurOa  		equ 0E3h
 2991 00:0000 -  -  -  -  LcurI   		equ 0E4h
 2992 00:0000 -  -  -  -  LcurI2  		equ 0E5h
 2993 00:0000 -  -  -  -  LcurIcapA       	equ 0E6h
 2994 00:0000 -  -  -  -  LcurIa  		equ 0E7h
 2995 00:0000 -  -  -  -  LGline          	equ 0E8h ; = 0
 2996 00:0000 -  -  -  -  LGthick         	equ 0E9h ; = 1
 2997 00:0000 -  -  -  -  LGabove			equ 0EAh ; = 2
 2998 00:0000 -  -  -  -  LGbelow			equ 0EBh ; = 3
 2999 00:0000 -  -  -  -  LGpath			equ 0ECh ; = 4
 3000 00:0000 -  -  -  -  LGanimate		equ 0EDh ; = 5
 3001 00:0000 -  -  -  -  LGdot			equ 0EEh ; = 6
 3002 00:0000 -  -  -  -  LUpBlk			equ 0EFh ;Up arrow and Block in solver
 3003 00:0000 -  -  -  -  LDnBlk			equ 0F0h ;Down arrow and Block in solver
 3004 00:0000 -  -  -  -  LcurFull		equ 0F1h ;note: must be last char (PutMap checks)
 3005 00:0000 -  -  -  -  
 3006 00:0000 -  -  -  -  ;(MenuCurrent) Values
 3007 00:0000 -  -  -  -  ;--------------------------
 3008 00:0000 -  -  -  -  mConfirmation		equ 01h
 3009 00:0000 -  -  -  -  mApps			equ 02h
 3010 00:0000 -  -  -  -  mProgramHome		equ 03h
 3011 00:0000 -  -  -  -  mPrgm_Run		equ 00h
 3012 00:0000 -  -  -  -  mPrgm_Edit		equ 01h
 3013 00:0000 -  -  -  -  mPrgm_New		equ 02h
 3014 00:0000 -  -  -  -  mZoom			equ 04h
 3015 00:0000 -  -  -  -  mZoom_Zoom		equ 00h
 3016 00:0000 -  -  -  -  mZoom_Memory		equ 01h
 3017 00:0000 -  -  -  -  mDraw			equ 05h
 3018 00:0000 -  -  -  -  mDraw_Draw		equ 00h
 3019 00:0000 -  -  -  -  mDraw_Points		equ 01h
 3020 00:0000 -  -  -  -  mDraw_Store		equ 02h
 3021 00:0000 -  -  -  -  mStatPlots		equ 06h
 3022 00:0000 -  -  -  -  mStat			equ 07h
 3023 00:0000 -  -  -  -  mStat_Edit		equ 00h
 3024 00:0000 -  -  -  -  mStat_Calc		equ 01h
 3025 00:0000 -  -  -  -  mStat_Tests		equ 02h
 3026 00:0000 -  -  -  -  mMath			equ 08h
 3027 00:0000 -  -  -  -  mMath_Math		equ 00h
 3028 00:0000 -  -  -  -  mMath_Number		equ 01h
 3029 00:0000 -  -  -  -  mMath_Complex		equ 02h
 3030 00:0000 -  -  -  -  mMath_Prob		equ 03h
 3031 00:0000 -  -  -  -  mTest			equ 09h
 3032 00:0000 -  -  -  -  mTest_Test		equ 00h
 3033 00:0000 -  -  -  -  mTest_Logic		equ 01h
 3034 00:0000 -  -  -  -  mVars			equ 0Ah
 3035 00:0000 -  -  -  -  mVars_Vars		equ 00h
 3036 00:0000 -  -  -  -  mVars_YVars		equ 01h
 3037 00:0000 -  -  -  -  mMemory			equ 0Ch
 3038 00:0000 -  -  -  -  mMatrix			equ 0Dh
 3039 00:0000 -  -  -  -  mMatrix_Name		equ 00h
 3040 00:0000 -  -  -  -  mMatrix_Math		equ 01h
 3041 00:0000 -  -  -  -  mMatrix_Edit		equ 02h
 3042 00:0000 -  -  -  -  mDistr			equ 0Eh
 3043 00:0000 -  -  -  -  mDistr_Distr		equ 00h
 3044 00:0000 -  -  -  -  mDistr_Draw		equ 01h
 3045 00:0000 -  -  -  -  mAngle			equ 0Fh
 3046 00:0000 -  -  -  -  mList			equ 10h
 3047 00:0000 -  -  -  -  mList_Names		equ 00h
 3048 00:0000 -  -  -  -  mList_Ops		equ 01h
 3049 00:0000 -  -  -  -  mList_Math		equ 02h
 3050 00:0000 -  -  -  -  mCalculate		equ 11h
 3051 00:0000 -  -  -  -  mVarsWin		equ 14h
 3052 00:0000 -  -  -  -  mVarsWin_XY		equ 00h
 3053 00:0000 -  -  -  -  mVarsWin_TTh		equ 01h
 3054 00:0000 -  -  -  -  mVarsWin_UVW		equ 02h
 3055 00:0000 -  -  -  -  mVarsZoom		equ 15h
 3056 00:0000 -  -  -  -  mVarsZoom_ZXY		equ 00h
 3057 00:0000 -  -  -  -  mVarsZoom_ZT		equ 01h
 3058 00:0000 -  -  -  -  mVarsZoom_UVW		equ 02h
 3059 00:0000 -  -  -  -  mVarsGDB		equ 16h
 3060 00:0000 -  -  -  -  mVarsPics		equ 17h
 3061 00:0000 -  -  -  -  mVarsStrings		equ 18h
 3062 00:0000 -  -  -  -  mVarsStat		equ 19h
 3063 00:0000 -  -  -  -  mVarsStat_XY		equ 00h
 3064 00:0000 -  -  -  -  mVarsStat_Sigma		equ 01h
 3065 00:0000 -  -  -  -  mVarsStat_EQ		equ 02h
 3066 00:0000 -  -  -  -  mVarsStat_Test		equ 03h
 3067 00:0000 -  -  -  -  mVarsStat_Pts		equ 04h
 3068 00:0000 -  -  -  -  mVarsTable		equ 1Ah
 3069 00:0000 -  -  -  -  mVarsYEqu		equ 1Bh
 3070 00:0000 -  -  -  -  mVarsParametric		equ 1Ch
 3071 00:0000 -  -  -  -  mVarsPolar		equ 1Dh
 3072 00:0000 -  -  -  -  mVarsFnOnOff		equ 1Eh
 3073 00:0000 -  -  -  -  mMemReset		equ 1Fh
 3074 00:0000 -  -  -  -  mMemReset_RAM		equ 00h
 3075 00:0000 -  -  -  -  mMemReset_ROM		equ 01h
 3076 00:0000 -  -  -  -  mMemReset_All		equ 02h
 3077 00:0000 -  -  -  -  mMemMgmtDel		equ 20h
 3078 00:0000 -  -  -  -  mMemResetDefaults	equ 21h
 3079 00:0000 -  -  -  -  mMemResetRAMAll		equ 23h
 3080 00:0000 -  -  -  -  mMemResetROMVars	equ 24h
 3081 00:0000 -  -  -  -  mMemResetROMApps	equ 25h
 3082 00:0000 -  -  -  -  mMemResetROMAll		equ 26h
 3083 00:0000 -  -  -  -  mMemResetAll		equ 27h
 3084 00:0000 -  -  -  -  mGroup			equ 28h
 3085 00:0000 -  -  -  -  mGroup_New		equ 00h
 3086 00:0000 -  -  -  -  mGroup_Ungroup		equ 01h
 3087 00:0000 -  -  -  -  mGroupVars		equ 29h
 3088 00:0000 -  -  -  -  mProgramEdit		equ 2Ah
 3089 00:0000 -  -  -  -  mPrgmEd_Ctrl		equ 00h
 3090 00:0000 -  -  -  -  mPrgmEd_IO		equ 01h
 3091 00:0000 -  -  -  -  mPrgmEd_Exec		equ 02h
 3092 00:0000 -  -  -  -  mPrgmZoom		equ 2Bh
 3093 00:0000 -  -  -  -  mPrgmZoom_Zoom		equ 00h
 3094 00:0000 -  -  -  -  mPrgmZoom_Mem		equ 01h
 3095 00:0000 -  -  -  -  mPrgmDraw		equ 2Ch
 3096 00:0000 -  -  -  -  mPrgmDraw_Draw		equ 00h
 3097 00:0000 -  -  -  -  mPrgmDraw_Pt		equ 01h
 3098 00:0000 -  -  -  -  mPrgmDraw_Store		equ 02h
 3099 00:0000 -  -  -  -  mPrgmStatPlot		equ 2Dh
 3100 00:0000 -  -  -  -  mPrgmSP_Plots		equ 00h
 3101 00:0000 -  -  -  -  mPrgmSP_Type		equ 01h
 3102 00:0000 -  -  -  -  mPrgmSP_Mark		equ 02h
 3103 00:0000 -  -  -  -  mPrgmStat		equ 2Eh
 3104 00:0000 -  -  -  -  mPrgmStat_Edit		equ 00h
 3105 00:0000 -  -  -  -  mPrgmStat_Calc		equ 01h
 3106 00:0000 -  -  -  -  mPrgmStat_Tests		equ 02h
 3107 00:0000 -  -  -  -  mPrgmMath		equ 2Fh
 3108 00:0000 -  -  -  -  mPrgmMath_Math		equ 00h
 3109 00:0000 -  -  -  -  mPrgmMath_Num		equ 01h
 3110 00:0000 -  -  -  -  mPrgmMath_Cplx		equ 02h
 3111 00:0000 -  -  -  -  mPrgmMath_Prob		equ 03h
 3112 00:0000 -  -  -  -  mLink			equ 30h
 3113 00:0000 -  -  -  -  mLink_Send		equ 00h
 3114 00:0000 -  -  -  -  mLink_Recieve		equ 01h
 3115 00:0000 -  -  -  -  mLinkTrasmit		equ 31h
 3116 00:0000 -  -  -  -  mLinkXmit_Xmit		equ 01h
 3117 00:0000 -  -  -  -  mGarbageCollect		equ 3Fh
 3118 00:0000 -  -  -  -  mSelectGroupVars	equ 40h
 3119 00:0000 -  -  -  -  mSelGrpVars_Sel		equ 00h
 3120 00:0000 -  -  -  -  mSelGrpVars_Grp		equ 01h
 3121 00:0000 -  -  -  -  mDuplicateName		equ 42h
 3122 00:0000 -  -  -  -  mCatalog		equ 45h
 3123 00:0000 -  -  -  -  mFinance		equ 22h
 3124 00:0000 -  -  -  -  mFinance_Calc		equ 00h
 3125 00:0000 -  -  -  -  mFinance_Vars		equ 01h
 3126 00:0000 -  -  -  -  
 3127 00:0000 -  -  -  -  ;Keypress Equates
 3128 00:0000 -  -  -  -  ;-------------------------------
 3129 00:0000 -  -  -  -  kRight			equ 001h
 3130 00:0000 -  -  -  -  kLeft			equ 002h
 3131 00:0000 -  -  -  -  kUp			equ 003h
 3132 00:0000 -  -  -  -  kDown			equ 004h
 3133 00:0000 -  -  -  -  kEnter			equ 005h
 3134 00:0000 -  -  -  -  kAlphaEnter		equ 006h
 3135 00:0000 -  -  -  -  kAlphaUp		equ 007h
 3136 00:0000 -  -  -  -  kAlphaDown		equ 008h
 3137 00:0000 -  -  -  -  kClear			equ 009h
 3138 00:0000 -  -  -  -  kDel			equ 00Ah
 3139 00:0000 -  -  -  -  kIns			equ 00Bh
 3140 00:0000 -  -  -  -  kRecall			equ 00Ch
 3141 00:0000 -  -  -  -  kLastEnt		equ 00Dh
 3142 00:0000 -  -  -  -  kBOL			equ 00Eh
 3143 00:0000 -  -  -  -  kEOL			equ 00Fh
 3144 00:0000 -  -  -  -  
 3145 00:0000 -  -  -  -  kSelAll			equ 010h
 3146 00:0000 -  -  -  -  kUnselAll		equ 011h
 3147 00:0000 -  -  -  -  kLtoTI82		equ 012h
 3148 00:0000 -  -  -  -  kBackup			equ 013h
 3149 00:0000 -  -  -  -  kRecieve		equ 014h
 3150 00:0000 -  -  -  -  kLnkQuit		equ 015h
 3151 00:0000 -  -  -  -  kTrans			equ 016h
 3152 00:0000 -  -  -  -  kRename			equ 017h
 3153 00:0000 -  -  -  -  kOverw			equ 018h
 3154 00:0000 -  -  -  -  kOmit			equ 019h
 3155 00:0000 -  -  -  -  kCont			equ 01Ah
 3156 00:0000 -  -  -  -  kSendID			equ 01Bh
 3157 00:0000 -  -  -  -  kSendSW			equ 01Ch
 3158 00:0000 -  -  -  -  kYes			equ 01Dh
 3159 00:0000 -  -  -  -  kNoWay			equ 01Eh
 3160 00:0000 -  -  -  -  kvSendType		equ 01Fh
 3161 00:0000 -  -  -  -  kOverWAll		equ 020h
 3162 00:0000 -  -  -  -  kNo			equ 025h
 3163 00:0000 -  -  -  -  kKReset			equ 026h
 3164 00:0000 -  -  -  -  kApp			equ 027h
 3165 00:0000 -  -  -  -  kDoug			equ 028h
 3166 00:0000 -  -  -  -  kListflag		equ 029h
 3167 00:0000 -  -  -  -  menuStart		equ 02Bh
 3168 00:0000 -  -  -  -  kAreYouSure		equ 02Bh
 3169 00:0000 -  -  -  -  kAppsMenu		equ 02Ch
 3170 00:0000 -  -  -  -  kPrgm			equ 02Dh
 3171 00:0000 -  -  -  -  kZoom			equ 02Eh
 3172 00:0000 -  -  -  -  kDraw			equ 02Fh
 3173 00:0000 -  -  -  -  kSPlot			equ 030h
 3174 00:0000 -  -  -  -  kStat			equ 031h
 3175 00:0000 -  -  -  -  kMath			equ 032h
 3176 00:0000 -  -  -  -  kTest			equ 033h
 3177 00:0000 -  -  -  -  kChar			equ 034h
 3178 00:0000 -  -  -  -  kVars			equ 035h
 3179 00:0000 -  -  -  -  kMem			equ 036h
 3180 00:0000 -  -  -  -  kMatrix			equ 037h
 3181 00:0000 -  -  -  -  kDist			equ 038h
 3182 00:0000 -  -  -  -  kAngle			equ 039h
 3183 00:0000 -  -  -  -  kList			equ 03Ah
 3184 00:0000 -  -  -  -  kCalc			equ 03Bh
 3185 00:0000 -  -  -  -  kFin			equ 03Ch
 3186 00:0000 -  -  -  -  menuEnd			equ kFin
 3187 00:0000 -  -  -  -  kCatalog		equ 03Eh
 3188 00:0000 -  -  -  -  kInputDone		equ 03Fh
 3189 00:0000 -  -  -  -  kOff			equ kInputDone
 3190 00:0000 -  -  -  -  kQuit			equ 040h
 3191 00:0000 -  -  -  -  appStart		equ kQuit
 3192 00:0000 -  -  -  -  kLinkIO			equ 041h
 3193 00:0000 -  -  -  -  kMatrixEd		equ 042h
 3194 00:0000 -  -  -  -  kStatEd			equ 043h
 3195 00:0000 -  -  -  -  kGraph			equ 044h
 3196 00:0000 -  -  -  -  kMode			equ 045h
 3197 00:0000 -  -  -  -  kPrgmEd			equ 046h ;PROGRAM EDIT
 3198 00:0000 -  -  -  -  kPrgmCr			equ 047h ;PROGRAM CREATE
 3199 00:0000 -  -  -  -  kWindow			equ 048h ;RANGE EDITOR
 3200 00:0000 -  -  -  -  kYequ			equ 049h ;EQUATION EDITOR
 3201 00:0000 -  -  -  -  kTable			equ 04Ah ;TABLE EDITOR
 3202 00:0000 -  -  -  -  kTblSet			equ 04Bh ;TABLE SET
 3203 00:0000 -  -  -  -  kChkRAM			equ 04Ch ;CHECK RAM (About screen)
 3204 00:0000 -  -  -  -  kDelMem			equ 04Dh ;DELETE MEM
 3205 00:0000 -  -  -  -  kResetMem		equ 04Eh ;RESET MEM
 3206 00:0000 -  -  -  -  kResetDef		equ 04Fh ;RESET DEFAULT
 3207 00:0000 -  -  -  -  kPrgmInput		equ 050h ;PROGRAM INPUT
 3208 00:0000 -  -  -  -  kZFactEd		equ 051h ;ZOOM FACTOR EDITOR
 3209 00:0000 -  -  -  -  kError			equ 052h ;ERROR
 3210 00:0000 -  -  -  -  kSolveTVM		equ 053h ;TVM SOLVER
 3211 00:0000 -  -  -  -  kSolveRoot		equ 054h ;SOLVE EDITOR
 3212 00:0000 -  -  -  -  kStatP			equ 055h ;stat plot
 3213 00:0000 -  -  -  -  kInfStat		equ 056h ;Inferential Statistic
 3214 00:0000 -  -  -  -  kFormat			equ 057h ;FORMAT
 3215 00:0000 -  -  -  -  kExtApps		equ 058h ;External Applications.     NEW
 3216 00:0000 -  -  -  -  kNewApps		equ 059h ;New Apps for Cerberus.
 3217 00:0000 -  -  -  -  append			equ kNewApps
 3218 00:0000 -  -  -  -  echoStart1		equ 05Ah
 3219 00:0000 -  -  -  -  kTrace			equ 05Ah
 3220 00:0000 -  -  -  -  kZFit			equ 05Bh
 3221 00:0000 -  -  -  -  kZIn			equ 05Ch
 3222 00:0000 -  -  -  -  kZOut			equ 05Dh
 3223 00:0000 -  -  -  -  kZPrev			equ 05Eh
 3224 00:0000 -  -  -  -  kBox			equ 05Fh
 3225 00:0000 -  -  -  -  kDecml			equ 060h
 3226 00:0000 -  -  -  -  kSetZm			equ 061h
 3227 00:0000 -  -  -  -  kSquar			equ 062h
 3228 00:0000 -  -  -  -  kStd			equ 063h
 3229 00:0000 -  -  -  -  kTrig			equ 064h
 3230 00:0000 -  -  -  -  kUsrZm			equ 065h
 3231 00:0000 -  -  -  -  kZSto			equ 066h
 3232 00:0000 -  -  -  -  kZInt			equ 067h
 3233 00:0000 -  -  -  -  kZStat			equ 068h
 3234 00:0000 -  -  -  -  echoStart2		equ 069h
 3235 00:0000 -  -  -  -  kSelect			equ 069h
 3236 00:0000 -  -  -  -  kCircl			equ 06Ah
 3237 00:0000 -  -  -  -  kClDrw			equ 06Bh
 3238 00:0000 -  -  -  -  kLine			equ 06Ch
 3239 00:0000 -  -  -  -  kPen			equ 06Dh
 3240 00:0000 -  -  -  -  kPtChg			equ 06Eh
 3241 00:0000 -  -  -  -  kPtOff			equ 06Fh
 3242 00:0000 -  -  -  -  kPtOn			equ 070h
 3243 00:0000 -  -  -  -  kVert			equ 071h
 3244 00:0000 -  -  -  -  kHoriz			equ 072h
 3245 00:0000 -  -  -  -  kText			equ 073h
 3246 00:0000 -  -  -  -  kTanLn			equ 074h
 3247 00:0000 -  -  -  -  kEval			equ 075h
 3248 00:0000 -  -  -  -  kInters			equ 076h
 3249 00:0000 -  -  -  -  kDYDX			equ 077h
 3250 00:0000 -  -  -  -  kFnIntg			equ 078h
 3251 00:0000 -  -  -  -  kRootG			equ 079h
 3252 00:0000 -  -  -  -  kDYDT			equ 07Ah
 3253 00:0000 -  -  -  -  kDXDT			equ 07Bh
 3254 00:0000 -  -  -  -  kDRDo			equ 07Ch
 3255 00:0000 -  -  -  -  KGFMin			equ 07Dh
 3256 00:0000 -  -  -  -  KGFMax			equ 07Eh
 3257 00:0000 -  -  -  -  EchoStart		equ 07Fh
 3258 00:0000 -  -  -  -  kListName		equ 07Fh
 3259 00:0000 -  -  -  -  kAdd			equ 080h
 3260 00:0000 -  -  -  -  kSub			equ 081h
 3261 00:0000 -  -  -  -  kMul			equ 082h
 3262 00:0000 -  -  -  -  kDiv			equ 083h
 3263 00:0000 -  -  -  -  kExpon			equ 084h
 3264 00:0000 -  -  -  -  kLParen			equ 085h
 3265 00:0000 -  -  -  -  kRParen			equ 086h
 3266 00:0000 -  -  -  -  kLBrack			equ 087h
 3267 00:0000 -  -  -  -  kRBrack			equ 088h
 3268 00:0000 -  -  -  -  kShade			equ 089h
 3269 00:0000 -  -  -  -  kStore			equ 08Ah
 3270 00:0000 -  -  -  -  kComma			equ 08Bh
 3271 00:0000 -  -  -  -  kChs			equ 08Ch
 3272 00:0000 -  -  -  -  kDecPnt			equ 08Dh
 3273 00:0000 -  -  -  -  k0			equ 08Eh
 3274 00:0000 -  -  -  -  k1			equ 08Fh
 3275 00:0000 -  -  -  -  k2			equ 090h
 3276 00:0000 -  -  -  -  k3			equ 091h
 3277 00:0000 -  -  -  -  k4			equ 092h
 3278 00:0000 -  -  -  -  k5			equ 093h
 3279 00:0000 -  -  -  -  k6			equ 094h
 3280 00:0000 -  -  -  -  k7			equ 095h
 3281 00:0000 -  -  -  -  k8			equ 096h
 3282 00:0000 -  -  -  -  k9			equ 097h
 3283 00:0000 -  -  -  -  kEE			equ 098h
 3284 00:0000 -  -  -  -  kSpace			equ 099h
 3285 00:0000 -  -  -  -  kCapA			equ 09Ah
 3286 00:0000 -  -  -  -  kCapB			equ 09Bh
 3287 00:0000 -  -  -  -  kCapC			equ 09Ch
 3288 00:0000 -  -  -  -  kCapD			equ 09Dh
 3289 00:0000 -  -  -  -  kCapE			equ 09Eh
 3290 00:0000 -  -  -  -  kCapF			equ 09Fh
 3291 00:0000 -  -  -  -  kCapG			equ 0A0h
 3292 00:0000 -  -  -  -  kCapH			equ 0A1h
 3293 00:0000 -  -  -  -  kCapI			equ 0A2h
 3294 00:0000 -  -  -  -  kCapJ			equ 0A3h
 3295 00:0000 -  -  -  -  kCapK			equ 0A4h
 3296 00:0000 -  -  -  -  kCapL			equ 0A5h
 3297 00:0000 -  -  -  -  kCapM			equ 0A6h
 3298 00:0000 -  -  -  -  kCapN			equ 0A7h
 3299 00:0000 -  -  -  -  kCapO			equ 0A8h
 3300 00:0000 -  -  -  -  kCapP			equ 0A9h
 3301 00:0000 -  -  -  -  kCapQ			equ 0AAh
 3302 00:0000 -  -  -  -  kCapR			equ 0ABh
 3303 00:0000 -  -  -  -  kCapS			equ 0ACh
 3304 00:0000 -  -  -  -  kCapT			equ 0ADh
 3305 00:0000 -  -  -  -  kCapU			equ 0AEh
 3306 00:0000 -  -  -  -  kCapV			equ 0AFh
 3307 00:0000 -  -  -  -  kCapW			equ 0B0h
 3308 00:0000 -  -  -  -  kCapX			equ 0B1h
 3309 00:0000 -  -  -  -  kCapY			equ 0B2h
 3310 00:0000 -  -  -  -  kCapZ			equ 0B3h
 3311 00:0000 -  -  -  -  kVarx			equ 0B4h
 3312 00:0000 -  -  -  -  kPi			equ 0B5h
 3313 00:0000 -  -  -  -  kInv			equ 0B6h
 3314 00:0000 -  -  -  -  kSin			equ 0B7h
 3315 00:0000 -  -  -  -  kASin			equ 0B8h
 3316 00:0000 -  -  -  -  kCos			equ 0B9h
 3317 00:0000 -  -  -  -  kACos			equ 0BAh
 3318 00:0000 -  -  -  -  kTan			equ 0BBh
 3319 00:0000 -  -  -  -  kATan			equ 0BCh
 3320 00:0000 -  -  -  -  kSquare			equ 0BDh
 3321 00:0000 -  -  -  -  kSqrt			equ 0BEh
 3322 00:0000 -  -  -  -  kLn			equ 0BFh
 3323 00:0000 -  -  -  -  kExp			equ 0C0h
 3324 00:0000 -  -  -  -  kLog			equ 0C1h
 3325 00:0000 -  -  -  -  kALog			equ 0C2h
 3326 00:0000 -  -  -  -  kToABC			equ 0C3h
 3327 00:0000 -  -  -  -  kClrTbl			equ 0C4h
 3328 00:0000 -  -  -  -  kAns			equ 0C5h
 3329 00:0000 -  -  -  -  kColon			equ 0C6h
 3330 00:0000 -  -  -  -  kNDeriv			equ 0C7h
 3331 00:0000 -  -  -  -  kFnInt			equ 0C8h
 3332 00:0000 -  -  -  -  kRoot			equ 0C9h
 3333 00:0000 -  -  -  -  kQuest			equ 0CAh
 3334 00:0000 -  -  -  -  kQuote			equ 0CBh
 3335 00:0000 -  -  -  -  kTheta			equ 0CCh
 3336 00:0000 -  -  -  -  kIf			equ 0CDh
 3337 00:0000 -  -  -  -  kThen			equ 0CEh
 3338 00:0000 -  -  -  -  kElse			equ 0CFh
 3339 00:0000 -  -  -  -  kFor			equ 0D0h
 3340 00:0000 -  -  -  -  kWhile			equ 0D1h
 3341 00:0000 -  -  -  -  kRepeat			equ 0D2h
 3342 00:0000 -  -  -  -  kEnd			equ 0D3h
 3343 00:0000 -  -  -  -  kPause			equ 0D4h
 3344 00:0000 -  -  -  -  kLbl			equ 0D5h
 3345 00:0000 -  -  -  -  kGoto			equ 0D6h
 3346 00:0000 -  -  -  -  kISG			equ 0D7h
 3347 00:0000 -  -  -  -  kDSL			equ 0D8h
 3348 00:0000 -  -  -  -  kMenu			equ 0D9h
 3349 00:0000 -  -  -  -  kExec			equ 0DAh
 3350 00:0000 -  -  -  -  kReturn			equ 0DBh
 3351 00:0000 -  -  -  -  kStop			equ 0DCh
 3352 00:0000 -  -  -  -  kInput			equ 0DDh
 3353 00:0000 -  -  -  -  kPrompt			equ 0DEh
 3354 00:0000 -  -  -  -  kDisp			equ 0DFh
 3355 00:0000 -  -  -  -  kDispG			equ 0E0h
 3356 00:0000 -  -  -  -  kDispT			equ 0E1h
 3357 00:0000 -  -  -  -  kOutput			equ 0E2h
 3358 00:0000 -  -  -  -  kGetKey			equ 0E3h
 3359 00:0000 -  -  -  -  kClrHome		equ 0E4h
 3360 00:0000 -  -  -  -  kPrtScr			equ 0E5h
 3361 00:0000 -  -  -  -  kSinH			equ 0E6h
 3362 00:0000 -  -  -  -  kCosH			equ 0E7h
 3363 00:0000 -  -  -  -  kTanH			equ 0E8h
 3364 00:0000 -  -  -  -  kASinH			equ 0E9h
 3365 00:0000 -  -  -  -  kACosH			equ 0EAh
 3366 00:0000 -  -  -  -  kATanH			equ 0EBh
 3367 00:0000 -  -  -  -  kLBrace			equ 0ECh
 3368 00:0000 -  -  -  -  kRBrace			equ 0EDh
 3369 00:0000 -  -  -  -  kI			equ 0EEh
 3370 00:0000 -  -  -  -  kCONSTeA		equ 0EFh
 3371 00:0000 -  -  -  -  kPlot3			equ 0F0h
 3372 00:0000 -  -  -  -  kFMin			equ 0F1h
 3373 00:0000 -  -  -  -  kFMax			equ 0F2h
 3374 00:0000 -  -  -  -  kL1A			equ 0F3h
 3375 00:0000 -  -  -  -  kL2A			equ 0F4h
 3376 00:0000 -  -  -  -  kL3A			equ 0F5h
 3377 00:0000 -  -  -  -  kL4A			equ 0F6h
 3378 00:0000 -  -  -  -  kL5A			equ 0F7h
 3379 00:0000 -  -  -  -  kL6A			equ 0F8h
 3380 00:0000 -  -  -  -  kunA			equ 0F9h
 3381 00:0000 -  -  -  -  kvnA			equ 0FAh
 3382 00:0000 -  -  -  -  kwnA			equ 0FBh
 3383 00:0000 -  -  -  -  
 3384 00:0000 -  -  -  -  ;THIS KEY MEANS THAT IT IS A 2 BYTE KEYCODE
 3385 00:0000 -  -  -  -  ;THERE ARE 2 OF THESE KEYS; BE CAREFUL WITH USAGE
 3386 00:0000 -  -  -  -  ;------------------------------------------------
 3387 00:0000 -  -  -  -  kExtendEcho2		equ 0FCh
 3388 00:0000 -  -  -  -  
 3389 00:0000 -  -  -  -  ;THIS KEY MEANS THAT THE KEY PRESS IS ONE THAT ECHOS
 3390 00:0000 -  -  -  -  ;INTO A BUFFER, AND IT IS A 2 BYTE KEY CODE, GO LOOK AT
 3391 00:0000 -  -  -  -  ;(EXTECHO) FOR THE KEY VALUE 
 3392 00:0000 -  -  -  -  ;------------------------------------------------------
 3393 00:0000 -  -  -  -  kExtendEcho		equ 0FEh
 3394 00:0000 -  -  -  -  
 3395 00:0000 -  -  -  -  kE1BT			equ 0
 3396 00:0000 -  -  -  -  kDrawInv		equ kE1BT
 3397 00:0000 -  -  -  -  kDrawF			equ kE1BT+1
 3398 00:0000 -  -  -  -  kPixelOn		equ kE1BT+2
 3399 00:0000 -  -  -  -  kPixelOff		equ kE1BT+3
 3400 00:0000 -  -  -  -  kPxlTest		equ kE1BT+4
 3401 00:0000 -  -  -  -  kRCGDB			equ kE1BT+5
 3402 00:0000 -  -  -  -  kRCPic			equ kE1BT+6
 3403 00:0000 -  -  -  -  kSTGDB			equ kE1BT+7
 3404 00:0000 -  -  -  -  kSTPic			equ kE1BT+8
 3405 00:0000 -  -  -  -  kAbs			equ kE1BT+9
 3406 00:0000 -  -  -  -  kTEqu			equ kE1BT+10 ;==
 3407 00:0000 -  -  -  -  kTNoteQ			equ kE1BT+11 ;<>
 3408 00:0000 -  -  -  -  kTGT			equ kE1BT+12 ;>
 3409 00:0000 -  -  -  -  kTGTE			equ kE1BT+13 ;>=
 3410 00:0000 -  -  -  -  kTLT			equ kE1BT+14 ;<
 3411 00:0000 -  -  -  -  kTLTE			equ kE1BT+15 ;<=
 3412 00:0000 -  -  -  -  kAnd			equ kE1BT+16
 3413 00:0000 -  -  -  -  kOr			equ kE1BT+17
 3414 00:0000 -  -  -  -  kXor			equ kE1BT+18
 3415 00:0000 -  -  -  -  kNot			equ kE1BT+19
 3416 00:0000 -  -  -  -  kLR1			equ kE1BT+20
 3417 00:0000 -  -  -  -  kXRoot			equ kE1BT+21
 3418 00:0000 -  -  -  -  kCube			equ kE1BT+22
 3419 00:0000 -  -  -  -  kCbRt			equ kE1BT+23 ;Cube ROOT
 3420 00:0000 -  -  -  -  kToDec			equ kE1BT+24
 3421 00:0000 -  -  -  -  kCubicR			equ kE1BT+25
 3422 00:0000 -  -  -  -  kQuartR			equ kE1BT+26
 3423 00:0000 -  -  -  -  kPlot1			equ kE1BT+27
 3424 00:0000 -  -  -  -  kPlot2			equ kE1BT+28
 3425 00:0000 -  -  -  -  kRound			equ kE1BT+29
 3426 00:0000 -  -  -  -  kIPart			equ kE1BT+30
 3427 00:0000 -  -  -  -  kFPart			equ kE1BT+31
 3428 00:0000 -  -  -  -  kInt			equ kE1BT+32
 3429 00:0000 -  -  -  -  kRand			equ kE1BT+33
 3430 00:0000 -  -  -  -  kNPR			equ kE1BT+34
 3431 00:0000 -  -  -  -  kNCR			equ kE1BT+35
 3432 00:0000 -  -  -  -  kXFactorial		equ kE1BT+36
 3433 00:0000 -  -  -  -  kRad			equ kE1BT+37
 3434 00:0000 -  -  -  -  kDegr			equ kE1BT+38 ;DEGREES CONV
 3435 00:0000 -  -  -  -  kAPost			equ kE1BT+39
 3436 00:0000 -  -  -  -  kToDMS			equ kE1BT+40
 3437 00:0000 -  -  -  -  kRToPo			equ kE1BT+41 ;R
 3438 00:0000 -  -  -  -  kRToPr			equ kE1BT+42
 3439 00:0000 -  -  -  -  kPToRx			equ kE1BT+43
 3440 00:0000 -  -  -  -  kPToRy			equ kE1BT+44
 3441 00:0000 -  -  -  -  kRowSwap		equ kE1BT+45
 3442 00:0000 -  -  -  -  kRowPlus		equ kE1BT+46
 3443 00:0000 -  -  -  -  kTimRow			equ kE1BT+47
 3444 00:0000 -  -  -  -  kTRowP			equ kE1BT+48
 3445 00:0000 -  -  -  -  kSortA			equ kE1BT+49
 3446 00:0000 -  -  -  -  kSortD			equ kE1BT+50
 3447 00:0000 -  -  -  -  kSeq			equ kE1BT+51
 3448 00:0000 -  -  -  -  kMin			equ kE1BT+52
 3449 00:0000 -  -  -  -  kMax			equ kE1BT+53
 3450 00:0000 -  -  -  -  kMean			equ kE1BT+54
 3451 00:0000 -  -  -  -  kMedian			equ kE1BT+55
 3452 00:0000 -  -  -  -  kSum			equ kE1BT+56
 3453 00:0000 -  -  -  -  kProd			equ kE1BT+57
 3454 00:0000 -  -  -  -  kDet			equ kE1BT+58
 3455 00:0000 -  -  -  -  kTransp			equ kE1BT+59
 3456 00:0000 -  -  -  -  kDim			equ kE1BT+60
 3457 00:0000 -  -  -  -  kFill			equ kE1BT+61
 3458 00:0000 -  -  -  -  kIdent			equ kE1BT+62
 3459 00:0000 -  -  -  -  kRandm			equ kE1BT+63
 3460 00:0000 -  -  -  -  kAug			equ kE1BT+64
 3461 00:0000 -  -  -  -  kOneVar			equ kE1BT+65
 3462 00:0000 -  -  -  -  kTwoVar			equ kE1BT+66
 3463 00:0000 -  -  -  -  kLR			equ kE1BT+67
 3464 00:0000 -  -  -  -  kLRExp			equ kE1BT+68
 3465 00:0000 -  -  -  -  kLRLn			equ kE1BT+69
 3466 00:0000 -  -  -  -  kLRPwr			equ kE1BT+70
 3467 00:0000 -  -  -  -  kMedMed			equ kE1BT+71
 3468 00:0000 -  -  -  -  kQuad			equ kE1BT+72
 3469 00:0000 -  -  -  -  kClrLst			equ kE1BT+73
 3470 00:0000 -  -  -  -  kHist			equ kE1BT+74
 3471 00:0000 -  -  -  -  kxyLine			equ kE1BT+75
 3472 00:0000 -  -  -  -  kScatter		equ kE1BT+76
 3473 00:0000 -  -  -  -  kmRad			equ kE1BT+77
 3474 00:0000 -  -  -  -  kmDeg			equ kE1BT+78
 3475 00:0000 -  -  -  -  kmNormF			equ kE1BT+79
 3476 00:0000 -  -  -  -  kmSci			equ kE1BT+80
 3477 00:0000 -  -  -  -  kmEng			equ kE1BT+81
 3478 00:0000 -  -  -  -  kmFloat			equ kE1BT+82
 3479 00:0000 -  -  -  -  kFix			equ kE1BT+83
 3480 00:0000 -  -  -  -  kSplitOn		equ kE1BT+84
 3481 00:0000 -  -  -  -  kFullScreen		equ kE1BT+85
 3482 00:0000 -  -  -  -  kStndrd			equ kE1BT+86
 3483 00:0000 -  -  -  -  kParam			equ kE1BT+87
 3484 00:0000 -  -  -  -  kPolar			equ kE1BT+88
 3485 00:0000 -  -  -  -  kSeqG			equ kE1BT+89
 3486 00:0000 -  -  -  -  kAFillOn		equ kE1BT+90
 3487 00:0000 -  -  -  -  kAFillOff		equ kE1BT+91
 3488 00:0000 -  -  -  -  kACalcOn		equ kE1BT+92
 3489 00:0000 -  -  -  -  kACalcOff		equ kE1BT+93
 3490 00:0000 -  -  -  -  kFNOn			equ kE1BT+94
 3491 00:0000 -  -  -  -  kFNOff			equ kE1BT+95
 3492 00:0000 -  -  -  -  kPlotsOn		equ kE1BT+96
 3493 00:0000 -  -  -  -  kPlotsOff		equ kE1BT+97
 3494 00:0000 -  -  -  -  kPixelChg		equ kE1BT+98
 3495 00:0000 -  -  -  -  kSendMBL		equ kE1BT+99
 3496 00:0000 -  -  -  -  kRecvMBL		equ kE1BT+100
 3497 00:0000 -  -  -  -  kBoxPlot		equ kE1BT+101
 3498 00:0000 -  -  -  -  kBoxIcon		equ kE1BT+102
 3499 00:0000 -  -  -  -  kCrossIcon		equ kE1BT+103
 3500 00:0000 -  -  -  -  kDotIcon		equ kE1BT+104
 3501 00:0000 -  -  -  -  kE2BT			equ kE1BT+105
 3502 00:0000 -  -  -  -  kSeqential		equ kE2BT
 3503 00:0000 -  -  -  -  kSimulG			equ kE2BT+1
 3504 00:0000 -  -  -  -  kPolarG			equ kE2BT+2
 3505 00:0000 -  -  -  -  kRectG			equ kE2BT+3
 3506 00:0000 -  -  -  -  kCoordOn		equ kE2BT+4
 3507 00:0000 -  -  -  -  kCoordOff		equ kE2BT+5
 3508 00:0000 -  -  -  -  kDrawLine		equ kE2BT+6
 3509 00:0000 -  -  -  -  kDrawDot		equ kE2BT+7
 3510 00:0000 -  -  -  -  kAxisOn			equ kE2BT+8
 3511 00:0000 -  -  -  -  kAxisOff		equ kE2BT+9
 3512 00:0000 -  -  -  -  kGridOn			equ kE2BT+10
 3513 00:0000 -  -  -  -  kGridOff		equ kE2BT+11
 3514 00:0000 -  -  -  -  kLblOn			equ kE2BT+12
 3515 00:0000 -  -  -  -  kLblOff			equ kE2BT+13
 3516 00:0000 -  -  -  -  kL1			equ kE2BT+14
 3517 00:0000 -  -  -  -  kL2			equ kE2BT+15
 3518 00:0000 -  -  -  -  kL3			equ kE2BT+16
 3519 00:0000 -  -  -  -  kL4			equ kE2BT+17
 3520 00:0000 -  -  -  -  kL5			equ kE2BT+18
 3521 00:0000 -  -  -  -  kL6			equ kE2BT+19
 3522 00:0000 -  -  -  -  
 3523 00:0000 -  -  -  -  ;These keys are laid on top of existing keys to
 3524 00:0000 -  -  -  -  ;enable localization in the inferential stats editor.
 3525 00:0000 -  -  -  -  ;----------------------------------------------------
 3526 00:0000 -  -  -  -  kinfData		equ kL1
 3527 00:0000 -  -  -  -  kinfStats		equ kL1+1
 3528 00:0000 -  -  -  -  kinfYes			equ kL1+2
 3529 00:0000 -  -  -  -  kinfNo			equ kL1+3
 3530 00:0000 -  -  -  -  kinfCalc		equ kL1+4
 3531 00:0000 -  -  -  -  kinfDraw		equ kL1+5
 3532 00:0000 -  -  -  -  kinfAlt1ne		equ kL1+6
 3533 00:0000 -  -  -  -  kinfAlt1lt		equ kL1+7
 3534 00:0000 -  -  -  -  kinfAlt1gt		equ kL1+8
 3535 00:0000 -  -  -  -  kinfAlt2ne		equ kL1+9
 3536 00:0000 -  -  -  -  kinfAlt2lt		equ kL1+10
 3537 00:0000 -  -  -  -  kinfAlt2gt		equ kL1+11
 3538 00:0000 -  -  -  -  kinfAlt3ne		equ kL1+12
 3539 00:0000 -  -  -  -  kinfAlt3lt		equ kL1+13
 3540 00:0000 -  -  -  -  kinfAlt3gt		equ kL1+14
 3541 00:0000 -  -  -  -  kinfAlt4ne		equ kL1+15
 3542 00:0000 -  -  -  -  kinfAlt4lt		equ kL1+16
 3543 00:0000 -  -  -  -  kinfAlt4gt		equ kL1+17
 3544 00:0000 -  -  -  -  kinfAlt5ne		equ kL1+18
 3545 00:0000 -  -  -  -  kinfAlt5lt		equ kL1+19
 3546 00:0000 -  -  -  -  kinfAlt5gt		equ kL1+20
 3547 00:0000 -  -  -  -  kinfAlt6ne		equ kL1+21
 3548 00:0000 -  -  -  -  kinfAlt6lt		equ kL1+22
 3549 00:0000 -  -  -  -  kinfAlt6gt		equ kL1+23
 3550 00:0000 -  -  -  -  kMatA			equ kE2BT+20
 3551 00:0000 -  -  -  -  kMatB			equ kE2BT+21
 3552 00:0000 -  -  -  -  kMatC			equ kE2BT+22
 3553 00:0000 -  -  -  -  kMatD			equ kE2BT+23
 3554 00:0000 -  -  -  -  kMatE			equ kE2BT+24
 3555 00:0000 -  -  -  -  kXmin			equ kE2BT+25
 3556 00:0000 -  -  -  -  kXmax			equ kE2BT+26
 3557 00:0000 -  -  -  -  kXscl			equ kE2BT+27
 3558 00:0000 -  -  -  -  kYmin			equ kE2BT+28
 3559 00:0000 -  -  -  -  kYmax			equ kE2BT+29
 3560 00:0000 -  -  -  -  kYscl			equ kE2BT+30
 3561 00:0000 -  -  -  -  kTmin			equ kE2BT+31
 3562 00:0000 -  -  -  -  kTmax			equ kE2BT+32
 3563 00:0000 -  -  -  -  kTStep			equ kE2BT+33
 3564 00:0000 -  -  -  -  kOmin			equ kE2BT+34
 3565 00:0000 -  -  -  -  kOmax			equ kE2BT+35
 3566 00:0000 -  -  -  -  kOStep			equ kE2BT+36
 3567 00:0000 -  -  -  -  ku0			equ kE2BT+37
 3568 00:0000 -  -  -  -  kv0			equ kE2BT+38
 3569 00:0000 -  -  -  -  knMin			equ kE2BT+39
 3570 00:0000 -  -  -  -  knMax			equ kE2BT+40
 3571 00:0000 -  -  -  -  kDeltaY			equ kE2BT+41
 3572 00:0000 -  -  -  -  kDeltaX			equ kE2BT+42
 3573 00:0000 -  -  -  -  kZXmin			equ kE2BT+43
 3574 00:0000 -  -  -  -  kZXmax			equ kE2BT+44
 3575 00:0000 -  -  -  -  kZXscl			equ kE2BT+45
 3576 00:0000 -  -  -  -  kZYmin			equ kE2BT+46
 3577 00:0000 -  -  -  -  kZYmax			equ kE2BT+47
 3578 00:0000 -  -  -  -  kZYscl			equ kE2BT+48
 3579 00:0000 -  -  -  -  kZTmin			equ kE2BT+49
 3580 00:0000 -  -  -  -  kZTmax			equ kE2BT+50
 3581 00:0000 -  -  -  -  kZTStep			equ kE2BT+51
 3582 00:0000 -  -  -  -  kZOmin			equ kE2BT+52
 3583 00:0000 -  -  -  -  kZOmax			equ kE2BT+53
 3584 00:0000 -  -  -  -  kZOStep			equ kE2BT+54
 3585 00:0000 -  -  -  -  kZu0			equ kE2BT+55
 3586 00:0000 -  -  -  -  kZv0			equ kE2BT+56
 3587 00:0000 -  -  -  -  kZnMin			equ kE2BT+57
 3588 00:0000 -  -  -  -  kZnMax			equ kE2BT+58
 3589 00:0000 -  -  -  -  kDelLast		equ kE2BT+59
 3590 00:0000 -  -  -  -  kSinReg			equ kE2BT+60
 3591 00:0000 -  -  -  -  kConstE			equ kE2BT+61
 3592 00:0000 -  -  -  -  kPic1			equ kE2BT+62
 3593 00:0000 -  -  -  -  kPic2			equ kE2BT+63
 3594 00:0000 -  -  -  -  kPic3			equ kE2BT+64
 3595 00:0000 -  -  -  -  kDelVar			equ kE2BT+65
 3596 00:0000 -  -  -  -  kGetCalc		equ kE2BT+66
 3597 00:0000 -  -  -  -  kRealM			equ kE2BT+67
 3598 00:0000 -  -  -  -  kPolarM			equ kE2BT+68
 3599 00:0000 -  -  -  -  kRectM			equ kE2BT+69
 3600 00:0000 -  -  -  -  kuv			equ kE2BT+70 ;U vs V
 3601 00:0000 -  -  -  -  kvw			equ kE2BT+71 ;V vs W
 3602 00:0000 -  -  -  -  kuw			equ kE2BT+72 ;U vs W
 3603 00:0000 -  -  -  -  kFinPMTend		equ kE2BT+73
 3604 00:0000 -  -  -  -  kFinPMTbeg		equ kE2BT+74
 3605 00:0000 -  -  -  -  kGraphStyle		equ kE2BT+75
 3606 00:0000 -  -  -  -  kExprOn			equ kE2BT+76
 3607 00:0000 -  -  -  -  kExprOff		equ kE2BT+77
 3608 00:0000 -  -  -  -  kStatA			equ kE2BT+78
 3609 00:0000 -  -  -  -  kStatB			equ kE2BT+79
 3610 00:0000 -  -  -  -  kStatC			equ kE2BT+80
 3611 00:0000 -  -  -  -  kCorr			equ kE2BT+81
 3612 00:0000 -  -  -  -  kStatD			equ kE2BT+82
 3613 00:0000 -  -  -  -  kStatE			equ kE2BT+83
 3614 00:0000 -  -  -  -  kRegEq			equ kE2BT+84
 3615 00:0000 -  -  -  -  kMinX			equ kE2BT+85
 3616 00:0000 -  -  -  -  kQ1			equ kE2BT+86
 3617 00:0000 -  -  -  -  kMD			equ kE2BT+87
 3618 00:0000 -  -  -  -  kQ3			equ kE2BT+88
 3619 00:0000 -  -  -  -  kMaxX			equ kE2BT+89
 3620 00:0000 -  -  -  -  kStatX1			equ kE2BT+90
 3621 00:0000 -  -  -  -  kStatY1			equ kE2BT+91
 3622 00:0000 -  -  -  -  kStatX2			equ kE2BT+92
 3623 00:0000 -  -  -  -  kStatY2			equ kE2BT+93
 3624 00:0000 -  -  -  -  kStatX3			equ kE2BT+94
 3625 00:0000 -  -  -  -  kStatY3			equ kE2BT+95
 3626 00:0000 -  -  -  -  kTblMin			equ kE2BT+96
 3627 00:0000 -  -  -  -  kTblStep		equ kE2BT+97
 3628 00:0000 -  -  -  -  kSetupLst		equ kE2BT+98
 3629 00:0000 -  -  -  -  kClrAllLst		equ kE2BT+99
 3630 00:0000 -  -  -  -  kLogistic		equ kE2BT+100
 3631 00:0000 -  -  -  -  kZTest			equ kE2BT+101
 3632 00:0000 -  -  -  -  kTTest			equ kE2BT+102
 3633 00:0000 -  -  -  -  k2SampZTest		equ kE2BT+103
 3634 00:0000 -  -  -  -  k2SampTTest		equ kE2BT+104
 3635 00:0000 -  -  -  -  k1PropZTest		equ kE2BT+105
 3636 00:0000 -  -  -  -  k2PropZTest		equ kE2BT+106
 3637 00:0000 -  -  -  -  kChiTest		equ kE2BT+107
 3638 00:0000 -  -  -  -  k2SampFTest		equ kE2BT+108
 3639 00:0000 -  -  -  -  kZIntVal		equ kE2BT+109
 3640 00:0000 -  -  -  -  kTIntVal		equ kE2BT+110
 3641 00:0000 -  -  -  -  k2SampTInt		equ kE2BT+111
 3642 00:0000 -  -  -  -  k2SampZInt		equ kE2BT+112
 3643 00:0000 -  -  -  -  k1PropZInt		equ kE2BT+113
 3644 00:0000 -  -  -  -  k2PropZInt		equ kE2BT+114
 3645 00:0000 -  -  -  -  kDNormal		equ kE2BT+115
 3646 00:0000 -  -  -  -  kInvNorm		equ kE2BT+116
 3647 00:0000 -  -  -  -  kDT			equ kE2BT+117
 3648 00:0000 -  -  -  -  kChi			equ kE2BT+118
 3649 00:0000 -  -  -  -  kDF			equ kE2BT+119
 3650 00:0000 -  -  -  -  kBinPDF			equ kE2BT+120
 3651 00:0000 -  -  -  -  kBinCDF			equ kE2BT+121
 3652 00:0000 -  -  -  -  kPoiPDF			equ kE2BT+122
 3653 00:0000 -  -  -  -  kPoiCDF			equ kE2BT+123
 3654 00:0000 -  -  -  -  kun			equ kE2BT+124
 3655 00:0000 -  -  -  -  kvn			equ kE2BT+125
 3656 00:0000 -  -  -  -  kwn			equ kE2BT+126
 3657 00:0000 -  -  -  -  kRecn			equ kE2BT+127
 3658 00:0000 -  -  -  -  kPlotStart		equ kE2BT+128
 3659 00:0000 -  -  -  -  kZPlotStart		equ kE2BT+129 ;recursion n
 3660 00:0000 -  -  -  -  kXFact			equ kE2BT+130 ;PlotStart
 3661 00:0000 -  -  -  -  kYFact			equ kE2BT+131 ;ZPlotStart
 3662 00:0000 -  -  -  -  kANOVA			equ kE2BT+132 ;XFact
 3663 00:0000 -  -  -  -  kMaxY			equ kE2BT+133 ;YFact
 3664 00:0000 -  -  -  -  kWebOn			equ kE2BT+134 ;MinY
 3665 00:0000 -  -  -  -  kWebOff			equ kE2BT+135 ;MaxY
 3666 00:0000 -  -  -  -  kTblInput		equ kE2BT+136 ;WEB ON
 3667 00:0000 -  -  -  -  kGeoPDF			equ kE2BT+137 ;WEB OFF
 3668 00:0000 -  -  -  -  kGeoCDF			equ kE2BT+138 ;WEB OFF
 3669 00:0000 -  -  -  -  kShadeNorm		equ kE2BT+139
 3670 00:0000 -  -  -  -  kShadeT			equ kE2BT+140
 3671 00:0000 -  -  -  -  kShadeChi		equ kE2BT+141
 3672 00:0000 -  -  -  -  kShadeF			equ kE2BT+142
 3673 00:0000 -  -  -  -  kPlotStep		equ kE2BT+143
 3674 00:0000 -  -  -  -  kZPlotStep		equ kE2BT+144
 3675 00:0000 -  -  -  -  kLinRegtTest		equ kE2BT+145
 3676 00:0000 -  -  -  -  KMGT			equ kE2BT+146 ;VERT SPLIT
 3677 00:0000 -  -  -  -  kSelectA		equ kE2BT+147
 3678 00:0000 -  -  -  -  kZFitA			equ kE2BT+148
 3679 00:0000 -  -  -  -  kE2BT_End		equ kZFitA
 3680 00:0000 -  -  -  -  
 3681 00:0000 -  -  -  -  ;More 2 Byte Keys 
 3682 00:0000 -  -  -  -  ;------------------------------------
 3683 00:0000 -  -  -  -  kE2BT2			equ 0
 3684 00:0000 -  -  -  -  kGDB1			equ kE2BT2
 3685 00:0000 -  -  -  -  kGDB2			equ kE2BT2+1
 3686 00:0000 -  -  -  -  kGDB3			equ kE2BT2+2
 3687 00:0000 -  -  -  -  kY1			equ kE2BT2+3
 3688 00:0000 -  -  -  -  kY2			equ kE2BT2+4
 3689 00:0000 -  -  -  -  kY3			equ kE2BT2+5
 3690 00:0000 -  -  -  -  kY4			equ kE2BT2+6
 3691 00:0000 -  -  -  -  kY5			equ kE2BT2+7
 3692 00:0000 -  -  -  -  kY6			equ kE2BT2+8
 3693 00:0000 -  -  -  -  kY7			equ kE2BT2+9
 3694 00:0000 -  -  -  -  kY8			equ kE2BT2+10
 3695 00:0000 -  -  -  -  kY9			equ kE2BT2+11
 3696 00:0000 -  -  -  -  kY0			equ kE2BT2+12
 3697 00:0000 -  -  -  -  kX1T			equ kE2BT2+13
 3698 00:0000 -  -  -  -  kY1T			equ kE2BT2+14
 3699 00:0000 -  -  -  -  kX2T			equ kE2BT2+15
 3700 00:0000 -  -  -  -  kY2T			equ kE2BT2+16
 3701 00:0000 -  -  -  -  kX3T			equ kE2BT2+17
 3702 00:0000 -  -  -  -  kY3T			equ kE2BT2+18
 3703 00:0000 -  -  -  -  kX4T			equ kE2BT2+19
 3704 00:0000 -  -  -  -  kY4T			equ kE2BT2+20
 3705 00:0000 -  -  -  -  kX5T			equ kE2BT2+21
 3706 00:0000 -  -  -  -  kY5T			equ kE2BT2+22
 3707 00:0000 -  -  -  -  kX6T			equ kE2BT2+23
 3708 00:0000 -  -  -  -  kY6T			equ kE2BT2+24
 3709 00:0000 -  -  -  -  kR1			equ kE2BT2+25
 3710 00:0000 -  -  -  -  kR2			equ kE2BT2+26
 3711 00:0000 -  -  -  -  kR3			equ kE2BT2+27
 3712 00:0000 -  -  -  -  kR4			equ kE2BT2+28
 3713 00:0000 -  -  -  -  kR5			equ kE2BT2+29
 3714 00:0000 -  -  -  -  kR6			equ kE2BT2+30
 3715 00:0000 -  -  -  -  kGDB4			equ kE2BT2+31
 3716 00:0000 -  -  -  -  kGDB5			equ kE2BT2+32
 3717 00:0000 -  -  -  -  kGDB6			equ kE2BT2+33
 3718 00:0000 -  -  -  -  kPic4			equ kE2BT2+34
 3719 00:0000 -  -  -  -  kPic5			equ kE2BT2+35
 3720 00:0000 -  -  -  -  kPic6			equ kE2BT2+36
 3721 00:0000 -  -  -  -  kGDB7			equ kE2BT2+37
 3722 00:0000 -  -  -  -  kGDB8			equ kE2BT2+38
 3723 00:0000 -  -  -  -  kGDB9			equ kE2BT2+39
 3724 00:0000 -  -  -  -  kGDB0			equ kE2BT2+40
 3725 00:0000 -  -  -  -  kPic7			equ kE2BT2+41
 3726 00:0000 -  -  -  -  kPic8			equ kE2BT2+42
 3727 00:0000 -  -  -  -  kPic9			equ kE2BT2+43
 3728 00:0000 -  -  -  -  kPic0			equ kE2BT2+44
 3729 00:0000 -  -  -  -  kStatN			equ kE2BT2+45
 3730 00:0000 -  -  -  -  kXMean			equ kE2BT2+46
 3731 00:0000 -  -  -  -  kConj			equ kE2BT2+47
 3732 00:0000 -  -  -  -  kReal			equ kE2BT2+48
 3733 00:0000 -  -  -  -  kFAngle			equ kE2BT2+49
 3734 00:0000 -  -  -  -  kLCM			equ kE2BT2+50
 3735 00:0000 -  -  -  -  kGCD			equ kE2BT2+51
 3736 00:0000 -  -  -  -  kRandInt		equ kE2BT2+52
 3737 00:0000 -  -  -  -  kRandNorm		equ kE2BT2+53
 3738 00:0000 -  -  -  -  kToPolar		equ kE2BT2+54
 3739 00:0000 -  -  -  -  kToRect			equ kE2BT2+55
 3740 00:0000 -  -  -  -  kYMean			equ kE2BT2+56
 3741 00:0000 -  -  -  -  kStdX			equ kE2BT2+57
 3742 00:0000 -  -  -  -  kStdX1			equ kE2BT2+58
 3743 00:0000 -  -  -  -  kw0			equ kE2BT2+59
 3744 00:0000 -  -  -  -  kMatF			equ kE2BT2+60
 3745 00:0000 -  -  -  -  kMatG			equ kE2BT2+61
 3746 00:0000 -  -  -  -  kMatRH			equ kE2BT2+62
 3747 00:0000 -  -  -  -  kMatI			equ kE2BT2+63
 3748 00:0000 -  -  -  -  kMatJ			equ kE2BT2+64
 3749 00:0000 -  -  -  -  kYMean1			equ kE2BT2+65
 3750 00:0000 -  -  -  -  kStdY			equ kE2BT2+66
 3751 00:0000 -  -  -  -  kStdY1			equ kE2BT2+67
 3752 00:0000 -  -  -  -  kMatToLst		equ kE2BT2+68
 3753 00:0000 -  -  -  -  kLstToMat		equ kE2BT2+69
 3754 00:0000 -  -  -  -  kCumSum			equ kE2BT2+70
 3755 00:0000 -  -  -  -  kDeltaLst		equ kE2BT2+71
 3756 00:0000 -  -  -  -  kStdDev			equ kE2BT2+72
 3757 00:0000 -  -  -  -  kVariance		equ kE2BT2+73
 3758 00:0000 -  -  -  -  kLength			equ kE2BT2+74
 3759 00:0000 -  -  -  -  kEquToStrng		equ kE2BT2+75
 3760 00:0000 -  -  -  -  kStrngToEqu		equ kE2BT2+76
 3761 00:0000 -  -  -  -  kExpr			equ kE2BT2+77
 3762 00:0000 -  -  -  -  kSubStrng		equ kE2BT2+78
 3763 00:0000 -  -  -  -  kInStrng		equ kE2BT2+79
 3764 00:0000 -  -  -  -  kStr1			equ kE2BT2+80
 3765 00:0000 -  -  -  -  kStr2			equ kE2BT2+81
 3766 00:0000 -  -  -  -  kStr3			equ kE2BT2+82
 3767 00:0000 -  -  -  -  kStr4           	equ kE2BT2+83
 3768 00:0000 -  -  -  -  kStr5           	equ kE2BT2+84
 3769 00:0000 -  -  -  -  kStr6           	equ kE2BT2+85
 3770 00:0000 -  -  -  -  kStr7           	equ kE2BT2+86
 3771 00:0000 -  -  -  -  kStr8           	equ kE2BT2+87
 3772 00:0000 -  -  -  -  kStr9           	equ kE2BT2+88
 3773 00:0000 -  -  -  -  kStr0           	equ kE2BT2+89
 3774 00:0000 -  -  -  -  kFinN           	equ kE2BT2+90
 3775 00:0000 -  -  -  -  kFinI           	equ kE2BT2+91
 3776 00:0000 -  -  -  -  kFinPV          	equ kE2BT2+92
 3777 00:0000 -  -  -  -  kFinPMT         	equ kE2BT2+93
 3778 00:0000 -  -  -  -  kFinFV          	equ kE2BT2+94
 3779 00:0000 -  -  -  -  kFinPY          	equ kE2BT2+95
 3780 00:0000 -  -  -  -  kFinCY          	equ kE2BT2+96
 3781 00:0000 -  -  -  -  kFinFPMT        	equ kE2BT2+97
 3782 00:0000 -  -  -  -  kFinFI          	equ kE2BT2+98
 3783 00:0000 -  -  -  -  kFinFPV         	equ kE2BT2+99
 3784 00:0000 -  -  -  -  kFinFN          	equ kE2BT2+100
 3785 00:0000 -  -  -  -  kFinFFV         	equ kE2BT2+101
 3786 00:0000 -  -  -  -  kFinNPV         	equ kE2BT2+102
 3787 00:0000 -  -  -  -  kFinIRR         	equ kE2BT2+103
 3788 00:0000 -  -  -  -  kFinBAL         	equ kE2BT2+104
 3789 00:0000 -  -  -  -  kFinPRN         	equ kE2BT2+105
 3790 00:0000 -  -  -  -  kFinINT         	equ kE2BT2+106
 3791 00:0000 -  -  -  -  kSumX           	equ kE2BT2+107
 3792 00:0000 -  -  -  -  kSumX2          	equ kE2BT2+108
 3793 00:0000 -  -  -  -  kFinToNom       	equ kE2BT2+109
 3794 00:0000 -  -  -  -  kFinToEff       	equ kE2BT2+110
 3795 00:0000 -  -  -  -  kFinDBD         	equ kE2BT2+111
 3796 00:0000 -  -  -  -  kStatVP         	equ kE2BT2+112
 3797 00:0000 -  -  -  -  kStatZ          	equ kE2BT2+113
 3798 00:0000 -  -  -  -  kStatT          	equ kE2BT2+114
 3799 00:0000 -  -  -  -  kStatChi        	equ kE2BT2+115
 3800 00:0000 -  -  -  -  kStatF          	equ kE2BT2+116
 3801 00:0000 -  -  -  -  kStatDF         	equ kE2BT2+117
 3802 00:0000 -  -  -  -  kStatPhat       	equ kE2BT2+118
 3803 00:0000 -  -  -  -  kStatPhat1      	equ kE2BT2+119
 3804 00:0000 -  -  -  -  kStatPhat2      	equ kE2BT2+120
 3805 00:0000 -  -  -  -  kStatMeanX1     	equ kE2BT2+121
 3806 00:0000 -  -  -  -  kStatMeanX2     	equ kE2BT2+122
 3807 00:0000 -  -  -  -  kStatStdX1      	equ kE2BT2+123
 3808 00:0000 -  -  -  -  kStatStdX2      	equ kE2BT2+124
 3809 00:0000 -  -  -  -  kStatStdXP		equ kE2BT2+125
 3810 00:0000 -  -  -  -  kStatN1			equ kE2BT2+126
 3811 00:0000 -  -  -  -  kStatN2			equ kE2BT2+127
 3812 00:0000 -  -  -  -  kStatLower		equ kE2BT2+128
 3813 00:0000 -  -  -  -  kStatUpper		equ kE2BT2+129
 3814 00:0000 -  -  -  -  kuw0			equ kE2BT2+130
 3815 00:0000 -  -  -  -  kImag			equ kE2BT2+131
 3816 00:0000 -  -  -  -  kSumY			equ kE2BT2+132
 3817 00:0000 -  -  -  -  kXres			equ kE2BT2+133
 3818 00:0000 -  -  -  -  kStat_s			equ kE2BT2+134
 3819 00:0000 -  -  -  -  kSumY2			equ kE2BT2+135
 3820 00:0000 -  -  -  -  kSumXY			equ kE2BT2+136
 3821 00:0000 -  -  -  -  kuXres			equ kE2BT2+137
 3822 00:0000 -  -  -  -  kModBox			equ kE2BT2+138
 3823 00:0000 -  -  -  -  kNormProb		equ kE2BT2+139
 3824 00:0000 -  -  -  -  kNormalPDF		equ kE2BT2+140
 3825 00:0000 -  -  -  -  kTPDF			equ kE2BT2+141
 3826 00:0000 -  -  -  -  kChiPDF			equ kE2BT2+142
 3827 00:0000 -  -  -  -  kFPDF			equ kE2BT2+143
 3828 00:0000 -  -  -  -  kMinY			equ kE2BT2+144 ;MinY
 3829 00:0000 -  -  -  -  kRandBin		equ kE2BT2+145
 3830 00:0000 -  -  -  -  kRef			equ kE2BT2+146
 3831 00:0000 -  -  -  -  kRRef			equ kE2BT2+147
 3832 00:0000 -  -  -  -  kLRSqr			equ kE2BT2+148
 3833 00:0000 -  -  -  -  kBRSqr			equ kE2BT2+149
 3834 00:0000 -  -  -  -  kDiagOn			equ kE2BT2+150
 3835 00:0000 -  -  -  -  kDiagOff		equ kE2BT2+151
 3836 00:0000 -  -  -  -  kun1			equ kE2BT2+152 ;FOR RCL USE WHEN GOTTEN FROM 82
 3837 00:0000 -  -  -  -  kvn1			equ kE2BT2+153 ;FOR RCL USE WHEN GOTTEN FROM 82
 3838 00:0000 -  -  -  -  k83_00End		equ kvn1 ;end of original keys...
 3839 00:0000 -  -  -  -  kArchive		equ k83_00End + 1
 3840 00:0000 -  -  -  -  kUnarchive		equ k83_00End + 2
 3841 00:0000 -  -  -  -  kAsm			equ k83_00End + 3 ;Asm(
 3842 00:0000 -  -  -  -  kAsmPrgm		equ k83_00End + 4 ;AsmPrgm
 3843 00:0000 -  -  -  -  kAsmComp		equ k83_00End + 5 ;AsmComp(
 3844 00:0000 -  -  -  -  kcapAAcute		equ k83_00End + 6
 3845 00:0000 -  -  -  -  kcapAGrave		equ k83_00End + 7
 3846 00:0000 -  -  -  -  kcapACaret		equ k83_00End + 8
 3847 00:0000 -  -  -  -  kcapADier		equ k83_00End + 9
 3848 00:0000 -  -  -  -  kaAcute			equ k83_00End + 10
 3849 00:0000 -  -  -  -  kaGrave			equ k83_00End + 11
 3850 00:0000 -  -  -  -  kaCaret			equ k83_00End + 12
 3851 00:0000 -  -  -  -  kaDier			equ k83_00End + 13
 3852 00:0000 -  -  -  -  kcapEAcute		equ k83_00End + 14
 3853 00:0000 -  -  -  -  kcapEGrave		equ k83_00End + 15
 3854 00:0000 -  -  -  -  kcapECaret		equ k83_00End + 16
 3855 00:0000 -  -  -  -  kcapEDier		equ k83_00End + 17
 3856 00:0000 -  -  -  -  keAcute			equ k83_00End + 18
 3857 00:0000 -  -  -  -  keGrave			equ k83_00End + 19
 3858 00:0000 -  -  -  -  keCaret			equ k83_00End + 20
 3859 00:0000 -  -  -  -  keDier			equ k83_00End + 21
 3860 00:0000 -  -  -  -  kcapIAcute		equ k83_00End + 22
 3861 00:0000 -  -  -  -  kcapIGrave		equ k83_00End + 23
 3862 00:0000 -  -  -  -  kcapICaret		equ k83_00End + 24
 3863 00:0000 -  -  -  -  kcapIDier		equ k83_00End + 25
 3864 00:0000 -  -  -  -  kiAcute			equ k83_00End + 26
 3865 00:0000 -  -  -  -  kiGrave			equ k83_00End + 27
 3866 00:0000 -  -  -  -  kiCaret			equ k83_00End + 28
 3867 00:0000 -  -  -  -  kiDier			equ k83_00End + 29
 3868 00:0000 -  -  -  -  kcapOAcute		equ k83_00End + 30
 3869 00:0000 -  -  -  -  kcapOGrave		equ k83_00End + 31
 3870 00:0000 -  -  -  -  kcapOCaret		equ k83_00End + 32
 3871 00:0000 -  -  -  -  kcapODier		equ k83_00End + 33
 3872 00:0000 -  -  -  -  koAcute			equ k83_00End + 34
 3873 00:0000 -  -  -  -  koGrave			equ k83_00End + 35
 3874 00:0000 -  -  -  -  koCaret			equ k83_00End + 36
 3875 00:0000 -  -  -  -  koDier			equ k83_00End + 37
 3876 00:0000 -  -  -  -  kcapUAcute		equ k83_00End + 38
 3877 00:0000 -  -  -  -  kcapUGrave		equ k83_00End + 39
 3878 00:0000 -  -  -  -  kcapUCaret		equ k83_00End + 40
 3879 00:0000 -  -  -  -  kcapUDier		equ k83_00End + 41
 3880 00:0000 -  -  -  -  kuAcute			equ k83_00End + 42
 3881 00:0000 -  -  -  -  kuGrave			equ k83_00End + 43
 3882 00:0000 -  -  -  -  kuCaret			equ k83_00End + 44
 3883 00:0000 -  -  -  -  kuDier			equ k83_00End + 45
 3884 00:0000 -  -  -  -  kcapCCed		equ k83_00End + 46
 3885 00:0000 -  -  -  -  kcCed			equ k83_00End + 47
 3886 00:0000 -  -  -  -  kcapNTilde		equ k83_00End + 48
 3887 00:0000 -  -  -  -  knTilde			equ k83_00End + 49
 3888 00:0000 -  -  -  -  kaccent			equ k83_00End + 50
 3889 00:0000 -  -  -  -  kgrave			equ k83_00End + 51
 3890 00:0000 -  -  -  -  kdieresis		equ k83_00End + 52
 3891 00:0000 -  -  -  -  kquesDown		equ k83_00End + 53
 3892 00:0000 -  -  -  -  kexclamDown     	equ k83_00End + 54
 3893 00:0000 -  -  -  -  kalpha          	equ k83_00End + 55
 3894 00:0000 -  -  -  -  kbeta           	equ k83_00End + 56
 3895 00:0000 -  -  -  -  kgamma          	equ k83_00End + 57
 3896 00:0000 -  -  -  -  kcapDelta		equ k83_00End + 58
 3897 00:0000 -  -  -  -  kdelta			equ k83_00End + 59
 3898 00:0000 -  -  -  -  kepsilon		equ k83_00End + 60
 3899 00:0000 -  -  -  -  klambda			equ k83_00End + 61
 3900 00:0000 -  -  -  -  kmu			equ k83_00End + 62
 3901 00:0000 -  -  -  -  kpi2			equ k83_00End + 63
 3902 00:0000 -  -  -  -  krho			equ k83_00End + 64
 3903 00:0000 -  -  -  -  kcapSigma		equ k83_00End + 65
 3904 00:0000 -  -  -  -  ksigma			equ k83_00End + 66
 3905 00:0000 -  -  -  -  ktau			equ k83_00End + 67
 3906 00:0000 -  -  -  -  kphi			equ k83_00End + 68
 3907 00:0000 -  -  -  -  kcapOmega		equ k83_00End + 69
 3908 00:0000 -  -  -  -  kphat			equ k83_00End + 70
 3909 00:0000 -  -  -  -  kchi2			equ k83_00End + 71
 3910 00:0000 -  -  -  -  kstatF2			equ k83_00End + 72
 3911 00:0000 -  -  -  -  kLa			equ k83_00End + 73
 3912 00:0000 -  -  -  -  kLb			equ k83_00End + 74
 3913 00:0000 -  -  -  -  kLc			equ k83_00End + 75
 3914 00:0000 -  -  -  -  kLd			equ k83_00End + 76
 3915 00:0000 -  -  -  -  kLe			equ k83_00End + 77
 3916 00:0000 -  -  -  -  kLf			equ k83_00End + 78
 3917 00:0000 -  -  -  -  kLg			equ k83_00End + 79
 3918 00:0000 -  -  -  -  kLh			equ k83_00End + 80
 3919 00:0000 -  -  -  -  kLi			equ k83_00End + 81
 3920 00:0000 -  -  -  -  kLj			equ k83_00End + 82
 3921 00:0000 -  -  -  -  kLk			equ k83_00End + 83
 3922 00:0000 -  -  -  -  kLl			equ k83_00End + 84
 3923 00:0000 -  -  -  -  kLm			equ k83_00End + 85
 3924 00:0000 -  -  -  -  kLsmalln		equ k83_00End + 86
 3925 00:0000 -  -  -  -  kLo			equ k83_00End + 87
 3926 00:0000 -  -  -  -  kLp			equ k83_00End + 88
 3927 00:0000 -  -  -  -  kLq			equ k83_00End + 89
 3928 00:0000 -  -  -  -  kLsmallr		equ k83_00End + 90
 3929 00:0000 -  -  -  -  kLs			equ k83_00End + 91
 3930 00:0000 -  -  -  -  kLt			equ k83_00End + 92
 3931 00:0000 -  -  -  -  kLu			equ k83_00End + 93
 3932 00:0000 -  -  -  -  kLv			equ k83_00End + 94
 3933 00:0000 -  -  -  -  kLw			equ k83_00End + 95
 3934 00:0000 -  -  -  -  kLx			equ k83_00End + 96
 3935 00:0000 -  -  -  -  kLy			equ k83_00End + 97
 3936 00:0000 -  -  -  -  kLz			equ k83_00End + 98
 3937 00:0000 -  -  -  -  kGarbageC		equ k83_00End + 99 ;GarbageCollect
 3938 00:0000 -  -  -  -  kE2BT2_End		equ kGarbageC
 3939 00:0000 -  -  -  -  
 3940 00:0000 -  -  -  -  ;TI-83 Plus Context Equates
 3941 00:0000 -  -  -  -  ;---------------------------------------------
 3942 00:0000 -  -  -  -  cxCmd			equ kQuit ;home screen
 3943 00:0000 -  -  -  -  cxMatEdit		equ kMatrixEd ;matrix editor
 3944 00:0000 -  -  -  -  cxPrgmEdit		equ kPrgmEd ;program editor
 3945 00:0000 -  -  -  -  cxEquEdit		equ kYequ ;equation editor
 3946 00:0000 -  -  -  -  cxGrRange		equ kWindow ;graph range editor
 3947 00:0000 -  -  -  -  cxGrZfact		equ kZFactEd ;graph zoom factors editor
 3948 00:0000 -  -  -  -  cxGraph			equ kGraph ;graph mode
 3949 00:0000 -  -  -  -  cxStatEdit		equ kStatEd ;statistics list editor
 3950 00:0000 -  -  -  -  cxPrgmInput		equ kPrgmInput ;programmed input
 3951 00:0000 -  -  -  -  cxError			equ kError ;error handler
 3952 00:0000 -  -  -  -  cxLinkIO		equ kLinkIO ;LINK I/O interface
 3953 00:0000 -  -  -  -  cxMem			equ kResetMem ;reset memory
 3954 00:0000 -  -  -  -  cxDefMem		equ kResetDef ;reset default
 3955 00:0000 -  -  -  -  cxRAMApp		equ kChkRAM ;RAM usage screen
 3956 00:0000 -  -  -  -  cxMode			equ kMode ;mode settings screen
 3957 00:0000 -  -  -  -  cxErase			equ kDelMem ;memory erase
 3958 00:0000 -  -  -  -  cxPrgmCreate		equ kPrgmCr ;PROGRAM CREATE
 3959 00:0000 -  -  -  -  cxTableEditor		equ kTable ;TABLE EDITOR
 3960 00:0000 -  -  -  -  cxTableSet		equ kTblSet ;TABLE SET UP
 3961 00:0000 -  -  -  -  cxStatPlot		equ kStatP ;STAT PLOTS
 3962 00:0000 -  -  -  -  cxInfStat		equ kInfStat ;Inferential Statistic
 3963 00:0000 -  -  -  -  cxFormat		equ kFormat ;FORMAT CONTEXT
 3964 00:0000 -  -  -  -  cxSolveTVM		equ kSolveTVM ;Solve TVM
 3965 00:0000 -  -  -  -  cxSolveRoot		equ kSolveRoot ;Solve Root
 3966 00:0000 -  -  -  -  lastOldApp		equ kExtApps ;external applications
 3967 00:0000 -  -  -  -  cxextapps		equ kExtApps
 3968 00:0000 -  -  -  -  cxNewApps		equ kNewApps ;new cerberus applications
 3969 00:0000 -  -  -  -  cxGroup			equ cxNewApps+0 ;1st new app.
 3970 00:0000 -  -  -  -  cxUnGroup		equ cxNewApps+1 ;2nd new app.
 3971 00:0000 -  -  -  -  lastNewApp		equ cxUnGroup ;last new app for this ver
 3972 00:0000 -  -  -  -  
 3973 00:0000 -  -  -  -  ;Scan Code Equates
 3974 00:0000 -  -  -  -  ;-------------------------------
 3975 00:0000 -  -  -  -  skDown			equ 01h
 3976 00:0000 -  -  -  -  skLeft			equ 02h
 3977 00:0000 -  -  -  -  skRight			equ 03h
 3978 00:0000 -  -  -  -  skUp			equ 04h
 3979 00:0000 -  -  -  -  skEnter			equ 09h
 3980 00:0000 -  -  -  -  skAdd			equ 0Ah
 3981 00:0000 -  -  -  -  skSub			equ 0Bh
 3982 00:0000 -  -  -  -  skMul			equ 0Ch
 3983 00:0000 -  -  -  -  skDiv			equ 0Dh
 3984 00:0000 -  -  -  -  skPower			equ 0Eh
 3985 00:0000 -  -  -  -  skClear			equ 0Fh
 3986 00:0000 -  -  -  -  skChs			equ 11h
 3987 00:0000 -  -  -  -  sk3			equ 12h
 3988 00:0000 -  -  -  -  sk6			equ 13h
 3989 00:0000 -  -  -  -  sk9			equ 14h
 3990 00:0000 -  -  -  -  skRParen		equ 15h
 3991 00:0000 -  -  -  -  skTan			equ 16h
 3992 00:0000 -  -  -  -  skVars			equ 17h
 3993 00:0000 -  -  -  -  skDecPnt		equ 19h
 3994 00:0000 -  -  -  -  sk2			equ 1Ah
 3995 00:0000 -  -  -  -  sk5			equ 1Bh
 3996 00:0000 -  -  -  -  sk8			equ 1Ch
 3997 00:0000 -  -  -  -  skLParen		equ 1Dh
 3998 00:0000 -  -  -  -  skCos			equ 1Eh
 3999 00:0000 -  -  -  -  skPrgm			equ 1Fh
 4000 00:0000 -  -  -  -  skStat			equ 20h
 4001 00:0000 -  -  -  -  sk0			equ 21h
 4002 00:0000 -  -  -  -  sk1			equ 22h
 4003 00:0000 -  -  -  -  sk4			equ 23h
 4004 00:0000 -  -  -  -  sk7			equ 24h
 4005 00:0000 -  -  -  -  skComma			equ 25h
 4006 00:0000 -  -  -  -  skSin			equ 26h
 4007 00:0000 -  -  -  -  skMatrix		equ 27h
 4008 00:0000 -  -  -  -  skGraphvar		equ 28h
 4009 00:0000 -  -  -  -  skStore			equ 2Ah
 4010 00:0000 -  -  -  -  skLn			equ 2Bh
 4011 00:0000 -  -  -  -  skLog			equ 2Ch
 4012 00:0000 -  -  -  -  skSquare		equ 2Dh
 4013 00:0000 -  -  -  -  skRecip			equ 2Eh
 4014 00:0000 -  -  -  -  skMath			equ 2Fh
 4015 00:0000 -  -  -  -  skAlpha			equ 30h
 4016 00:0000 -  -  -  -  skGraph			equ 31h
 4017 00:0000 -  -  -  -  skTrace			equ 32h
 4018 00:0000 -  -  -  -  skZoom			equ 33h
 4019 00:0000 -  -  -  -  skWindow		equ 34h
 4020 00:0000 -  -  -  -  skYEqu			equ 35h
 4021 00:0000 -  -  -  -  sk2nd			equ 36h
 4022 00:0000 -  -  -  -  skMode			equ 37h
 4023 00:0000 -  -  -  -  skDel			equ 38h
 4024 00:0000 -  -  -  -  
 4025 00:0000 -  -  -  -  ;Tokens
 4026 00:0000 -  -  -  -  ;----------------------------------------------------
 4027 00:0000 -  -  -  -  EOSSTART		equ 0
 4028 00:0000 -  -  -  -  
 4029 00:0000 -  -  -  -  ;DISPLAY CONVERSIONS COME IMMEDIATELY BEFORE 'TSTORE'
 4030 00:0000 -  -  -  -  ;
 4031 00:0000 -  -  -  -  DCONV			equ 01h
 4032 00:0000 -  -  -  -  ;
 4033 00:0000 -  -  -  -  tToDMS			equ DCONV ;01h
 4034 00:0000 -  -  -  -  tToDEC			equ DCONV+1 ;02h
 4035 00:0000 -  -  -  -  tToAbc			equ DCONV+2 ;03h > A b/c
 4036 00:0000 -  -  -  -  ;
 4037 00:0000 -  -  -  -  tStore			equ DCONV+3 ;04h Lstore 01
 4038 00:0000 -  -  -  -  ;
 4039 00:0000 -  -  -  -  tBoxPlot		equ 05h
 4040 00:0000 -  -  -  -  ;
 4041 00:0000 -  -  -  -  BRACKS			equ 06h
 4042 00:0000 -  -  -  -  ;
 4043 00:0000 -  -  -  -  tLBrack			equ BRACKS ;06h '['
 4044 00:0000 -  -  -  -  tRBrack			equ BRACKS+1 ;07h ']'
 4045 00:0000 -  -  -  -  tLBrace			equ BRACKS+2 ;08h '{'
 4046 00:0000 -  -  -  -  tRBrace			equ BRACKS+3 ;09h '}'
 4047 00:0000 -  -  -  -  ;
 4048 00:0000 -  -  -  -  tPOST1			equ BRACKS+4
 4049 00:0000 -  -  -  -  ;
 4050 00:0000 -  -  -  -  tFromRad		equ tPOST1 ;0Ah Lradian
 4051 00:0000 -  -  -  -  tFromDeg		equ tPOST1+1 ;0Bh Ldegree
 4052 00:0000 -  -  -  -  tRecip			equ tPOST1+2 ;0Ch Linverse
 4053 00:0000 -  -  -  -  tSqr			equ tPOST1+3 ;0Dh Lsquare
 4054 00:0000 -  -  -  -  tTrnspos		equ tPOST1+4 ;0Eh Ltranspose
 4055 00:0000 -  -  -  -  tCube			equ tPOST1+5 ;0Fh '^3'
 4056 00:0000 -  -  -  -  ;
 4057 00:0000 -  -  -  -  tLParen			equ 10h ;10h '('
 4058 00:0000 -  -  -  -  tRParen			equ 11h ;11h ')'
 4059 00:0000 -  -  -  -  ;
 4060 00:0000 -  -  -  -  IMUN			equ 12h
 4061 00:0000 -  -  -  -  ;
 4062 00:0000 -  -  -  -  tRound			equ IMUN ;12h 'round'
 4063 00:0000 -  -  -  -  tPxTst			equ IMUN+1 ;13h 'PXL-TEST'
 4064 00:0000 -  -  -  -  tAug			equ IMUN+2 ;14h 'aug'
 4065 00:0000 -  -  -  -  tRowSwap		equ IMUN+3 ;15h 'rSwap'
 4066 00:0000 -  -  -  -  tRowPlus		equ IMUN+4 ;16h 'rAdd'
 4067 00:0000 -  -  -  -  tmRow			equ IMUN+5 ;17h 'multR'
 4068 00:0000 -  -  -  -  tmRowPlus		equ IMUN+6 ;18h 'mRAdd'
 4069 00:0000 -  -  -  -  tMax			equ IMUN+7 ;19h 'max'
 4070 00:0000 -  -  -  -  tMin			equ IMUN+8 ;1Ah 'min'
 4071 00:0000 -  -  -  -  tRToPr			equ IMUN+9 ;1Bh 'R>Pr
 4072 00:0000 -  -  -  -  tRToPo			equ IMUN+10 ;1Ch 'R>Po
 4073 00:0000 -  -  -  -  tPToRx			equ IMUN+11 ;1Dh 'P>Rx
 4074 00:0000 -  -  -  -  tPToRy			equ IMUN+12 ;1Eh 'P>Ry
 4075 00:0000 -  -  -  -  tMedian			equ IMUN+13 ;1Fh 'MEDIAN
 4076 00:0000 -  -  -  -  tRandM			equ IMUN+14 ;20h 'randM'
 4077 00:0000 -  -  -  -  tMean			equ IMUN+15 ;21h
 4078 00:0000 -  -  -  -  tRoot			equ IMUN+16 ;22h 'ROOT'
 4079 00:0000 -  -  -  -  tSeries			equ IMUN+17 ;23h 'seq'
 4080 00:0000 -  -  -  -  tFnInt			equ IMUN+18 ;24h 'fnInt'
 4081 00:0000 -  -  -  -  tNDeriv			equ IMUN+19 ;25h 'fnIr'
 4082 00:0000 -  -  -  -  tEvalF			equ IMUN+20 ;26h
 4083 00:0000 -  -  -  -  tFmin			equ IMUN+21 ;27h
 4084 00:0000 -  -  -  -  tFmax			equ IMUN+22 ;28h
 4085 00:0000 -  -  -  -  ;
 4086 00:0000 -  -  -  -  tEOSEL			equ IMUN+23
 4087 00:0000 -  -  -  -  ;
 4088 00:0000 -  -  -  -  tSpace			equ tEOSEL ;29h ' '
 4089 00:0000 -  -  -  -  tString			equ tEOSEL+1 ;2Ah '"'
 4090 00:0000 -  -  -  -  tComma			equ tEOSEL+2 ;2Bh ','
 4091 00:0000 -  -  -  -  ;
 4092 00:0000 -  -  -  -  tii			equ 2Ch ;i
 4093 00:0000 -  -  -  -  
 4094 00:0000 -  -  -  -  ;Postfix Functions
 4095 00:0000 -  -  -  -  ;-----------------------------------------
 4096 00:0000 -  -  -  -  tPost			equ 2Dh
 4097 00:0000 -  -  -  -  ;
 4098 00:0000 -  -  -  -  tFact			equ tPost ;2Dh '!'
 4099 00:0000 -  -  -  -  ;
 4100 00:0000 -  -  -  -  tCubicR			equ 2Eh
 4101 00:0000 -  -  -  -  tQuartR			equ 2Fh
 4102 00:0000 -  -  -  -  
 4103 00:0000 -  -  -  -  ;Number Tokens 
 4104 00:0000 -  -  -  -  ;---------------------------------------
 4105 00:0000 -  -  -  -  NUMS			equ 30h
 4106 00:0000 -  -  -  -  ;
 4107 00:0000 -  -  -  -  t0			equ NUMS ;30h
 4108 00:0000 -  -  -  -  t1			equ NUMS+1 ;31h
 4109 00:0000 -  -  -  -  t2			equ NUMS+2 ;32h
 4110 00:0000 -  -  -  -  t3			equ NUMS+3 ;33h
 4111 00:0000 -  -  -  -  t4			equ NUMS+4 ;34h
 4112 00:0000 -  -  -  -  t5			equ NUMS+5 ;35h
 4113 00:0000 -  -  -  -  t6			equ NUMS+6 ;36h
 4114 00:0000 -  -  -  -  t7			equ NUMS+7 ;37h
 4115 00:0000 -  -  -  -  t8			equ NUMS+8 ;38h
 4116 00:0000 -  -  -  -  t9			equ NUMS+9 ;39h
 4117 00:0000 -  -  -  -  tDecPt			equ NUMS+10 ;3Ah
 4118 00:0000 -  -  -  -  tee			equ NUMS+11 ;3Bh
 4119 00:0000 -  -  -  -  
 4120 00:0000 -  -  -  -  ;Binary OP
 4121 00:0000 -  -  -  -  ;-------------------------------------------
 4122 00:0000 -  -  -  -  tOr			equ 3Ch ;3Ch '_or_'
 4123 00:0000 -  -  -  -  tXor			equ 3Dh ;3Dh
 4124 00:0000 -  -  -  -  ;
 4125 00:0000 -  -  -  -  tColon			equ 3Eh ;3Eh ':'
 4126 00:0000 -  -  -  -  tEnter			equ 3Fh ;3Fh Lenter
 4127 00:0000 -  -  -  -  ;
 4128 00:0000 -  -  -  -  tAnd			equ 40h ;40h '_and_'
 4129 00:0000 -  -  -  -  
 4130 00:0000 -  -  -  -  ;Letter Tokens
 4131 00:0000 -  -  -  -  ;--------------------------------------
 4132 00:0000 -  -  -  -  LET			equ 41h
 4133 00:0000 -  -  -  -  tA			equ LET ;41h
 4134 00:0000 -  -  -  -  tB			equ LET+1 ;42h
 4135 00:0000 -  -  -  -  tC			equ LET+2 ;43h
 4136 00:0000 -  -  -  -  tD			equ LET+3 ;44h
 4137 00:0000 -  -  -  -  tE			equ LET+4 ;45h
 4138 00:0000 -  -  -  -  tF			equ LET+5 ;46h
 4139 00:0000 -  -  -  -  tG			equ LET+6 ;47h
 4140 00:0000 -  -  -  -  tH			equ LET+7 ;48h
 4141 00:0000 -  -  -  -  tI			equ LET+8 ;49h
 4142 00:0000 -  -  -  -  tJ			equ LET+9 ;4Ah
 4143 00:0000 -  -  -  -  tK			equ LET+10 ;4Bh
 4144 00:0000 -  -  -  -  tL			equ LET+11 ;4Ch
 4145 00:0000 -  -  -  -  tM			equ LET+12 ;4Dh
 4146 00:0000 -  -  -  -  tN			equ LET+13 ;4Eh
 4147 00:0000 -  -  -  -  tO			equ LET+14 ;4Fh
 4148 00:0000 -  -  -  -  tP			equ LET+15 ;50h
 4149 00:0000 -  -  -  -  tQ			equ LET+16 ;51h
 4150 00:0000 -  -  -  -  tR			equ LET+17 ;52h
 4151 00:0000 -  -  -  -  tS			equ LET+18 ;53h
 4152 00:0000 -  -  -  -  tT			equ LET+19 ;54h
 4153 00:0000 -  -  -  -  tU			equ LET+20 ;55h
 4154 00:0000 -  -  -  -  tV			equ LET+21 ;56h
 4155 00:0000 -  -  -  -  tW			equ LET+22 ;57h
 4156 00:0000 -  -  -  -  tX			equ LET+23 ;58h
 4157 00:0000 -  -  -  -  tY			equ LET+24 ;59h
 4158 00:0000 -  -  -  -  tZ			equ LET+25 ;5Ah
 4159 00:0000 -  -  -  -  tTheta			equ LET+26 ;5Bh
 4160 00:0000 -  -  -  -  
 4161 00:0000 -  -  -  -  ;These Var Tokens Are 1st Of A Double Token
 4162 00:0000 -  -  -  -  ;------------------------------------------
 4163 00:0000 -  -  -  -  
 4164 00:0000 -  -  -  -  vToks			equ LET+27
 4165 00:0000 -  -  -  -  
 4166 00:0000 -  -  -  -  ;User Matrix Token, 2nd Token Needed For Name
 4167 00:0000 -  -  -  -  ;
 4168 00:0000 -  -  -  -  tVarMat			equ vToks ;5Ch
 4169 00:0000 -  -  -  -  ;
 4170 00:0000 -  -  -  -  ;User List Token, 2nd Token Needed For Name
 4171 00:0000 -  -  -  -  ;
 4172 00:0000 -  -  -  -  tVarLst			equ vToks+1 ;5Dh
 4173 00:0000 -  -  -  -  ;
 4174 00:0000 -  -  -  -  ;User Equation Token, 2nd Token Needed For Name
 4175 00:0000 -  -  -  -  ;
 4176 00:0000 -  -  -  -  tVarEqu			equ vToks+2 ;5Eh
 4177 00:0000 -  -  -  -  tProg			equ vToks+3 ;5Fh
 4178 00:0000 -  -  -  -  ;
 4179 00:0000 -  -  -  -  ;User Pict Token, 2nd Token Needed For Name
 4180 00:0000 -  -  -  -  ;
 4181 00:0000 -  -  -  -  tVarPict		equ vToks+4 ;60h
 4182 00:0000 -  -  -  -  ;
 4183 00:0000 -  -  -  -  ;User GDB Token, 2nd Token Needed For Name
 4184 00:0000 -  -  -  -  ;
 4185 00:0000 -  -  -  -  tVarGDB			equ vToks+5 ;61h
 4186 00:0000 -  -  -  -  tVarOut			equ vToks+6 ;62h
 4187 00:0000 -  -  -  -  tVarSys			equ vToks+7 ;63h
 4188 00:0000 -  -  -  -  
 4189 00:0000 -  -  -  -  ;Mode Setting Commands
 4190 00:0000 -  -  -  -  ;-------------------------------------------------
 4191 00:0000 -  -  -  -  MODESA			equ vToks+8 ;64h
 4192 00:0000 -  -  -  -  tRad			equ MODESA ;64h 'Radian'
 4193 00:0000 -  -  -  -  tDeg			equ MODESA+1 ;65h 'Degree'
 4194 00:0000 -  -  -  -  tNormF			equ MODESA+2 ;66h 'Normal'
 4195 00:0000 -  -  -  -  tSci			equ MODESA+3 ;67h 'Sci'
 4196 00:0000 -  -  -  -  tEng			equ MODESA+4 ;68h 'Eng'
 4197 00:0000 -  -  -  -  tFloat			equ MODESA+5 ;69h 'Float'
 4198 00:0000 -  -  -  -  CMPS			equ 6Ah
 4199 00:0000 -  -  -  -  tEQ			equ CMPS ;6Ah '=='
 4200 00:0000 -  -  -  -  tLT			equ CMPS+1 ;6Bh '<'
 4201 00:0000 -  -  -  -  tGT			equ CMPS+2 ;6Ch '>'
 4202 00:0000 -  -  -  -  tLE			equ CMPS+3 ;6Dh LLE
 4203 00:0000 -  -  -  -  tGE			equ CMPS+4 ;6Eh LGE
 4204 00:0000 -  -  -  -  tNE			equ CMPS+5 ;6Fh LNE
 4205 00:0000 -  -  -  -  
 4206 00:0000 -  -  -  -  ;Binary OP
 4207 00:0000 -  -  -  -  ;---------------------------------------
 4208 00:0000 -  -  -  -  tAdd			equ 70h ;70h '+'
 4209 00:0000 -  -  -  -  tSub			equ 71h ;71h '-'
 4210 00:0000 -  -  -  -  tAns			equ 72h ;72h
 4211 00:0000 -  -  -  -  
 4212 00:0000 -  -  -  -  ;Mode Setting Commands
 4213 00:0000 -  -  -  -  ;-------------------------------------------------------
 4214 00:0000 -  -  -  -  MODES			equ 73h
 4215 00:0000 -  -  -  -  tFix			equ MODES ;73h 'Fix_'
 4216 00:0000 -  -  -  -  tSplitOn		equ MODES+1 ;74h
 4217 00:0000 -  -  -  -  tFullScreen		equ MODES+2 ;75h
 4218 00:0000 -  -  -  -  tStndrd			equ MODES+3 ;76h 'Func'
 4219 00:0000 -  -  -  -  tParam			equ MODES+4 ;77h 'Param'
 4220 00:0000 -  -  -  -  tPolar			equ MODES+5 ;78h 'Pol'
 4221 00:0000 -  -  -  -  tSeqG			equ MODES+6 ;79h
 4222 00:0000 -  -  -  -  tAFillOn		equ MODES+7 ;7Ah 'AUTO FILL ON'
 4223 00:0000 -  -  -  -  tAFillOff		equ MODES+8 ;7Bh
 4224 00:0000 -  -  -  -  tACalcOn		equ MODES+9 ;7Ch
 4225 00:0000 -  -  -  -  tACalcOff		equ MODES+10 ;7Dh 'AutoFill OFF'
 4226 00:0000 -  -  -  -  
 4227 00:0000 -  -  -  -  ;Graph Format Tokens Are 2 Byte Tokens
 4228 00:0000 -  -  -  -  ;----------------------------------------
 4229 00:0000 -  -  -  -  tGFormat		equ MODES+11 ;7Eh
 4230 00:0000 -  -  -  -  tBoxIcon		equ 7Fh
 4231 00:0000 -  -  -  -  tCrossIcon		equ 80h
 4232 00:0000 -  -  -  -  tDotIcon		equ 81h
 4233 00:0000 -  -  -  -  
 4234 00:0000 -  -  -  -  ;(More) Binary OP
 4235 00:0000 -  -  -  -  ;---------------------------------------
 4236 00:0000 -  -  -  -  tMul			equ 82h ;82h '*'
 4237 00:0000 -  -  -  -  tDiv			equ 83h ;83h '/'
 4238 00:0000 -  -  -  -  
 4239 00:0000 -  -  -  -  ;Some Graph Commands
 4240 00:0000 -  -  -  -  ;------------------------------------------------------
 4241 00:0000 -  -  -  -  GRCMDS			equ 84h
 4242 00:0000 -  -  -  -  tTrace			equ GRCMDS ; 84h 'Trace'
 4243 00:0000 -  -  -  -  tClDrw			equ GRCMDS+1 ; 85h 'ClDrw'
 4244 00:0000 -  -  -  -  tZoomStd		equ GRCMDS+2 ; 86h 'ZStd'
 4245 00:0000 -  -  -  -  tZoomtrg		equ GRCMDS+3 ; 87h 'Ztrg'
 4246 00:0000 -  -  -  -  tZoomBox		equ GRCMDS+4 ; 88h 'ZBOX'
 4247 00:0000 -  -  -  -  tZoomIn			equ GRCMDS+5 ; 89h 'ZIn'
 4248 00:0000 -  -  -  -  tZoomOut		equ GRCMDS+6 ; 8Ah 'ZOut'
 4249 00:0000 -  -  -  -  tZoomSqr		equ GRCMDS+7 ; 8Bh 'ZSqr'
 4250 00:0000 -  -  -  -  tZoomInt		equ GRCMDS+8 ; 8Ch 'ZInt'
 4251 00:0000 -  -  -  -  tZoomPrev		equ GRCMDS+9 ; 8Dh 'ZPrev'
 4252 00:0000 -  -  -  -  tZoomDec		equ GRCMDS+10 ; 8Eh 'ZDecm'
 4253 00:0000 -  -  -  -  tZoomStat		equ GRCMDS+11 ; 8Fh 'ZStat
 4254 00:0000 -  -  -  -  tUsrZm			equ GRCMDS+12 ; 90h 'ZRcl'
 4255 00:0000 -  -  -  -  tPrtScrn		equ GRCMDS+13 ; 91h 'PrtScrn'
 4256 00:0000 -  -  -  -  tZoomSto		equ GRCMDS+14 ; 92h  ZOOM STORE
 4257 00:0000 -  -  -  -  tText			equ GRCMDS+15 ; 93h
 4258 00:0000 -  -  -  -  
 4259 00:0000 -  -  -  -  ;Binary OP (Combination & Permutation)
 4260 00:0000 -  -  -  -  ;-------------------------------------------------
 4261 00:0000 -  -  -  -  tnPr			equ GRCMDS+16 ;94h '_nPr_'
 4262 00:0000 -  -  -  -  tnCr			equ GRCMDS+17 ;95h '_nCr_'
 4263 00:0000 -  -  -  -  
 4264 00:0000 -  -  -  -  ;More Graph Commands
 4265 00:0000 -  -  -  -  ;--------------------------------------------------
 4266 00:0000 -  -  -  -  tYOn			equ GRCMDS+18 ;96h 'FnOn_'
 4267 00:0000 -  -  -  -  tYOff			equ GRCMDS+19 ;97h 'FnOff_'
 4268 00:0000 -  -  -  -  tStPic			equ GRCMDS+20 ;98h 'StPic_'
 4269 00:0000 -  -  -  -  tRcPic			equ GRCMDS+21 ;99h 'RcPic_'
 4270 00:0000 -  -  -  -  tStoDB			equ GRCMDS+22 ;9Ah 'StGDB_'
 4271 00:0000 -  -  -  -  tRclDB			equ GRCMDS+23 ;9Bh 'RcGDB_'
 4272 00:0000 -  -  -  -  tLine			equ GRCMDS+24 ;9Ch 'Line'
 4273 00:0000 -  -  -  -  tVert			equ GRCMDS+25 ;9Dh 'Vert_'
 4274 00:0000 -  -  -  -  tPtOn			equ GRCMDS+26 ;9Eh 'PtOn'
 4275 00:0000 -  -  -  -  tPtOff			equ GRCMDS+27 ;9Fh 'PtOff'
 4276 00:0000 -  -  -  -  
 4277 00:0000 -  -  -  -  ;Token A0 Cannot Be An EOS Function Since Low MULT=A0 Already
 4278 00:0000 -  -  -  -  ;------------------------------------------------------------
 4279 00:0000 -  -  -  -  tPtChg			equ GRCMDS+28 ;A0h 'PtChg'
 4280 00:0000 -  -  -  -  tPXOn			equ GRCMDS+29 ;A1h
 4281 00:0000 -  -  -  -  tPXOff			equ GRCMDS+30 ;A2h
 4282 00:0000 -  -  -  -  tPXChg			equ GRCMDS+31 ;A3h
 4283 00:0000 -  -  -  -  tShade			equ GRCMDS+32 ;A4h 'Shade'
 4284 00:0000 -  -  -  -  tCircl			equ GRCMDS+33 ;A5h 'Circl'
 4285 00:0000 -  -  -  -  tHorz			equ GRCMDS+34 ;A6h 'HORIZONTAL'
 4286 00:0000 -  -  -  -  tTanLn			equ GRCMDS+35 ;A7h 'TanLn'
 4287 00:0000 -  -  -  -  tDrInv			equ GRCMDS+36 ;A8h 'DrInv_'
 4288 00:0000 -  -  -  -  tDrawF			equ GRCMDS+37 ;A9h 'DrawF_'
 4289 00:0000 -  -  -  -  tVarStrng		equ 0AAh
 4290 00:0000 -  -  -  -  
 4291 00:0000 -  -  -  -  ;Functions with No Arguments                                    
 4292 00:0000 -  -  -  -  ;--------------------------------------------------
 4293 00:0000 -  -  -  -  NOARG			equ 0ABh
 4294 00:0000 -  -  -  -  tRand			equ NOARG ;ABh 'rand'
 4295 00:0000 -  -  -  -  tPi			equ NOARG+1 ;ACh  Lpi
 4296 00:0000 -  -  -  -  tGetKey			equ NOARG+2 ;ADh 'getKy'
 4297 00:0000 -  -  -  -  tAPost			equ tGetKey+1 ;APOSTROPHY
 4298 00:0000 -  -  -  -  tQuest			equ tAPost+1 ;QUESTION MARK
 4299 00:0000 -  -  -  -  UNARY			equ tQuest+1 ;B0h
 4300 00:0000 -  -  -  -  tChs			equ UNARY ;B0h
 4301 00:0000 -  -  -  -  tInt			equ UNARY+1 ;B1h
 4302 00:0000 -  -  -  -  tAbs			equ UNARY+2 ;B2h
 4303 00:0000 -  -  -  -  tDet			equ UNARY+3 ;B3h
 4304 00:0000 -  -  -  -  tIdent			equ UNARY+4 ;B4h
 4305 00:0000 -  -  -  -  tDim			equ UNARY+5 ;B5h
 4306 00:0000 -  -  -  -  tSum			equ UNARY+6 ;B6h
 4307 00:0000 -  -  -  -  tProd			equ UNARY+7 ;B7h
 4308 00:0000 -  -  -  -  tNot			equ UNARY+8 ;B8h
 4309 00:0000 -  -  -  -  tIPart			equ UNARY+9 ;B9h
 4310 00:0000 -  -  -  -  tFPart			equ UNARY+10 ;BAh
 4311 00:0000 -  -  -  -  
 4312 00:0000 -  -  -  -  ;New 2 Byte Tokens
 4313 00:0000 -  -  -  -  ;------------------------------------------
 4314 00:0000 -  -  -  -  t2ByteTok		equ 0BBh
 4315 00:0000 -  -  -  -  UNARYLR			equ UNARY+12
 4316 00:0000 -  -  -  -  tSqrt			equ UNARYLR ;BCh
 4317 00:0000 -  -  -  -  tCubRt			equ UNARYLR+1 ;BDh
 4318 00:0000 -  -  -  -  tLn			equ UNARYLR+2 ;BEh
 4319 00:0000 -  -  -  -  tExp			equ UNARYLR+3 ;BFh
 4320 00:0000 -  -  -  -  tLog			equ UNARYLR+4 ;C0h
 4321 00:0000 -  -  -  -  tALog			equ UNARYLR+5 ;C1h
 4322 00:0000 -  -  -  -  tSin			equ UNARYLR+6 ;C2h
 4323 00:0000 -  -  -  -  tASin			equ UNARYLR+7 ;C3h
 4324 00:0000 -  -  -  -  tCos			equ UNARYLR+8 ;C4h
 4325 00:0000 -  -  -  -  tACos			equ UNARYLR+9 ;C5h
 4326 00:0000 -  -  -  -  tTan			equ UNARYLR+10 ;C6h
 4327 00:0000 -  -  -  -  tATan			equ UNARYLR+11 ;C7h
 4328 00:0000 -  -  -  -  tSinH			equ UNARYLR+12 ;C8h
 4329 00:0000 -  -  -  -  tASinH			equ UNARYLR+13 ;C9h
 4330 00:0000 -  -  -  -  tCoshH			equ UNARYLR+14 ;CAh
 4331 00:0000 -  -  -  -  tACosH			equ UNARYLR+15 ;CBh
 4332 00:0000 -  -  -  -  tTanH			equ UNARYLR+16 ;CCh
 4333 00:0000 -  -  -  -  tATanH			equ UNARYLR+17 ;CDh
 4334 00:0000 -  -  -  -  
 4335 00:0000 -  -  -  -  ;Some Programming Commands
 4336 00:0000 -  -  -  -  ;------------------------------------------------------
 4337 00:0000 -  -  -  -  PROGTOK			equ UNARYLR+18
 4338 00:0000 -  -  -  -  tIf			equ PROGTOK ;CEh
 4339 00:0000 -  -  -  -  tThen			equ PROGTOK+1 ;CFh
 4340 00:0000 -  -  -  -  tElse			equ PROGTOK+2 ;D0h
 4341 00:0000 -  -  -  -  tWhile			equ PROGTOK+3 ;D1h
 4342 00:0000 -  -  -  -  tRepeat			equ PROGTOK+4 ;D2h
 4343 00:0000 -  -  -  -  tFor			equ PROGTOK+5 ;D3h
 4344 00:0000 -  -  -  -  tEnd			equ PROGTOK+6 ;D4h
 4345 00:0000 -  -  -  -  tReturn			equ PROGTOK+7 ;D5h
 4346 00:0000 -  -  -  -  tLbl			equ PROGTOK+8 ;D6h 'Lbl_'
 4347 00:0000 -  -  -  -  tGoto			equ PROGTOK+9 ;D7h 'Goto_'
 4348 00:0000 -  -  -  -  tPause			equ PROGTOK+10 ;D8h 'Pause_'
 4349 00:0000 -  -  -  -  tStop			equ PROGTOK+11 ;D9h 'Stop'
 4350 00:0000 -  -  -  -  tISG			equ PROGTOK+12 ;DAh 'IS>'
 4351 00:0000 -  -  -  -  tDSL			equ PROGTOK+13 ;DBh 'DS<'
 4352 00:0000 -  -  -  -  tInput			equ PROGTOK+14 ;DCh 'Input_'
 4353 00:0000 -  -  -  -  tPrompt			equ PROGTOK+15 ;DDh 'Prompt_'
 4354 00:0000 -  -  -  -  tDisp			equ PROGTOK+16 ;DEh 'Disp_'
 4355 00:0000 -  -  -  -  tDispG			equ PROGTOK+17 ;DFh 'DispG'
 4356 00:0000 -  -  -  -  tOutput			equ PROGTOK+18 ;E0h 'Outpt'
 4357 00:0000 -  -  -  -  tClLCD			equ PROGTOK+19 ;E1h 'ClLCD'
 4358 00:0000 -  -  -  -  tConst			equ PROGTOK+20 ;E2h 'Fill'
 4359 00:0000 -  -  -  -  tSortA			equ PROGTOK+21 ;E3h 'sortA_'
 4360 00:0000 -  -  -  -  tSortD			equ PROGTOK+22 ;E4h 'sortD_'
 4361 00:0000 -  -  -  -  tDispTab		equ PROGTOK+23 ;E5h 'Disp Table
 4362 00:0000 -  -  -  -  tMenu			equ PROGTOK+24 ;E6h 'Menu'
 4363 00:0000 -  -  -  -  tSendMBL		equ PROGTOK+25 ;E7h 'SEND'
 4364 00:0000 -  -  -  -  tGetMBL			equ PROGTOK+26 ;E8h 'GET'
 4365 00:0000 -  -  -  -  
 4366 00:0000 -  -  -  -  ;Stat Plot Commands
 4367 00:0000 -  -  -  -  ;------------------------------------------------------
 4368 00:0000 -  -  -  -  statPCmd		equ PROGTOK+27
 4369 00:0000 -  -  -  -  tPlotOn			equ statPCmd ;E9h ' PLOTSON'
 4370 00:0000 -  -  -  -  tPlotOff		equ statPCmd+1 ;EAh ' PLOTSOFF
 4371 00:0000 -  -  -  -  tListName		equ 0EBh ;LIST DESIGNATOR
 4372 00:0000 -  -  -  -  tPlot1			equ 0ECh
 4373 00:0000 -  -  -  -  tPlot2			equ 0EDh
 4374 00:0000 -  -  -  -  tPlot3			equ 0EEh
 4375 00:0000 -  -  -  -  tUnused01		equ 0EFh ;available?
 4376 00:0000 -  -  -  -  tPower			equ 0F0h ;'^'
 4377 00:0000 -  -  -  -  tXRoot			equ 0F1h ;LsupX,Lroot
 4378 00:0000 -  -  -  -  STATCMD			equ 0F2h
 4379 00:0000 -  -  -  -  tOneVar			equ STATCMD ;F2h 'OneVar_'
 4380 00:0000 -  -  -  -  tTwoVar			equ STATCMD+1 ;F3h
 4381 00:0000 -  -  -  -  tLR			equ STATCMD+2 ;F4h 'LinR(A+BX
 4382 00:0000 -  -  -  -  tLRExp			equ STATCMD+3 ;F5h 'ExpR_'
 4383 00:0000 -  -  -  -  tLRLn			equ STATCMD+4 ;F6h 'LnR_'
 4384 00:0000 -  -  -  -  tLRPwr			equ STATCMD+5 ;F7h 'PwrR_'
 4385 00:0000 -  -  -  -  tMedMed			equ STATCMD+6 ;F8h
 4386 00:0000 -  -  -  -  tQuad			equ STATCMD+7 ;F9h
 4387 00:0000 -  -  -  -  tClrLst			equ STATCMD+8 ;FAh 'CLEAR LIST
 4388 00:0000 -  -  -  -  tClrTbl			equ STATCMD+9 ;FBh CLEAR TABLE
 4389 00:0000 -  -  -  -  tHist			equ STATCMD+10 ;FCh 'Hist_'
 4390 00:0000 -  -  -  -  txyLine			equ STATCMD+11 ;FDh 'xyline_'
 4391 00:0000 -  -  -  -  tScatter		equ STATCMD+12 ;FEh 'Scatter_'
 4392 00:0000 -  -  -  -  tLR1			equ STATCMD+13 ;FFh 'LINR(AX+B
 4393 00:0000 -  -  -  -  
 4394 00:0000 -  -  -  -  ;2nd Half Of Graph Format Tokens
 4395 00:0000 -  -  -  -  ;----------------------------------------------
 4396 00:0000 -  -  -  -  ;           Format settings commands
 4397 00:0000 -  -  -  -  ;
 4398 00:0000 -  -  -  -  GFMT			equ 0
 4399 00:0000 -  -  -  -  tSeq			equ GFMT ; 'SeqG'
 4400 00:0000 -  -  -  -  tSimulG			equ GFMT+1 ; 'SimulG'
 4401 00:0000 -  -  -  -  tPolarG			equ GFMT+2 ; 'PolarGC'
 4402 00:0000 -  -  -  -  tRectG			equ GFMT+3 ; 'RectGC'
 4403 00:0000 -  -  -  -  tCoordOn		equ GFMT+4 ; 'CoordOn'
 4404 00:0000 -  -  -  -  tCoordOff		equ GFMT+5 ; 'CoordOff'
 4405 00:0000 -  -  -  -  tDrawLine		equ GFMT+6 ; 'DrawLine'
 4406 00:0000 -  -  -  -  tDrawDot		equ GFMT+7 ; 'DrawDot'
 4407 00:0000 -  -  -  -  tAxisOn			equ GFMT+8 ; 'AxesOn'
 4408 00:0000 -  -  -  -  tAxisOff		equ GFMT+9 ; 'AxesOff'
 4409 00:0000 -  -  -  -  tGridOn			equ GFMT+10 ; 'GridOn'
 4410 00:0000 -  -  -  -  tGridOff		equ GFMT+11 ; 'GridOff'
 4411 00:0000 -  -  -  -  tLblOn			equ GFMT+12 ; 'LabelOn'
 4412 00:0000 -  -  -  -  tLblOff			equ GFMT+13 ; 'LabelOff'
 4413 00:0000 -  -  -  -  tWebOn			equ GFMT+14 ; 'WebOn'
 4414 00:0000 -  -  -  -  tWebOff			equ GFMT+15 ; 'WebOFF'
 4415 00:0000 -  -  -  -  tuv			equ GFMT+16 ; U vs V
 4416 00:0000 -  -  -  -  tvw			equ GFMT+17 ; V vs W
 4417 00:0000 -  -  -  -  tuw			equ GFMT+18 ; U vs W
 4418 00:0000 -  -  -  -  
 4419 00:0000 -  -  -  -  ;2nd Half Of User Matrix Tokens
 4420 00:0000 -  -  -  -  ;-------------------------------------
 4421 00:0000 -  -  -  -  tMatA			equ 00h ;MAT A
 4422 00:0000 -  -  -  -  tMatB			equ 01h ;MAT B
 4423 00:0000 -  -  -  -  tMatC			equ 02h ;MAT C
 4424 00:0000 -  -  -  -  tMatD			equ 03h ;MAT D
 4425 00:0000 -  -  -  -  tMatE			equ 04h ;MAT E
 4426 00:0000 -  -  -  -  tMatF			equ 05h ;MAT F
 4427 00:0000 -  -  -  -  tMatG			equ 06h ;MAT G
 4428 00:0000 -  -  -  -  tMatH			equ 07h ;MAT H
 4429 00:0000 -  -  -  -  tMatI			equ 08h ;MAT I
 4430 00:0000 -  -  -  -  tMatJ			equ 09h ;MAT J
 4431 00:0000 -  -  -  -  
 4432 00:0000 -  -  -  -  ;2nd Half Of User List Tokens
 4433 00:0000 -  -  -  -  ;--------------------------------------
 4434 00:0000 -  -  -  -  tL1			equ 00h ;LIST 1
 4435 00:0000 -  -  -  -  tL2			equ 01h ;LIST 2
 4436 00:0000 -  -  -  -  tL3			equ 02h ;LIST 3
 4437 00:0000 -  -  -  -  tL4			equ 03h ;LIST 4
 4438 00:0000 -  -  -  -  tL5			equ 04h ;LIST 5
 4439 00:0000 -  -  -  -  tL6			equ 05h ;LIST 6
 4440 00:0000 -  -  -  -  
 4441 00:0000 -  -  -  -  ;2nd Half Of User Equation Tokens
 4442 00:0000 -  -  -  -  ;----------------------------------
 4443 00:0000 -  -  -  -  ;  "Y" EQUATIONS HAVE BIT 4 SET
 4444 00:0000 -  -  -  -  ;
 4445 00:0000 -  -  -  -  tY1			equ 10h ;Y1
 4446 00:0000 -  -  -  -  tY2			equ 11h ;Y2
 4447 00:0000 -  -  -  -  tY3			equ 12h ;Y3
 4448 00:0000 -  -  -  -  tY4			equ 13h ;Y4
 4449 00:0000 -  -  -  -  tY5			equ 14h ;Y5
 4450 00:0000 -  -  -  -  tY6			equ 15h ;Y6
 4451 00:0000 -  -  -  -  tY7			equ 16h ;Y7
 4452 00:0000 -  -  -  -  tY8			equ 17h ;Y8
 4453 00:0000 -  -  -  -  tY9			equ 18h ;Y9
 4454 00:0000 -  -  -  -  tY0			equ 19h ;Y0
 4455 00:0000 -  -  -  -  
 4456 00:0000 -  -  -  -  ;Param Equations Have Bit 5 Set
 4457 00:0000 -  -  -  -  ;-----------------------------------
 4458 00:0000 -  -  -  -  tX1T			equ 20h ;X1t
 4459 00:0000 -  -  -  -  tY1T			equ 21h ;Y1t
 4460 00:0000 -  -  -  -  tX2T			equ 22h ;X2t
 4461 00:0000 -  -  -  -  tY2T			equ 23h ;Y2t
 4462 00:0000 -  -  -  -  tX3T			equ 24h ;X3t
 4463 00:0000 -  -  -  -  tY3T			equ 25h ;Y3t
 4464 00:0000 -  -  -  -  tX4T			equ 26h ;X4t
 4465 00:0000 -  -  -  -  tY4T			equ 27h ;Y4t
 4466 00:0000 -  -  -  -  tX5T			equ 28h ;X5t
 4467 00:0000 -  -  -  -  tY5T			equ 29h ;Y5t
 4468 00:0000 -  -  -  -  tX6T			equ 2Ah ;X6t
 4469 00:0000 -  -  -  -  tY6T			equ 2Bh ;Y6t
 4470 00:0000 -  -  -  -  
 4471 00:0000 -  -  -  -  ;Polar Equations Have Bit 6 Set
 4472 00:0000 -  -  -  -  ;----------------------------------
 4473 00:0000 -  -  -  -  tR1			equ 40h ;R1
 4474 00:0000 -  -  -  -  tR2			equ 41h ;R2
 4475 00:0000 -  -  -  -  tR3			equ 42h ;R3
 4476 00:0000 -  -  -  -  tR4			equ 43h ;R4
 4477 00:0000 -  -  -  -  tR5			equ 44h ;R5
 4478 00:0000 -  -  -  -  tR6			equ 45h ;R6
 4479 00:0000 -  -  -  -  
 4480 00:0000 -  -  -  -  ;Recursion Equations Have Bit 7 Set
 4481 00:0000 -  -  -  -  ;----------------------------------
 4482 00:0000 -  -  -  -  tun			equ 80h ;Un
 4483 00:0000 -  -  -  -  tvn			equ 81h ;Vn
 4484 00:0000 -  -  -  -  twn			equ 82h ;Wn
 4485 00:0000 -  -  -  -  
 4486 00:0000 -  -  -  -  ;2nd Half Of User Picture Tokens
 4487 00:0000 -  -  -  -  ;------------------------------------
 4488 00:0000 -  -  -  -  tPic1			equ 00h ;PIC1
 4489 00:0000 -  -  -  -  tPic2			equ 01h ;PIC2
 4490 00:0000 -  -  -  -  tPic3			equ 02h ;PIC3
 4491 00:0000 -  -  -  -  tPic4			equ 03h ;PIC4
 4492 00:0000 -  -  -  -  tPic5			equ 04h ;PIC5
 4493 00:0000 -  -  -  -  tPic6			equ 05h ;PIC6
 4494 00:0000 -  -  -  -  tPic7			equ 06h ;PIC7
 4495 00:0000 -  -  -  -  tPic8			equ 07h ;PIC8
 4496 00:0000 -  -  -  -  tPic9			equ 08h ;PIC9
 4497 00:0000 -  -  -  -  tPic0			equ 09h ;PIC0
 4498 00:0000 -  -  -  -  
 4499 00:0000 -  -  -  -  ;2nd Half Of User Graph Database Tokens
 4500 00:0000 -  -  -  -  ;--------------------------------------
 4501 00:0000 -  -  -  -  tGDB1			equ 00h ;GDB1
 4502 00:0000 -  -  -  -  tGDB2			equ 01h ;GDB2
 4503 00:0000 -  -  -  -  tGDB3			equ 02h ;GDB3
 4504 00:0000 -  -  -  -  tGDB4			equ 03h ;GDB4
 4505 00:0000 -  -  -  -  tGDB5			equ 04h ;GDB5
 4506 00:0000 -  -  -  -  tGDB6			equ 05h ;GDB6
 4507 00:0000 -  -  -  -  tGDB7			equ 06h ;GDB7
 4508 00:0000 -  -  -  -  tGDB8			equ 07h ;GDB8
 4509 00:0000 -  -  -  -  tGDB9			equ 08h ;GDB9
 4510 00:0000 -  -  -  -  tGDB0			equ 09h ;GDB0
 4511 00:0000 -  -  -  -  
 4512 00:0000 -  -  -  -  ;2nd Half Of String Vars
 4513 00:0000 -  -  -  -  ;------------------------------
 4514 00:0000 -  -  -  -  tStr1			equ 00h
 4515 00:0000 -  -  -  -  tStr2			equ 01h
 4516 00:0000 -  -  -  -  tStr3			equ 02h
 4517 00:0000 -  -  -  -  tStr4			equ 03h
 4518 00:0000 -  -  -  -  tStr5			equ 04h
 4519 00:0000 -  -  -  -  tStr6			equ 05h
 4520 00:0000 -  -  -  -  tStr7			equ 06h
 4521 00:0000 -  -  -  -  tStr8			equ 07h
 4522 00:0000 -  -  -  -  tStr9			equ 08h
 4523 00:0000 -  -  -  -  tStr0			equ 09h
 4524 00:0000 -  -  -  -  
 4525 00:0000 -  -  -  -  ;2nd Half Of System Output Only Variables
 4526 00:0000 -  -  -  -  ;-----------------------------------------------------------------
 4527 00:0000 -  -  -  -  ;OPEN			equ 00h
 4528 00:0000 -  -  -  -  tRegEq			equ 01h ;REGRESSION EQUATION
 4529 00:0000 -  -  -  -  tStatN			equ 02h ;STATISTICS N
 4530 00:0000 -  -  -  -  tXMean			equ 03h ;X MEAN
 4531 00:0000 -  -  -  -  tSumX			equ 04h ;SUM(X)
 4532 00:0000 -  -  -  -  tSumXSqr		equ 05h ;SUM(X^2)
 4533 00:0000 -  -  -  -  tStdX			equ 06h ;STANDARD DEV X
 4534 00:0000 -  -  -  -  tStdPX			equ 07h ;STANDARD DEV POP X
 4535 00:0000 -  -  -  -  tMinX			equ 08h ;Min X VALUE
 4536 00:0000 -  -  -  -  tMaxX			equ 09h ;Max X VALUE
 4537 00:0000 -  -  -  -  tMinY			equ 0Ah ;Min Y VALUE
 4538 00:0000 -  -  -  -  tMaxY			equ 0Bh ;Max Y VALUE
 4539 00:0000 -  -  -  -  tYmean			equ 0Ch ;Y MEAN
 4540 00:0000 -  -  -  -  tSumY			equ 0Dh ;SUM(Y)
 4541 00:0000 -  -  -  -  tSumYSqr		equ 0Eh ;SUM(Y^2)
 4542 00:0000 -  -  -  -  tStdY			equ 0Fh ;STANDARD DEV Y
 4543 00:0000 -  -  -  -  tStdPY			equ 10h ;STANDARD DEV POP Y
 4544 00:0000 -  -  -  -  tSumXY			equ 11h ;SUM(XY)
 4545 00:0000 -  -  -  -  tCorr			equ 12h ;CORRELATION
 4546 00:0000 -  -  -  -  tMedX			equ 13h ;MED(X)
 4547 00:0000 -  -  -  -  tQ1			equ 14h ;1ST QUADRANT OF X
 4548 00:0000 -  -  -  -  tQ3			equ 15h ;3RD QUADRANT OF X
 4549 00:0000 -  -  -  -  tQuadA			equ 16h ;1ST TERM OF QUAD POLY REG/ Y-INT
 4550 00:0000 -  -  -  -  tQuadB			equ 17h ;2ND TERM OF QUAD POLY REG/ SLOPE
 4551 00:0000 -  -  -  -  tQuadC			equ 18h ;3RD TERM OF QUAD POLY REG
 4552 00:0000 -  -  -  -  tCubeD			equ 19h ;4TH TERM OF CUBIC POLY REG
 4553 00:0000 -  -  -  -  tQuartE			equ 1Ah ;5TH TERM OF QUART POLY REG
 4554 00:0000 -  -  -  -  tMedX1			equ 1Bh ;x1 FOR MED-MED
 4555 00:0000 -  -  -  -  tMedX2			equ 1Ch ;x2 FOR MED-MED
 4556 00:0000 -  -  -  -  tMedX3			equ 1Dh ;x3 FOR MED-MED
 4557 00:0000 -  -  -  -  tMedY1			equ 1Eh ;y1 FOR MED-MED
 4558 00:0000 -  -  -  -  tMedY2			equ 1Fh ;y2 FOR MED-MED
 4559 00:0000 -  -  -  -  tMedY3			equ 20h ;y3 FOR MED-MED
 4560 00:0000 -  -  -  -  tRecurn			equ 21h	;RECURSION N
 4561 00:0000 -  -  -  -  tStatP			equ 22h
 4562 00:0000 -  -  -  -  tStatZ			equ 23h
 4563 00:0000 -  -  -  -  tStatT			equ 24h
 4564 00:0000 -  -  -  -  tStatChi		equ 25h
 4565 00:0000 -  -  -  -  tStatF			equ 26h
 4566 00:0000 -  -  -  -  tStatDF			equ 27h
 4567 00:0000 -  -  -  -  tStatPhat		equ 28h
 4568 00:0000 -  -  -  -  tStatPhat1		equ 29h
 4569 00:0000 -  -  -  -  tStatPhat2		equ 2Ah
 4570 00:0000 -  -  -  -  tStatMeanX1		equ 2Bh
 4571 00:0000 -  -  -  -  tStatStdX1		equ 2Ch
 4572 00:0000 -  -  -  -  tStatN1			equ 2Dh
 4573 00:0000 -  -  -  -  tStatMeanX2		equ 2Eh
 4574 00:0000 -  -  -  -  tStatStdX2		equ 2Fh
 4575 00:0000 -  -  -  -  tStatN2			equ 30h
 4576 00:0000 -  -  -  -  tStatStdXP		equ 31h
 4577 00:0000 -  -  -  -  tStatLower		equ 32h
 4578 00:0000 -  -  -  -  tStatUpper		equ 33h
 4579 00:0000 -  -  -  -  tStat_s			equ 34h
 4580 00:0000 -  -  -  -  tLRSqr			equ 35h ;r^2
 4581 00:0000 -  -  -  -  tBRSqr			equ 36h ;R^2
 4582 00:0000 -  -  -  -  
 4583 00:0000 -  -  -  -  ;These next tokens are only used to access the data
 4584 00:0000 -  -  -  -  ;they are display only and the user cannot access them at all
 4585 00:0000 -  -  -  -  ;------------------------------------------------------------
 4586 00:0000 -  -  -  -  tF_DF			equ 37h ;ANOFAV FACTOR DF
 4587 00:0000 -  -  -  -  tF_SS			equ 38h ;ANOFAV FACTOR SS
 4588 00:0000 -  -  -  -  tF_MS			equ 39h ;ANOFAV FACTOR MS
 4589 00:0000 -  -  -  -  tE_DF			equ 3Ah ;ANOFAV ERROR DF
 4590 00:0000 -  -  -  -  tE_SS			equ 3Bh ;ANOFAV ERROR SS
 4591 00:0000 -  -  -  -  tE_MS			equ 3Ch ;ANOFAV ERROR MS
 4592 00:0000 -  -  -  -  
 4593 00:0000 -  -  -  -  ;2nd Half Of System Input/Output Variables
 4594 00:0000 -  -  -  -  ;------------------------------------------------
 4595 00:0000 -  -  -  -  ;      SYSTEM VARIABLE EQUATES
 4596 00:0000 -  -  -  -  ;
 4597 00:0000 -  -  -  -  tuXscl			equ 0
 4598 00:0000 -  -  -  -  tuYscl			equ 1
 4599 00:0000 -  -  -  -  tXscl			equ 2
 4600 00:0000 -  -  -  -  tYscl			equ 3
 4601 00:0000 -  -  -  -  tRecuru0		equ 4 ;U 1ST INITIAL COND
 4602 00:0000 -  -  -  -  tRecurv0		equ 5 ;V 1ST INITIAL COND
 4603 00:0000 -  -  -  -  tun1			equ 6 ;U(N-1); NOT USED
 4604 00:0000 -  -  -  -  tvn1			equ 7 ;V(N-1); NOT USED
 4605 00:0000 -  -  -  -  tuRecuru0		equ 8 ;
 4606 00:0000 -  -  -  -  tuRecurv0		equ 9 ;
 4607 00:0000 -  -  -  -  tXmin			equ 0Ah
 4608 00:0000 -  -  -  -  tXmax			equ 0Bh
 4609 00:0000 -  -  -  -  tYmin			equ 0Ch
 4610 00:0000 -  -  -  -  tYmax			equ 0Dh
 4611 00:0000 -  -  -  -  tTmin			equ 0Eh
 4612 00:0000 -  -  -  -  tTmax			equ 0Fh
 4613 00:0000 -  -  -  -  tThetaMin		equ 10h
 4614 00:0000 -  -  -  -  tThetaMax		equ 11h
 4615 00:0000 -  -  -  -  tuXmin			equ 12h
 4616 00:0000 -  -  -  -  tuXmax			equ 13h
 4617 00:0000 -  -  -  -  tuYmin			equ 14h
 4618 00:0000 -  -  -  -  tuYmax			equ 15h
 4619 00:0000 -  -  -  -  tuThetMin		equ 16h
 4620 00:0000 -  -  -  -  tuThetMax		equ 17h
 4621 00:0000 -  -  -  -  tuTmin			equ 18h
 4622 00:0000 -  -  -  -  tuTmax			equ 19h
 4623 00:0000 -  -  -  -  tTblMin			equ 1Ah
 4624 00:0000 -  -  -  -  tPlotStart		equ 1Bh
 4625 00:0000 -  -  -  -  tuPlotStart		equ 1Ch
 4626 00:0000 -  -  -  -  tnMax			equ 1Dh
 4627 00:0000 -  -  -  -  tunMax			equ 1Eh
 4628 00:0000 -  -  -  -  tnMin			equ 1Fh
 4629 00:0000 -  -  -  -  tunMin			equ 20h
 4630 00:0000 -  -  -  -  tTblStep		equ 21h
 4631 00:0000 -  -  -  -  tTStep			equ 22h
 4632 00:0000 -  -  -  -  tThetaStep		equ 23h
 4633 00:0000 -  -  -  -  tuTStep			equ 24h
 4634 00:0000 -  -  -  -  tuThetStep		equ 25h
 4635 00:0000 -  -  -  -  tDeltaX			equ 26h
 4636 00:0000 -  -  -  -  tDeltaY			equ 27h
 4637 00:0000 -  -  -  -  tXFact			equ 28h
 4638 00:0000 -  -  -  -  tYFact			equ 29h
 4639 00:0000 -  -  -  -  tTblInput		equ 2Ah
 4640 00:0000 -  -  -  -  tFinN			equ 2Bh
 4641 00:0000 -  -  -  -  tFinI			equ 2Ch
 4642 00:0000 -  -  -  -  tFinPV			equ 2Dh
 4643 00:0000 -  -  -  -  tFinPMT			equ 2Eh
 4644 00:0000 -  -  -  -  tFinFV			equ 2Fh
 4645 00:0000 -  -  -  -  tFinPY			equ 30h
 4646 00:0000 -  -  -  -  tFinCY			equ 31h
 4647 00:0000 -  -  -  -  tRecurw0		equ 32h ;w0(1)
 4648 00:0000 -  -  -  -  tuRecurw0		equ 33h
 4649 00:0000 -  -  -  -  tPlotStep		equ 34h
 4650 00:0000 -  -  -  -  tuPlotStep		equ 35h
 4651 00:0000 -  -  -  -  tXres			equ 36h
 4652 00:0000 -  -  -  -  tuXres			equ 37h
 4653 00:0000 -  -  -  -  tRecuru02		equ 38h ;u0(2)
 4654 00:0000 -  -  -  -  tuRecuru02		equ 39h
 4655 00:0000 -  -  -  -  tRecurv02		equ 3Ch ;v0(2)
 4656 00:0000 -  -  -  -  tuRecurv02		equ 3Dh
 4657 00:0000 -  -  -  -  tRecurw02		equ 3Eh ;w0(2)
 4658 00:0000 -  -  -  -  tuRecurw02		equ 3Fh
 4659 00:0000 -  -  -  -  
 4660 00:0000 -  -  -  -  ;2nd Byte Of t2ByteTok Tokens
 4661 00:0000 -  -  -  -  ;------------------------------
 4662 00:0000 -  -  -  -  tFinNPV			equ 00h
 4663 00:0000 -  -  -  -  tFinIRR			equ 01h
 4664 00:0000 -  -  -  -  tFinBAL			equ 02h
 4665 00:0000 -  -  -  -  tFinPRN			equ 03h
 4666 00:0000 -  -  -  -  tFinINT			equ 04h
 4667 00:0000 -  -  -  -  tFinToNom		equ 05h
 4668 00:0000 -  -  -  -  tFinToEff		equ 06h
 4669 00:0000 -  -  -  -  tFinDBD			equ 07h
 4670 00:0000 -  -  -  -  tLCM			equ 08h
 4671 00:0000 -  -  -  -  tGCD			equ 09h
 4672 00:0000 -  -  -  -  tRandInt		equ 0Ah
 4673 00:0000 -  -  -  -  tRandBin		equ 0Bh
 4674 00:0000 -  -  -  -  tSubStrng		equ 0Ch
 4675 00:0000 -  -  -  -  tStdDev			equ 0Dh
 4676 00:0000 -  -  -  -  tVariance		equ 0Eh
 4677 00:0000 -  -  -  -  tInStrng		equ 0Fh
 4678 00:0000 -  -  -  -  tDNormal		equ 10h
 4679 00:0000 -  -  -  -  tInvNorm		equ 11h
 4680 00:0000 -  -  -  -  tDT			equ 12h
 4681 00:0000 -  -  -  -  tChI			equ 13h
 4682 00:0000 -  -  -  -  tDF			equ 14h
 4683 00:0000 -  -  -  -  tBINPDF			equ 15h
 4684 00:0000 -  -  -  -  tBINCDF			equ 16h
 4685 00:0000 -  -  -  -  tPOIPDF			equ 17h
 4686 00:0000 -  -  -  -  tPOICDF			equ 18h
 4687 00:0000 -  -  -  -  tGEOPDF			equ 19h
 4688 00:0000 -  -  -  -  tGEOCDF			equ 1Ah
 4689 00:0000 -  -  -  -  tNormalPDF		equ 1Bh
 4690 00:0000 -  -  -  -  tTPDF			equ 1Ch
 4691 00:0000 -  -  -  -  tChiPDF			equ 1Dh
 4692 00:0000 -  -  -  -  tFPDF			equ 1Eh
 4693 00:0000 -  -  -  -  tRandNorm		equ 1Fh
 4694 00:0000 -  -  -  -  tFinFPMT		equ 20h
 4695 00:0000 -  -  -  -  tFinFI			equ 21h
 4696 00:0000 -  -  -  -  tFinFPV			equ 22h
 4697 00:0000 -  -  -  -  tFinFN			equ 23h
 4698 00:0000 -  -  -  -  tFinFFV			equ 24h
 4699 00:0000 -  -  -  -  tConj			equ 25h
 4700 00:0000 -  -  -  -  tReal			equ 26h
 4701 00:0000 -  -  -  -  tImag			equ 27h
 4702 00:0000 -  -  -  -  tAngle			equ 28h
 4703 00:0000 -  -  -  -  tCumSum			equ 29h
 4704 00:0000 -  -  -  -  tExpr			equ 2Ah
 4705 00:0000 -  -  -  -  tLength			equ 2Bh
 4706 00:0000 -  -  -  -  tDeltaLst		equ 2Ch
 4707 00:0000 -  -  -  -  tRef			equ 2Dh
 4708 00:0000 -  -  -  -  tRRef			equ 2Eh
 4709 00:0000 -  -  -  -  tToRect			equ 2Fh
 4710 00:0000 -  -  -  -  tToPolar		equ 30h
 4711 00:0000 -  -  -  -  tConste			equ 31h
 4712 00:0000 -  -  -  -  tSinReg			equ 32h
 4713 00:0000 -  -  -  -  tLogistic		equ 33h
 4714 00:0000 -  -  -  -  tLinRegTTest		equ 34h
 4715 00:0000 -  -  -  -  tShadeNorm		equ 35h
 4716 00:0000 -  -  -  -  tShadeT			equ 36h
 4717 00:0000 -  -  -  -  tShadeChi		equ 37h
 4718 00:0000 -  -  -  -  tShadeF			equ 38h
 4719 00:0000 -  -  -  -  tMatToLst		equ 39h
 4720 00:0000 -  -  -  -  tLstToMat		equ 3Ah
 4721 00:0000 -  -  -  -  tZTest			equ 3Bh
 4722 00:0000 -  -  -  -  tTTest			equ 3Ch
 4723 00:0000 -  -  -  -  t2SampZTest		equ 3Dh
 4724 00:0000 -  -  -  -  t1PropZTest		equ 3Eh
 4725 00:0000 -  -  -  -  t2PropZTest		equ 3Fh
 4726 00:0000 -  -  -  -  tChiTest		equ 40h
 4727 00:0000 -  -  -  -  tZIntVal		equ 41h
 4728 00:0000 -  -  -  -  t2SampZInt		equ 42h
 4729 00:0000 -  -  -  -  t1PropZInt		equ 43h
 4730 00:0000 -  -  -  -  t2PropZInt		equ 44h
 4731 00:0000 -  -  -  -  tGraphStyle		equ 45h
 4732 00:0000 -  -  -  -  t2SampTTest		equ 46h
 4733 00:0000 -  -  -  -  t2SampFTest		equ 47h
 4734 00:0000 -  -  -  -  tTIntVal		equ 48h
 4735 00:0000 -  -  -  -  t2SampTInt		equ 49h
 4736 00:0000 -  -  -  -  tSetupLst		equ 4Ah
 4737 00:0000 -  -  -  -  tFinPMTend		equ 4Bh
 4738 00:0000 -  -  -  -  tFinPMTbeg		equ 4Ch
 4739 00:0000 -  -  -  -  tRealM			equ 4Dh
 4740 00:0000 -  -  -  -  tPolarM			equ 4Eh
 4741 00:0000 -  -  -  -  tRectM			equ 4Fh
 4742 00:0000 -  -  -  -  tExprOn			equ 50h
 4743 00:0000 -  -  -  -  tExprOff		equ 51h
 4744 00:0000 -  -  -  -  tClrAllLst		equ 52h
 4745 00:0000 -  -  -  -  tGetCalc		equ 53h
 4746 00:0000 -  -  -  -  tDelVar			equ 54h
 4747 00:0000 -  -  -  -  tEquToStrng		equ 55h
 4748 00:0000 -  -  -  -  tStrngToEqu		equ 56h
 4749 00:0000 -  -  -  -  tDelLast		equ 57h
 4750 00:0000 -  -  -  -  tSelect			equ 58h
 4751 00:0000 -  -  -  -  tANOVA			equ 59h
 4752 00:0000 -  -  -  -  tModBox			equ 5Ah
 4753 00:0000 -  -  -  -  tNormProb		equ 5Bh
 4754 00:0000 -  -  -  -  tMGT			equ 64h ;VERTICAL SPLIT
 4755 00:0000 -  -  -  -  tZFit			equ 65h ;ZOOM FIT
 4756 00:0000 -  -  -  -  tDiag_on		equ 66h ;DIANOSTIC DISPLAY ON
 4757 00:0000 -  -  -  -  tDiag_off		equ 67h ;DIANOSTIC DISPLAY OFF
 4758 00:0000 -  -  -  -  tOkEnd2v0		equ 67h ;end of 2byte tokens for version 0.
 4759 00:0000 -  -  -  -  tArchive		equ 68h ;archive
 4760 00:0000 -  -  -  -  tUnarchive		equ 69h ;unarchive
 4761 00:0000 -  -  -  -  tasm			equ 6Ah
 4762 00:0000 -  -  -  -  tasmComp		equ 6Bh	;asm compile
 4763 00:0000 -  -  -  -  tasmPrgm		equ 6Ch	;signifies a program is asm
 4764 00:0000 -  -  -  -  tasmCmp			equ 6Dh	;asm program is compiled
 4765 00:0000 -  -  -  -  tLcapAAcute		equ 6Eh
 4766 00:0000 -  -  -  -  tLcapAGrave		equ 6Fh
 4767 00:0000 -  -  -  -  tLcapACaret		equ 70h
 4768 00:0000 -  -  -  -  tLcapADier		equ 71h
 4769 00:0000 -  -  -  -  tLaAcute		equ 72h
 4770 00:0000 -  -  -  -  tLaGrave		equ 73h
 4771 00:0000 -  -  -  -  tLaCaret		equ 74h
 4772 00:0000 -  -  -  -  tLaDier			equ 75h
 4773 00:0000 -  -  -  -  tLcapEAcute		equ 76h
 4774 00:0000 -  -  -  -  tLcapEGrave		equ 77h
 4775 00:0000 -  -  -  -  tLcapECaret		equ 78h
 4776 00:0000 -  -  -  -  tLcapEDier		equ 79h
 4777 00:0000 -  -  -  -  tLeAcute		equ 7Ah
 4778 00:0000 -  -  -  -  tLeGrave		equ 7Bh
 4779 00:0000 -  -  -  -  tLeCaret		equ 7Ch
 4780 00:0000 -  -  -  -  tLeDier			equ 7Dh
 4781 00:0000 -  -  -  -  tLcapIGrave		equ 7Fh
 4782 00:0000 -  -  -  -  tLcapICaret		equ 80h
 4783 00:0000 -  -  -  -  tLcapIDier		equ 81h
 4784 00:0000 -  -  -  -  tLiAcute		equ 82h
 4785 00:0000 -  -  -  -  tLiGrave		equ 83h
 4786 00:0000 -  -  -  -  tLiCaret		equ 84h
 4787 00:0000 -  -  -  -  tLiDier			equ 85h
 4788 00:0000 -  -  -  -  tLcapOAcute		equ 86h
 4789 00:0000 -  -  -  -  tLcapOGrave		equ 87h
 4790 00:0000 -  -  -  -  tLcapOCaret		equ 88h
 4791 00:0000 -  -  -  -  tLcapODier		equ 89h
 4792 00:0000 -  -  -  -  tLoAcute		equ 8Ah
 4793 00:0000 -  -  -  -  tLoGrave		equ 8Bh
 4794 00:0000 -  -  -  -  tLoCaret		equ 8Ch
 4795 00:0000 -  -  -  -  tLoDier			equ 8Dh
 4796 00:0000 -  -  -  -  tLcapUAcute		equ 8Eh
 4797 00:0000 -  -  -  -  tLcapUGrave		equ 8Fh
 4798 00:0000 -  -  -  -  tLcapUCaret		equ 90h
 4799 00:0000 -  -  -  -  tLcapUDier		equ 91h
 4800 00:0000 -  -  -  -  tLuAcute		equ 92h
 4801 00:0000 -  -  -  -  tLuGrave		equ 93h
 4802 00:0000 -  -  -  -  tLuCaret		equ 94h
 4803 00:0000 -  -  -  -  tLuDier			equ 95h
 4804 00:0000 -  -  -  -  tLcapCCed		equ 96h
 4805 00:0000 -  -  -  -  tLcCed			equ 97h
 4806 00:0000 -  -  -  -  tLcapNTilde		equ 98h
 4807 00:0000 -  -  -  -  tLnTilde		equ 99h
 4808 00:0000 -  -  -  -  tLaccent		equ 9Ah
 4809 00:0000 -  -  -  -  tLgrave			equ 9Bh
 4810 00:0000 -  -  -  -  tLdieresis		equ 9Ch
 4811 00:0000 -  -  -  -  tLquesDown		equ 9Dh
 4812 00:0000 -  -  -  -  tLexclamDown		equ 9Eh
 4813 00:0000 -  -  -  -  tLalpha			equ 9Fh
 4814 00:0000 -  -  -  -  tLbeta			equ 0A0h
 4815 00:0000 -  -  -  -  tLgamma			equ 0A1h
 4816 00:0000 -  -  -  -  tLcapDelta		equ 0A2h
 4817 00:0000 -  -  -  -  tLdelta			equ 0A3h
 4818 00:0000 -  -  -  -  tLepsilon		equ 0A4h
 4819 00:0000 -  -  -  -  tLlambda		equ 0A5h
 4820 00:0000 -  -  -  -  tLmu			equ 0A6h
 4821 00:0000 -  -  -  -  tLpi			equ 0A7h
 4822 00:0000 -  -  -  -  tLrho			equ 0A8h
 4823 00:0000 -  -  -  -  tLcapSigma		equ 0A9h
 4824 00:0000 -  -  -  -  tLphi			equ 0ABh
 4825 00:0000 -  -  -  -  tLcapOmega		equ 0ACh
 4826 00:0000 -  -  -  -  tLphat			equ 0ADh
 4827 00:0000 -  -  -  -  tLchi			equ 0AEh
 4828 00:0000 -  -  -  -  tLstatF			equ 0AFh
 4829 00:0000 -  -  -  -  tLa			equ 0B0h
 4830 00:0000 -  -  -  -  tLb			equ 0B1h
 4831 00:0000 -  -  -  -  tLc			equ 0B2h
 4832 00:0000 -  -  -  -  tLd			equ 0B3h
 4833 00:0000 -  -  -  -  tLsmalle		equ 0B4h
 4834 00:0000 -  -  -  -  tLf			equ 0B5h
 4835 00:0000 -  -  -  -  tLsmallg		equ 0B6h
 4836 00:0000 -  -  -  -  tLh			equ 0B7h
 4837 00:0000 -  -  -  -  tLi			equ 0B8h
 4838 00:0000 -  -  -  -  tLj			equ 0B9h
 4839 00:0000 -  -  -  -  tLk			equ 0BAh
 4840 00:0000 -  -  -  -  tLl			equ 0BCh
 4841 00:0000 -  -  -  -  tLm			equ 0BDh
 4842 00:0000 -  -  -  -  tLsmalln		equ 0BEh
 4843 00:0000 -  -  -  -  tLo			equ 0BFh
 4844 00:0000 -  -  -  -  tLp			equ 0C0h
 4845 00:0000 -  -  -  -  tLq			equ 0C1h
 4846 00:0000 -  -  -  -  tLsmallr		equ 0C2h
 4847 00:0000 -  -  -  -  tLs			equ 0C3h
 4848 00:0000 -  -  -  -  tLsmallt		equ 0C4h
 4849 00:0000 -  -  -  -  tLu			equ 0C5h
 4850 00:0000 -  -  -  -  tLv			equ 0C6h
 4851 00:0000 -  -  -  -  tLw			equ 0C7h
 4852 00:0000 -  -  -  -  tLx			equ 0C8h
 4853 00:0000 -  -  -  -  tLy			equ 0C9h
 4854 00:0000 -  -  -  -  tLz			equ 0CAh
 4855 00:0000 -  -  -  -  tLsigma			equ 0CBh
 4856 00:0000 -  -  -  -  tLtau			equ 0CCh
 4857 00:0000 -  -  -  -  tLcapIAcute		equ 0CDh
 4858 00:0000 -  -  -  -  tGarbagec		equ 0CEh
 4859 00:0000 -  -  -  -  LastToken		equ 0CEh ;tLAST TOKEN IN THIS VERSION...
 4860 00:0000 -  -  -  -  
 4861 00:0000 -  -  -  -  ;Data Type Equates                                                    
 4862 00:0000 -  -  -  -  ;---------------------------------------------------------------------
 4863 00:0000 -  -  -  -  RealObj			equ 0
 4864 00:0000 -  -  -  -  ListObj			equ 1
 4865 00:0000 -  -  -  -  MatObj			equ 2
 4866 00:0000 -  -  -  -  EquObj			equ 3
 4867 00:0000 -  -  -  -  StrngObj		equ 4
 4868 00:0000 -  -  -  -  ProgObj			equ 5
 4869 00:0000 -  -  -  -  ProtProgObj		equ 6
 4870 00:0000 -  -  -  -  PictObj			equ 7
 4871 00:0000 -  -  -  -  GDBObj			equ 8
 4872 00:0000 -  -  -  -  UnknownObj		equ 9
 4873 00:0000 -  -  -  -  UnknownEquObj		equ 0Ah
 4874 00:0000 -  -  -  -  NewEquObj		equ 0Bh
 4875 00:0000 -  -  -  -  CplxObj			equ 0Ch
 4876 00:0000 -  -  -  -  CListObj		equ 0Dh
 4877 00:0000 -  -  -  -  UndefObj		equ 0Eh
 4878 00:0000 -  -  -  -  WindowObj		equ 0Fh
 4879 00:0000 -  -  -  -  ZStoObj			equ 10h
 4880 00:0000 -  -  -  -  TblRngObj		equ 11h
 4881 00:0000 -  -  -  -  LCDObj			equ 12h
 4882 00:0000 -  -  -  -  BackupObj		equ 13h
 4883 00:0000 -  -  -  -  AppObj			equ 14h	;application, only used in menus/link
 4884 00:0000 -  -  -  -  AppVarObj		equ 15h	;application variable
 4885 00:0000 -  -  -  -  TempProgObj		equ 16h ;program, home deletes when finished
 4886 00:0000 -  -  -  -  GroupObj		equ 17h ;group.
 4887 00:0000 -  -  -  -  
 4888 00:0000 -  -  -  -  ;I/O Equates                                                          
 4889 00:0000 -  -  -  -  ;---------------------------------------------------
 4890 00:0000 -  -  -  -  D0D1_bits		equ 03h
 4891 00:0000 -  -  -  -  D0LD1L			equ 03h
 4892 00:0000 -  -  -  -  D0LD1H			equ 01h
 4893 00:0000 -  -  -  -  D0HD1L			equ 02h
 4894 00:0000 -  -  -  -  D0HD1H			equ 00h
 4895 00:0000 -  -  -  -  bport			equ 0 ;4-bit link port (I/O) 
 4896 00:0000 -  -  -  -  
 4897 00:0000 -  -  -  -  ;Device Codes
 4898 00:0000 -  -  -  -  ;-----------------------------------------------------------------
 4899 00:0000 -  -  -  -  TI82DEV			equ 82h
 4900 00:0000 -  -  -  -  PC82DEV			equ 02h
 4901 00:0000 -  -  -  -  MAC82DEV		equ 12h
 4902 00:0000 -  -  -  -  TI83FDEV		equ 73h
 4903 00:0000 -  -  -  -  LINK83FDEV		equ 23h
 4904 00:0000 -  -  -  -  TI83DEV			equ 83h
 4905 00:0000 -  -  -  -  PC83DEV			equ 03h
 4906 00:0000 -  -  -  -  MAC83DEV		equ 13h
 4907 00:0000 -  -  -  -  TI85DEV			equ 95h ;different than real 85 so me talk
 4908 00:0000 -  -  -  -  PC85DEV			equ 05h
 4909 00:0000 -  -  -  -  MAC85DEV		equ 15h
 4910 00:0000 -  -  -  -  TI73DEV			equ 74h ;device x3 is always an 83
 4911 00:0000 -  -  -  -  PC73DEV			equ 07h
 4912 00:0000 -  -  -  -  MAC73DEV		equ 17h
 4913 00:0000 -  -  -  -  LINK73FDEV		equ 23h
 4914 00:0000 -  -  -  -  PC83FDEV		equ 23h
 4915 00:0000 -  -  -  -  
 4916 00:0000 -  -  -  -  ;System Error Codes                                                  
 4917 00:0000 -  -  -  -  ;-----------------------------------------------------------
 4918 00:0000 -  -  -  -  E_EDITF			equ 7 ;allow re-entering application
 4919 00:0000 -  -  -  -  E_EDIT			equ 1<<E_EDITF
 4920 00:0000 -  -  -  -  E_Mask			equ 7Fh
 4921 00:0000 -  -  -  -  E_Overflow		equ 1+E_EDIT
 4922 00:0000 -  -  -  -  E_DivBy0		equ 2+E_EDIT
 4923 00:0000 -  -  -  -  E_SingularMat		equ 3+E_EDIT
 4924 00:0000 -  -  -  -  E_Domain		equ 4+E_EDIT
 4925 00:0000 -  -  -  -  E_Increment		equ 5+E_EDIT
 4926 00:0000 -  -  -  -  E_Break			equ 6+E_EDIT
 4927 00:0000 -  -  -  -  E_NonReal		equ 7+E_EDIT
 4928 00:0000 -  -  -  -  E_Syntax		equ 8+E_EDIT
 4929 00:0000 -  -  -  -  E_DataType		equ 9+E_EDIT
 4930 00:0000 -  -  -  -  E_Argument		equ 10+E_EDIT
 4931 00:0000 -  -  -  -  E_DimMismatch		equ 11+E_EDIT
 4932 00:0000 -  -  -  -  E_Dimension		equ 12+E_EDIT
 4933 00:0000 -  -  -  -  E_Undefined		equ 13+E_EDIT
 4934 00:0000 -  -  -  -  E_Memory		equ 14+E_EDIT
 4935 00:0000 -  -  -  -  E_Invalid		equ 15+E_EDIT
 4936 00:0000 -  -  -  -  E_IllegalNest		equ 16+E_EDIT
 4937 00:0000 -  -  -  -  E_Bound			equ 17+E_EDIT
 4938 00:0000 -  -  -  -  E_GraphRange		equ 18+E_EDIT
 4939 00:0000 -  -  -  -  E_Zoom			equ 19+E_EDIT
 4940 00:0000 -  -  -  -  E_Label			equ 20
 4941 00:0000 -  -  -  -  E_Stat			equ 21
 4942 00:0000 -  -  -  -  E_Solver		equ 22+E_EDIT
 4943 00:0000 -  -  -  -  E_Singularity		equ 23+E_EDIT
 4944 00:0000 -  -  -  -  E_SignChange		equ 24+E_EDIT
 4945 00:0000 -  -  -  -  E_Iterations		equ 25+E_EDIT
 4946 00:0000 -  -  -  -  E_BadGuess		equ 26+E_EDIT
 4947 00:0000 -  -  -  -  E_StatPlo		equ 27
 4948 00:0000 -  -  -  -  E_TolTooSmall		equ 28+E_EDIT
 4949 00:0000 -  -  -  -  E_Reserved		equ 29+E_EDIT
 4950 00:0000 -  -  -  -  E_Mode			equ 30+E_EDIT
 4951 00:0000 -  -  -  -  E_LnkErr		equ 31+E_EDIT
 4952 00:0000 -  -  -  -  E_LnkMemErr		equ 32+E_EDIT
 4953 00:0000 -  -  -  -  E_LnkTransErr		equ 33+E_EDIT
 4954 00:0000 -  -  -  -  E_LnkDupErr		equ 34+E_EDIT
 4955 00:0000 -  -  -  -  E_LnkMemFull		equ 35+E_EDIT
 4956 00:0000 -  -  -  -  E_Unknown		equ 36+E_EDIT
 4957 00:0000 -  -  -  -  E_Scale			equ 37+E_EDIT
 4958 00:0000 -  -  -  -  E_IdNotFound		equ 38
 4959 00:0000 -  -  -  -  E_NoMode		equ 39+E_EDIT
 4960 00:0000 -  -  -  -  E_Validation		equ 40
 4961 00:0000 -  -  -  -  E_Length		equ 41+E_EDIT
 4962 00:0000 -  -  -  -  E_Application		equ 42+E_EDIT
 4963 00:0000 -  -  -  -  E_AppErr1		equ 43+E_EDIT
 4964 00:0000 -  -  -  -  E_AppErr2		equ 44+E_EDIT
 4965 00:0000 -  -  -  -  E_ExpiredApp		equ 45
 4966 00:0000 -  -  -  -  E_BadAdd		equ 46
 4967 00:0000 -  -  -  -  E_Archived		equ 47+E_EDIT
 4968 00:0000 -  -  -  -  E_Version		equ 48
 4969 00:0000 -  -  -  -  E_ArchFull		equ 49
 4970 00:0000 -  -  -  -  E_Variable		equ 50+E_EDIT
 4971 00:0000 -  -  -  -  E_Duplicate		equ 51+E_EDIT
 4972 00:0000 -  -  -  -  HigErrNum		equ 51
 4973 00:0000 -  -  -  -  ;Obsolete error numbers 34 ;first LINK error
 4974 00:0000 -  -  -  -  E_LinkIOChkSum		equ 34
 4975 00:0000 -  -  -  -  E_LinkIOTimeOut		equ 35
 4976 00:0000 -  -  -  -  E_LinkIOBusy		equ 36
 4977 00:0000 -  -  -  -  E_LinkIOVer		equ 37
 4978 00:0000 -  -  -  -  
 4979 00:0000 -  -  -  -  ;Equates To RAM Locations For Stat Vars
 4980 00:0000 -  -  -  -  ;----------------------------------------------------------------
 4981 00:0000 -  -  -  -  FPLEN			equ 9 ;Length of a floating-point number.
 4982 00:0000 -  -  -  -  StatN			equ statVars
 4983 00:0000 -  -  -  -  XMean			equ StatN + FPLEN
 4984 00:0000 -  -  -  -  SumX			equ XMean + FPLEN
 4985 00:0000 -  -  -  -  SumXSqr			equ SumX + FPLEN
 4986 00:0000 -  -  -  -  StdX			equ SumXSqr + FPLEN
 4987 00:0000 -  -  -  -  StdPX			equ StdX + FPLEN
 4988 00:0000 -  -  -  -  MinX			equ StdPX + FPLEN
 4989 00:0000 -  -  -  -  MaxX			equ MinX + FPLEN
 4990 00:0000 -  -  -  -  MinY			equ MaxX + FPLEN
 4991 00:0000 -  -  -  -  MaxY			equ MinY + FPLEN
 4992 00:0000 -  -  -  -  YMean			equ MaxY + FPLEN
 4993 00:0000 -  -  -  -  SumY			equ YMean + FPLEN
 4994 00:0000 -  -  -  -  SumYSqr			equ SumY + FPLEN
 4995 00:0000 -  -  -  -  StdY			equ SumYSqr + FPLEN
 4996 00:0000 -  -  -  -  StdPY			equ StdY + FPLEN
 4997 00:0000 -  -  -  -  SumXY			equ StdPY + FPLEN
 4998 00:0000 -  -  -  -  Corr			equ SumXY + FPLEN
 4999 00:0000 -  -  -  -  MedX			equ Corr + FPLEN
 5000 00:0000 -  -  -  -  Q1			equ MedX + FPLEN
 5001 00:0000 -  -  -  -  Q3			equ Q1 + FPLEN
 5002 00:0000 -  -  -  -  QuadA			equ Q3 + FPLEN
 5003 00:0000 -  -  -  -  QuadB			equ QuadA + FPLEN
 5004 00:0000 -  -  -  -  QuadC			equ QuadB + FPLEN
 5005 00:0000 -  -  -  -  CubeD			equ QuadC + FPLEN
 5006 00:0000 -  -  -  -  QuartE			equ CubeD + FPLEN
 5007 00:0000 -  -  -  -  MedX1			equ QuartE + FPLEN
 5008 00:0000 -  -  -  -  MedX2			equ MedX1 + FPLEN
 5009 00:0000 -  -  -  -  MedX3			equ MedX2 + FPLEN
 5010 00:0000 -  -  -  -  MedY1			equ MedX3 + FPLEN
 5011 00:0000 -  -  -  -  MedY2			equ MedY1 + FPLEN
 5012 00:0000 -  -  -  -  MedY3			equ MedY2 + FPLEN
 5013 00:0000 -  -  -  -  PStat			equ MedY3 + 2*FPLEN
 5014 00:0000 -  -  -  -  ZStat			equ PStat + FPLEN
 5015 00:0000 -  -  -  -  TStat			equ ZStat + FPLEN
 5016 00:0000 -  -  -  -  ChiStat			equ TStat + FPLEN
 5017 00:0000 -  -  -  -  FStat			equ ChiStat + FPLEN
 5018 00:0000 -  -  -  -  DF			equ FStat + FPLEN
 5019 00:0000 -  -  -  -  Phat			equ DF + FPLEN
 5020 00:0000 -  -  -  -  Phat1			equ Phat + FPLEN
 5021 00:0000 -  -  -  -  Phat2			equ Phat1 + FPLEN
 5022 00:0000 -  -  -  -  MeanX1			equ Phat2 + FPLEN
 5023 00:0000 -  -  -  -  StdX1			equ MeanX1 + FPLEN
 5024 00:0000 -  -  -  -  StatN1			equ StdX1 + FPLEN
 5025 00:0000 -  -  -  -  MeanX2			equ StatN1 + FPLEN
 5026 00:0000 -  -  -  -  StdX2			equ MeanX2 + FPLEN
 5027 00:0000 -  -  -  -  StatN2			equ StdX2 + FPLEN
 5028 00:0000 -  -  -  -  StdXP2			equ StatN2 + FPLEN
 5029 00:0000 -  -  -  -  SLower			equ StdXP2 + FPLEN
 5030 00:0000 -  -  -  -  SUpper			equ SLower + FPLEN
 5031 00:0000 -  -  -  -  SStat			equ SUpper + FPLEN
 5032 00:0000 -  -  -  -  F_DF			equ anovaf_vars
 5033 00:0000 -  -  -  -  F_SS			equ F_DF + FPLEN
 5034 00:0000 -  -  -  -  F_MS			equ F_SS + FPLEN
 5035 00:0000 -  -  -  -  E_DF			equ F_MS + FPLEN
 5036 00:0000 -  -  -  -  E_SS			equ E_DF + FPLEN
 5037 00:0000 -  -  -  -  E_MS			equ E_SS + FPLEN
Listing for file "../lib/spasm//app.asm"
   30 00:0000 -  -  -  -  
   31 00:0000 -  -  -  -          .org $4000
   32 00:4000 -  -  -  -  
   33 00:4000 -  -  -  -  ;This is the application header definition area required for all apps.
   34 00:4000 80 0F -  -   .db 080h,0Fh    ;Field: Program length
   35 00:4002 00 00 00 00  .db   00h,00h,00h,00h ;Length=0 (N/A for unsigned apps)
   36 00:4006 80 12 -  -   .db 080h,012h    ;Field: Program type
   37 00:4008 01 04 -  -   .db   01h,04h  ;Type= Shareware, TI-83Plus
   38 00:400A 80 21 -  -   .db 080h,021h    ;Field: App ID
   39 00:400C 01 -  -  -   .db   01h       ;Id = 1
   40 00:400D 80 31 -  -   .db 080h,031h    ;Field: App Build
   41 00:400F 01 -  -  -   .db   01h       ;Build = 1
   42 00:4010 80 48 -  -   .db 080h,048h    ;Field: App Name
   43 00:4012 48 65 6C 6C 
              6F 20 20 20  .db APP_NAME                ;Name = "Hello   " must be 8 characters
   44 00:401A 80 81 -  -   .db 080h,081h    ;Field: App Pages
   45 00:401C 01 -  -  -   .db 01h         ;App Pages = 1
   46 00:401D 80 90 -  -   .db 080h,090h    ;No default splash screen
   47 00:401F 03 26 09 04 
              04 6F 1B 80  .db 03h,026h ,09h,04h, 04h,06fh,01bh,80h     ;Field: Date stamp- 5/12/1999
   48 00:4027 02 0D 40 -   .db 02h,0dh,040h                             ;Dummy encrypted TI date stamp signature
   49 00:402A A1 6B 99 F6 
              59 BC 67 -   .db 0a1h ,06bh ,099h ,0f6h ,059h ,0bch ,067h 
   50 00:4031 F5 85 9C 09 
              6C 0F B4 03 
              9B C9 -  -   .db 0f5h ,085h ,09ch ,09h ,06ch ,0fh ,0b4h ,03h ,09bh ,0c9h 
   51 00:403B 03 32 2C E0 
              03 20 E3 2C 
              F4 2D -  -   .db 03h ,032h ,02ch ,0e0h ,03h ,020h ,0e3h ,02ch ,0f4h ,02dh 
   52 00:4045 73 B4 27 C4 
              A0 72 54 B9 
              EA 7C -  -   .db 073h ,0b4h ,027h ,0c4h ,0a0h ,072h ,054h ,0b9h ,0eah ,07ch 
   53 00:404F 3B AA 16 F6 
              77 83 7A EE 
              1A D4 -  -   .db 03bh ,0aah ,016h ,0f6h ,077h ,083h ,07ah ,0eeh ,01ah ,0d4h 
   54 00:4059 42 4C 6B 8B 
              13 1F BB 93 
              8B FC -  -   .db 042h ,04ch ,06bh ,08bh ,013h ,01fh ,0bbh ,093h ,08bh ,0fch 
   55 00:4063 19 1C 3C EC 
              4D E5 75 -   .db 019h ,01ch ,03ch ,0ech ,04dh ,0e5h ,075h 
   56 00:406A 80 7F -  -   .db 80h,7Fh      ;Field: Program Image length
   57 00:406C 00 00 00 00  .db   0,0,0,0    ;Length=0, N/A
   58 00:4070 00 00 00 00  .db   0,0,0,0    ;Reserved
   59 00:4074 00 00 00 00  .db   0,0,0,0    ;Reserved
   60 00:4078 00 00 00 00  .db   0,0,0,0    ;Reserved
   61 00:407C 00 00 00 00  .db   0,0,0,0    ;Reserved
   62 00:4080 -  -  -  -   
   63 00:4080 -  -  -  -  ;End of header data
   64 00:4080 -  -  -  -  
   65 00:4080 CD 8F 46 -          CALL    appMain
   66 00:4083 -  -  -  -          ;;
   67 00:4083 -  -  -  -          ;; TI's code for exiting an application, with some extras.
   68 00:4083 -  -  -  -          ;;
   69 00:4083 ED 56 -  -          IM      1
   70 00:4085 3E 01 -  -          LD      A, 01h
   71 00:4087 CD 0B 00 -          CALL    000Bh
   72 00:408A D3 10 -  -          OUT     (10h), A
   73 00:408C 3E 05 -  -          LD      A, 05h
   74 00:408E CD 0B 00 -          CALL    000Bh
   75 00:4091 D3 10 -  -          OUT     (10h), A
   76 00:4093 EF D0 4B -          bcall(_GrBufClr)
Listing for file "../lib/spasm//app.asm"
   77 00:4096 EF 40 45 -          bcall(_ClrLCDFull)
   78 00:4099 FD 36 05 00         LD      (IY+textFlags),0    ; reset text flags
   79 00:409D FB -  -  -          EI
   80 00:409E -  -  -  -          ;
   81 00:409E -  -  -  -          ; This next call is done only if application used the Graph Backup Buffer
   82 00:409E -  -  -  -          ;
   83 00:409E EF 00 4C -          bcall(_SetTblGraphDraw)
   84 00:40A1 -  -  -  -          ;
   85 00:40A1 EF 36 4C -          bcall(_ReloadAppEntryVecs)  ; make sure Application Loader set
   86 00:40A4 -  -  -  -          ;
   87 00:40A4 EF 27 40 -          bcall(_JForceCmdNoChar)     ; force to home screen
Listing for file "hello.asm"
    3 00:40A7 -  -  -  -  
    4 00:40A7 -  -  -  -  ; library inclusions
    5 00:40A7 -  -  -  -  ;
    6 00:40A7 -  -  -  -  #include "screen.asm"     ; screenUpdate,               [dependency]
Listing for file "../lib/spasm//screen.asm"
    1 00:40A7 -  -  -  -  ;;;==========================================================================;;;
    2 00:40A7 -  -  -  -  ;;; INTERFACE ////////////////////////////////////////////////////////////// ;;;
    3 00:40A7 -  -  -  -  ;;;==========================================================================;;;
    4 00:40A7 -  -  -  -  
    5 00:40A7 -  -  -  -  ;;; This library provides a high-level interface for the LCD.  Applications use
    6 00:40A7 -  -  -  -  ;;; this interface as follows:
    7 00:40A7 -  -  -  -  ;;;
    8 00:40A7 -  -  -  -  ;;;     (1) Before using any other facilities, initialize the library by calling
    9 00:40A7 -  -  -  -  ;;;         the ``screenInit'' routine.
   10 00:40A7 -  -  -  -  ;;;
   11 00:40A7 -  -  -  -  ;;;     (2) Whenever content is written to the screen buffer, indicate the
   12 00:40A7 -  -  -  -  ;;;         affected area to the library by calling an appropriate
   13 00:40A7 -  -  -  -  ;;;         ``screenTouch*'' routine.
   14 00:40A7 -  -  -  -  ;;;
   15 00:40A7 -  -  -  -  ;;;     (3) As required, show the screen image on the LCD by calling the
   16 00:40A7 -  -  -  -  ;;;         ``screenUpdate'' routine. This updates at least those areas of
   17 00:40A7 -  -  -  -  ;;;         the screen which have been ``touched'' since the last update
   18 00:40A7 -  -  -  -  ;;;         (or, for the first update, since the library was initialized).
   19 00:40A7 -  -  -  -  ;;;
   20 00:40A7 -  -  -  -  ;;; However, this library is also intended as a foundation for higher-level
   21 00:40A7 -  -  -  -  ;;; graphics libraries.
   22 00:40A7 -  -  -  -  
   23 00:40A7 -  -  -  -  
   24 00:40A7 -  -  -  -  
   25 00:40A7 -  -  -  -  #define screenDataEnd           screenData
   26 00:40A7 -  -  -  -  #define SCREEN_DATA_SIZE        0
   27 00:40A7 -  -  -  -          
   28 00:40A7 -  -  -  -  #define screenBuffer            plotSScreen
   29 00:40A7 -  -  -  -  
   30 00:40A7 -  -  -  -  
   31 00:40A7 -  -  -  -  ;;; Instead of having
   32 00:40A7 -  -  -  -  ;;; several routines that each write to the LCD in a specialized manner, the
   33 00:40A7 -  -  -  -  ;;; client code will be able to 
   34 00:40A7 -  -  -  -  screenInit:
   35 00:40A7 3E 05 -  -          LD      A, 005h
   36 00:40A9 CD 1E 41 -          CALL    lcdBusy
   37 00:40AC D3 10 -  -          OUT     (010h), A
   38 00:40AE 3E 01 -  -          LD      A, 001h
   39 00:40B0 CD 1E 41 -          CALL    lcdBusy
   40 00:40B3 D3 10 -  -          OUT     (010h), A
   41 00:40B5 C9 -  -  -          RET
   42 00:40B6 -  -  -  -  
   43 00:40B6 -  -  -  -  
   44 00:40B6 -  -  -  -  screenExit:
   45 00:40B6 C9 -  -  -          RET
   46 00:40B7 -  -  -  -  
   47 00:40B7 -  -  -  -  
   48 00:40B7 -  -  -  -  screenTouchRectangle:
   49 00:40B7 C9 -  -  -          RET
   50 00:40B8 -  -  -  -  
   51 00:40B8 -  -  -  -  
   52 00:40B8 -  -  -  -  screenUpdate:
   53 00:40B8 C5 -  -  -          PUSH    BC                     ; STACK: [PC BC]
   54 00:40B9 D5 -  -  -          PUSH    DE                     ; STACK: [PC BC DE]
   55 00:40BA E5 -  -  -          PUSH    HL                     ; STACK: [PC BC DE HL]
   56 00:40BB DD E5 -  -          PUSH    IX                     ; STACK: [PC BC DE HL IX]
   57 00:40BD 0E 0C -  -          LD      C, 12                  ; C = number of columns
   58 00:40BF 21 40 93 -          LD      HL, screenBuffer       ; HL = base of buffer
   59 00:40C2 CD E9 40 -          CALL    screenUpdateGetLoop    ; point IX to inner loop routine
   60 00:40C5 3E 80 -  -          LD      A, 080h + 0            ; set top row
   61 00:40C7 CD 1E 41 -          CALL    lcdBusy                ;
   62 00:40CA D3 10 -  -          OUT     (010h), A              ;
   63 00:40CC -  -  -  -  screenUpdate_Outer:                    ;
   64 00:40CC 06 40 -  -          LD      B, 64                  ; B = number of rows
   65 00:40CE 11 0C 00 -          LD      DE, 12                 ; DE = offset to next row
   66 00:40D1 3E 2C -  -          LD      A, 020h + 12           ; set current column
   67 00:40D3 91 -  -  -          SUB     C                      ;
   68 00:40D4 CD 1E 41 -          CALL    lcdBusy                ;
   69 00:40D7 D3 10 -  -          OUT     (010h), A              ;
   70 00:40D9 CD 24 41 -          CALL    screen_jumpIX                 ; execute inner loop
   71 00:40DC 11 01 FD -          LD      DE, -768 + 1           ; move HL to top of next column
   72 00:40DF 19 -  -  -          ADD     HL, DE                 ;
   73 00:40E0 0D -  -  -          DEC     C                      ; repeat for each column
   74 00:40E1 20 E9 -  -          JR      NZ, screenUpdate_Outer ;
   75 00:40E3 DD E1 -  -          POP     IX                     ; STACK: [PC BC DE HL]
   76 00:40E5 E1 -  -  -          POP     HL                     ; STACK: [PC BC DE]
   77 00:40E6 D1 -  -  -          POP     DE                     ; STACK: [PC BC]
   78 00:40E7 C1 -  -  -          POP     BC                     ; STACK: [PC]
   79 00:40E8 C9 -  -  -          RET                            ; return
   80 00:40E9 -  -  -  -          ;;
   81 00:40E9 -  -  -  -  screenUpdateGetLoop:
   82 00:40E9 -  -  -  -          ;; INPUT:
   83 00:40E9 -  -  -  -          ;;   <port 002h> -- determines calculator model
   84 00:40E9 -  -  -  -          ;;   <port 020h> -- determines calculator speed if model > ti83p
   85 00:40E9 -  -  -  -          ;;
   86 00:40E9 -  -  -  -          ;; OUTPUT:
   87 00:40E9 -  -  -  -          ;;   IX -- pointer to appropriate loop routine
   88 00:40E9 -  -  -  -          ;;
   89 00:40E9 DD 21 FA 40         LD      IX, screenUpdateLoop6  ; assume 6 MHz loop
   90 00:40ED DB 02 -  -          IN      A, (002h)              ; return if ti83p (always 6 MHz)
   91 00:40EF 87 -  -  -          ADD     A, A                   ;
   92 00:40F0 D0 -  -  -          RET     NC                     ;
   93 00:40F1 DB 20 -  -          IN      A, (020h)              ; return if low speed
   94 00:40F3 B7 -  -  -          OR      A                      ;
   95 00:40F4 C8 -  -  -          RET     Z                      ;
   96 00:40F5 DD 21 09 41         LD      IX, screenUpdateLoop15 ; use 15 MHz loop otherwise
   97 00:40F9 C9 -  -  -          RET
   98 00:40FA -  -  -  -          ;;
   99 00:40FA -  -  -  -  screenUpdateLoop6:
  100 00:40FA -  -  -  -          ;; INPUT:
  101 00:40FA -  -  -  -          ;;   B -- number of rows to write
  102 00:40FA -  -  -  -          ;;   DE -- 12
  103 00:40FA -  -  -  -          ;;   HL -- first buffer address
  104 00:40FA -  -  -  -          ;;
  105 00:40FA -  -  -  -          ;; OUTPUT:
  106 00:40FA -  -  -  -          ;;   bytes written to LCD
  107 00:40FA -  -  -  -          ;;
  108 00:40FA -  -  -  -          ;; Not including the ``OUT'' instruction, there are 31 states
  109 00:40FA -  -  -  -          ;; of useful work to be done per iteration.  This leaves a minimum
  110 00:40FA -  -  -  -          ;; of 29 waste states.
  111 00:40FA -  -  -  -          ;;
  112 00:40FA 00 -  -  -          NOP                            ; 4 states
  113 00:40FB 00 -  -  -          NOP                            ; 4 states
  114 00:40FC 3E 01 -  -          LD      A, 1                   ; 7 states
  115 00:40FE 3E 01 -  -          LD      A, 1                   ; 7 states
  116 00:4100 3E 01 -  -          LD      A, 1                   ; 7 states
  117 00:4102 7E -  -  -          LD      A, (HL)                ; ACC = buffer byte
  118 00:4103 19 -  -  -          ADD     HL, DE                 ; point HL to next row
  119 00:4104 D3 11 -  -          OUT     (011h), A              ; write buffer byte
  120 00:4106 10 F2 -  -          DJNZ    screenUpdateLoop6      ; repeat for each row
  121 00:4108 C9 -  -  -          RET                            ; return
  122 00:4109 -  -  -  -          ;;
  123 00:4109 -  -  -  -  screenUpdateLoop15:
  124 00:4109 -  -  -  -          ;; INPUT:
  125 00:4109 -  -  -  -          ;;   B -- number of rows to write
  126 00:4109 -  -  -  -          ;;   DE -- 12
  127 00:4109 -  -  -  -          ;;   HL -- first buffer address
  128 00:4109 -  -  -  -          ;;
  129 00:4109 -  -  -  -          ;; OUTPUT:
  130 00:4109 -  -  -  -          ;;   bytes written to LCD
  131 00:4109 -  -  -  -          ;;
  132 00:4109 -  -  -  -          ;; Exactly like screenUpdateLoop6 above, except the delay now
  133 00:4109 -  -  -  -          ;; handles 15 MHz.  This brings the number of required wait
  134 00:4109 -  -  -  -          ;; states up to 119.
  135 00:4109 -  -  -  -          ;;
  136 00:4109 F5 -  -  -          PUSH    AF                     ; 11 states
  137 00:410A F1 -  -  -          POP     AF                     ; 10 states
  138 00:410B F5 -  -  -          PUSH    AF                     ; 11 states
  139 00:410C F1 -  -  -          POP     AF                     ; 10 states
  140 00:410D F5 -  -  -          PUSH    AF                     ; 11 states
  141 00:410E F1 -  -  -          POP     AF                     ; 10 states
  142 00:410F F5 -  -  -          PUSH    AF                     ; 11 states
  143 00:4110 F1 -  -  -          POP     AF                     ; 10 states
  144 00:4111 F5 -  -  -          PUSH    AF                     ; 11 states
  145 00:4112 F1 -  -  -          POP     AF                     ; 10 states
  146 00:4113 3E 01 -  -          LD      A, 1                   ;  7 states
  147 00:4115 3E 01 -  -          LD      A, 1                   ;  7 states
  148 00:4117 7E -  -  -          LD      A, (HL)                ; ACC = buffer byte
  149 00:4118 19 -  -  -          ADD     HL, DE                 ; point HL to next row
  150 00:4119 D3 11 -  -          OUT     (011h), A              ; write buffer byte
  151 00:411B 10 EC -  -          DJNZ    screenUpdateLoop15     ; repeat for each row
  152 00:411D C9 -  -  -          RET                            ; return        
  153 00:411E -  -  -  -  
  154 00:411E -  -  -  -  
  155 00:411E -  -  -  -  lcdBusy:
  156 00:411E F5 -  -  -          PUSH    AF
  157 00:411F CD 0B 00 -          CALL    000Bh
  158 00:4122 F1 -  -  -          POP     AF
  159 00:4123 C9 -  -  -          RET
  160 00:4124 -  -  -  -  
  161 00:4124 -  -  -  -  
  162 00:4124 -  -  -  -  screen_jumpIX:
  163 00:4124 DD E9 -  -          JP      (IX)
Listing for file "hello.asm"
    7 00:4126 -  -  -  -  #include "draw.asm"       ; drawClearScreen             [dependency]
Listing for file "../lib/spasm//draw.asm"
    1 00:4126 -  -  -  -  ;;;==========================================================================;;;
    2 00:4126 -  -  -  -  ;;; DEFINITIONS //////////////////////////////////////////////////////////// ;;;
    3 00:4126 -  -  -  -  ;;;==========================================================================;;;
    4 00:4126 -  -  -  -  
    5 00:4126 -  -  -  -  #define drawDataEnd     drawData
    6 00:4126 -  -  -  -  #define DRAW_DATA_SIZE  0
    7 00:4126 -  -  -  -  
    8 00:4126 -  -  -  -  
    9 00:4126 -  -  -  -  ;;;==========================================================================;;;
   10 00:4126 -  -  -  -  ;;; INTERFACE ////////////////////////////////////////////////////////////// ;;;
   11 00:4126 -  -  -  -  ;;;==========================================================================;;;
   12 00:4126 -  -  -  -  
   13 00:4126 -  -  -  -  drawInit:
   14 00:4126 -  -  -  -          ;; INPUT:
   15 00:4126 -  -  -  -          ;;   <none>
   16 00:4126 -  -  -  -          ;;
   17 00:4126 -  -  -  -          ;; OUTPUT:
   18 00:4126 -  -  -  -          ;;   <draw data initialized>
   19 00:4126 -  -  -  -          ;;
   20 00:4126 -  -  -  -          ;; EVEN THOUGH THIS ROUTINE CURRENTLY DOES NOTHING, calling it is
   21 00:4126 -  -  -  -          ;; formally required to guarantee correct library behavior.  This
   22 00:4126 -  -  -  -          ;; is to ensure that programs which rely on this library are not
   23 00:4126 -  -  -  -          ;; broken if library initialization is required in the future.
   24 00:4126 -  -  -  -          ;;
   25 00:4126 -  -  -  -          ;; Because this library depends on the ``screen'' library, this
   26 00:4126 -  -  -  -          ;; routine must be called AFTER ``screenInit''.
   27 00:4126 -  -  -  -          ;;
   28 00:4126 C9 -  -  -          RET
   29 00:4127 -  -  -  -  
   30 00:4127 -  -  -  -  
   31 00:4127 -  -  -  -  drawExit:
   32 00:4127 C9 -  -  -          RET
   33 00:4128 -  -  -  -  
   34 00:4128 -  -  -  -  
   35 00:4128 -  -  -  -  drawRectangle:
   36 00:4128 -  -  -  -          ;; INPUT:
   37 00:4128 -  -  -  -          ;;   B -- pixelwise height of rectangle
   38 00:4128 -  -  -  -          ;;   C -- pixelwise widht of rectangle
   39 00:4128 -  -  -  -          ;;   D -- pixelwise (top) row of rectangle
   40 00:4128 -  -  -  -          ;;   E -- pixelwise (left) column of rectangle
   41 00:4128 -  -  -  -          ;;
   42 00:4128 -  -  -  -          ;; OUTPUT:
   43 00:4128 -  -  -  -          ;;   <rectangular outline written to screen buffer>
   44 00:4128 -  -  -  -          ;;
   45 00:4128 D5 -  -  -          PUSH    DE                    ; STACK: [PC DE]
   46 00:4129 CD 43 41 -          CALL    drawLineX             ; top side
   47 00:412C CD 66 41 -          CALL    drawLineY             ; left side
   48 00:412F 7A -  -  -          LD      A, D                  ; bottom side
   49 00:4130 80 -  -  -          ADD     A, B                  ;
   50 00:4131 3D -  -  -          DEC     A                     ;
   51 00:4132 57 -  -  -          LD      D, A                  ;
   52 00:4133 CD 43 41 -          CALL    drawLineX             ;
   53 00:4136 7A -  -  -          LD      A, D                  ; right side
   54 00:4137 90 -  -  -          SUB     B                     ;
   55 00:4138 3C -  -  -          INC     A                     ;
   56 00:4139 57 -  -  -          LD      D, A                  ;
   57 00:413A 7B -  -  -          LD      A, E                  ;
   58 00:413B 81 -  -  -          ADD     A, C                  ;
   59 00:413C 3D -  -  -          DEC     A                     ;
   60 00:413D 5F -  -  -          LD      E, A                  ;
   61 00:413E CD 66 41 -          CALL    drawLineY             ;
   62 00:4141 D1 -  -  -          POP     DE                    ; STACK: [PC]
   63 00:4142 C9 -  -  -          RET                           ; return
   64 00:4143 -  -  -  -  
   65 00:4143 -  -  -  -  
   66 00:4143 -  -  -  -  drawLineX:
   67 00:4143 -  -  -  -          ;; INPUT:
   68 00:4143 -  -  -  -          ;;   C -- pixelwise length of line
   69 00:4143 -  -  -  -          ;;   D -- pixelwise row of line
   70 00:4143 -  -  -  -          ;;   E -- pixelwise (left) column of line
   71 00:4143 -  -  -  -          ;;
   72 00:4143 -  -  -  -          ;;
   73 00:4143 -  -  -  -          ;; first mask: 2^(8-c%8)-1 = 2*(2^(7-c%8))-1 = 2*decode((~c)&7)-1
   74 00:4143 -  -  -  -          ;; last mask: 2^8 - 2^(8-((c+w-1)%8+1)) = -decode((-(c+w))&7)
   75 00:4143 -  -  -  -          ;;
   76 00:4143 C5 -  -  -          PUSH    BC                     ; STACK: [PC]
   77 00:4144 E5 -  -  -          PUSH    HL                     ; STACK: [PC HL]
   78 00:4145 06 01 -  -          LD      B, 1                   ; touch affected area
   79 00:4147 CD B7 40 -          CALL    screenTouchRectangle   ;
   80 00:414A CD 86 42 -          CALL    draw_getBufferAddress  ; HL = first buffer address
   81 00:414D CD A1 42 -          CALL    draw_getWidthBytewise  ; B = bytewise width of line
   82 00:4150 47 -  -  -          LD      B, A                   ;
   83 00:4151 CD B8 42 -          CALL    draw_getByteMaskRight  ; C = right byte mask
   84 00:4154 4F -  -  -          LD      C, A                   ;
   85 00:4155 CD AD 42 -          CALL    draw_getByteMaskLeft   ; ACC = left byte mask
   86 00:4158 -  -  -  -  drawLineX_loop:                        ;
   87 00:4158 10 01 -  -          DJNZ    $+3                    ; AND in mask last iteration
   88 00:415A A1 -  -  -          AND     C                      ;
   89 00:415B 04 -  -  -          INC     B                      ;
   90 00:415C B6 -  -  -          OR      (HL)                   ; OR in ACC
   91 00:415D 77 -  -  -          LD      (HL), A                ;
   92 00:415E 23 -  -  -          INC     HL                     ; next byte
   93 00:415F 3E FF -  -          LD      A, 0FFh                ; ACC = all ones for next time
   94 00:4161 10 F5 -  -          DJNZ    drawLineX_loop         ; repeat until counter 0
   95 00:4163 E1 -  -  -          POP     HL                     ; STACK: [PC BC]
   96 00:4164 C1 -  -  -          POP     BC                     ; STACK: [PC]
   97 00:4165 C9 -  -  -          RET                            ; return
   98 00:4166 -  -  -  -  
   99 00:4166 -  -  -  -  
  100 00:4166 -  -  -  -  drawLineY:
  101 00:4166 -  -  -  -          ;; INPUT:
  102 00:4166 -  -  -  -          ;;   B -- pixelwise length of line
  103 00:4166 -  -  -  -          ;;   D -- pixelwise (top) row of line
  104 00:4166 -  -  -  -          ;;   E -- pixelwise column of line
  105 00:4166 -  -  -  -          ;;
  106 00:4166 -  -  -  -          ;; OUTPUT:
  107 00:4166 -  -  -  -          ;;   <vertical line drawn to screen buffer>
  108 00:4166 -  -  -  -          ;;
  109 00:4166 C5 -  -  -          PUSH    BC                   ; STACK: [PC BC]
  110 00:4167 D5 -  -  -          PUSH    DE                   ; STACK: [PC BC DE]
  111 00:4168 E5 -  -  -          PUSH    HL                   ; STACK: [PC BC DE HL]
  112 00:4169 0E 01 -  -          LD      C, 1                 ; touch affected area
  113 00:416B CD B7 40 -          CALL    screenTouchRectangle ;
  114 00:416E CD 86 42 -          CALL    getBufferAddress     ; HL = first buffer address
  115 00:4171 7B -  -  -          LD      A, E                 ; C = byte
  116 00:4172 2F -  -  -          CPL                          ;
  117 00:4173 E6 07 -  -          AND     007h                 ;
  118 00:4175 CD 71 42 -          CALL    decodeByte           ;
  119 00:4178 4F -  -  -          LD      C, A                 ;
  120 00:4179 11 0C 00 -          LD      DE, 12               ; DE = offset to next buffer row
  121 00:417C -  -  -  -  drawLineY_loop:                      ;
  122 00:417C 7E -  -  -          LD      A, (HL)              ; apply byte to buffer
  123 00:417D B1 -  -  -          OR      C                    ;
  124 00:417E 77 -  -  -          LD      (HL), A              ;
  125 00:417F 19 -  -  -          ADD     HL, DE               ; move on to next row
  126 00:4180 10 FA -  -          DJNZ    drawLineY_loop       ; repeat for each pixel
  127 00:4182 E1 -  -  -          POP     HL                   ; STACK: [PC BC DE]
  128 00:4183 D1 -  -  -          POP     DE                   ; STACK: [PC BC]
  129 00:4184 C1 -  -  -          POP     BC                   ; STACK: [PC]
  130 00:4185 C9 -  -  -          RET                          ; return
  131 00:4186 -  -  -  -  
  132 00:4186 -  -  -  -  
  133 00:4186 -  -  -  -  drawClearRectangle:
  134 00:4186 -  -  -  -          ;; INPUT:
  135 00:4186 -  -  -  -          ;;   B -- pixelwise height of rectangle
  136 00:4186 -  -  -  -          ;;   C -- pixelwise width of rectangle
  137 00:4186 -  -  -  -          ;;   D -- pixelwise (top) row of rectangle
  138 00:4186 -  -  -  -          ;;   E -- pixelwise (left) column of rectangle
  139 00:4186 -  -  -  -          ;;
  140 00:4186 -  -  -  -          ;; OUTPUT:
  141 00:4186 -  -  -  -          ;;   <rectangular area forced clear>
  142 00:4186 -  -  -  -          ;;
  143 00:4186 C5 -  -  -          PUSH    BC                      ; STACK: [PC BC]
  144 00:4187 D5 -  -  -          PUSH    DE                      ; STACK: [PC BC DE]
  145 00:4188 -  -  -  -  drawClearRectangle_loop:                ;
  146 00:4188 CD 91 41 -          CALL    drawClearLineX          ; clear line at current row
  147 00:418B 14 -  -  -          INC     D                       ; move to next row
  148 00:418C 10 FA -  -          DJNZ    drawClearRectangle_loop ; repeat for each row
  149 00:418E D1 -  -  -          POP     DE                      ; STACK: [PC BC]
  150 00:418F C1 -  -  -          POP     BC                      ; STACK: [PC]
  151 00:4190 C9 -  -  -          RET                             ; return
  152 00:4191 -  -  -  -  
  153 00:4191 -  -  -  -  
  154 00:4191 -  -  -  -  drawClearLineX:
  155 00:4191 -  -  -  -          ;; INPUT:
  156 00:4191 -  -  -  -          ;;   C -- pixelwise length of line
  157 00:4191 -  -  -  -          ;;   D -- pixelwise row of line
  158 00:4191 -  -  -  -          ;;   E -- pixelwise (left) column of line
  159 00:4191 -  -  -  -          ;;
  160 00:4191 -  -  -  -          ;; OUTPUT:
  161 00:4191 -  -  -  -          ;;   <line forced clear>
  162 00:4191 -  -  -  -          ;;
  163 00:4191 C5 -  -  -          PUSH    BC                            ; STACK: [PC BC]
  164 00:4192 E5 -  -  -          PUSH    HL                            ; STACK: [PC BC HL]
  165 00:4193 CD 86 42 -          CALL    draw_getBufferAddress         ; HL = first buffer address
  166 00:4196 CD A1 42 -          CALL    draw_getWidthBytewise         ; B = bytewise width
  167 00:4199 47 -  -  -          LD      B, A                          ;
  168 00:419A CD B8 42 -          CALL    draw_getByteMaskRight         ; C = ~right mask
  169 00:419D 2F -  -  -          CPL                                   ;
  170 00:419E 4F -  -  -          LD      C, A                          ;
  171 00:419F CD AD 42 -          CALL    draw_getByteMaskLeft          ; ACC = ~left mask
  172 00:41A2 2F -  -  -          CPL                                   ;
  173 00:41A3 -  -  -  -  drawClearLineX_loop:                          ;
  174 00:41A3 10 01 -  -          DJNZ    $+3                           ; if last iteration:
  175 00:41A5 B1 -  -  -          OR      C                             ;     OR in right mask
  176 00:41A6 04 -  -  -          INC     B                             ;
  177 00:41A7 A6 -  -  -          AND     (HL)                          ; AND ACC into buffer byte
  178 00:41A8 77 -  -  -          LD      (HL), A                       ;
  179 00:41A9 23 -  -  -          INC     HL                            ; point HL to next buffer byte
  180 00:41AA AF -  -  -          XOR     A                             ; ACC = 0 for next time
  181 00:41AB 10 F6 -  -          DJNZ    drawClearLineX_loop           ; repeat loop
  182 00:41AD E1 -  -  -          POP     HL                            ; STACK: [PC BC]
  183 00:41AE C1 -  -  -          POP     BC                            ; STACK: [PC]
  184 00:41AF C9 -  -  -          RET                                   ; return
  185 00:41B0 -  -  -  -          
  186 00:41B0 -  -  -  -  
  187 00:41B0 -  -  -  -  drawClearScreen:
  188 00:41B0 -  -  -  -          ;; INPUT:
  189 00:41B0 -  -  -  -          ;;   <none>
  190 00:41B0 -  -  -  -          ;;
  191 00:41B0 -  -  -  -          ;; OUTPUT:
  192 00:41B0 -  -  -  -          ;;   <entire screen forced clear>
  193 00:41B0 -  -  -  -          ;;
  194 00:41B0 -  -  -  -          ;; This routine is functionally a special case of ``drawClearRectangle''
  195 00:41B0 -  -  -  -          ;; above, but its implementation is much simpler and this case is very
  196 00:41B0 -  -  -  -          ;; common.
  197 00:41B0 -  -  -  -          ;;
  198 00:41B0 C5 -  -  -          PUSH    BC                   ; STACK: [PC BC]
  199 00:41B1 D5 -  -  -          PUSH    DE                   ; STACK: [PC BC DE]
  200 00:41B2 E5 -  -  -          PUSH    HL                   ; STACK: [PC BC DE HL]
  201 00:41B3 21 40 93 -          LD      HL, screenBuffer     ; HL = buffer
  202 00:41B6 11 41 93 -          LD      DE, screenBuffer + 1 ; DE = buffer + 1
  203 00:41B9 01 FF 02 -          LD      BC, 767              ; BC = size - 1
  204 00:41BC 36 00 -  -          LD      (HL), 0              ; "seed" first byte
  205 00:41BE ED B0 -  -          LDIR                         ; propagate
  206 00:41C0 11 00 00 -          LD      DE, 0                ; touch rectangle covering screen
  207 00:41C3 01 60 40 -          LD      BC, 64*256+96        ;
  208 00:41C6 CD B7 40 -          CALL    screenTouchRectangle ;
  209 00:41C9 E1 -  -  -          POP     HL                   ; STACK: [PC BC DE]
  210 00:41CA D1 -  -  -          POP     DE                   ; STACK: [PC BC]
  211 00:41CB C1 -  -  -          POP     BC                   ; STACK: [PC]
  212 00:41CC C9 -  -  -          RET                          ; return
  213 00:41CD -  -  -  -  
  214 00:41CD -  -  -  -  
  215 00:41CD -  -  -  -  drawEraseRectangular:
  216 00:41CD -  -  -  -          ;; INPUT:
  217 00:41CD -  -  -  -          ;;   B -- pixelwise height of region
  218 00:41CD -  -  -  -          ;;   C -- pixelwise width of region (
  219 00:41CD -  -  -  -          ;;   D -- pixelwise (top) row of region
  220 00:41CD -  -  -  -          ;;   E -- pixelwise (left) column of region
  221 00:41CD -  -  -  -          ;;
  222 00:41CD -  -  -  -          ;; OUTPUT:
  223 00:41CD -  -  -  -          ;;
  224 00:41CD C5 -  -  -          PUSH    BC
  225 00:41CE D5 -  -  -          PUSH    DE
  226 00:41CF E5 -  -  -          PUSH    HL
  227 00:41D0 CD 86 42 -          CALL    getBufferAddress
  228 00:41D3 7B -  -  -          LD      A, E
  229 00:41D4 2F -  -  -          CPL
  230 00:41D5 E6 07 -  -          AND     007h
  231 00:41D7 CD 71 42 -          CALL    decodeByte
  232 00:41DA 87 -  -  -          ADD     A, A
  233 00:41DB ED 44 -  -          NEG
  234 00:41DD -  -  -  -  drawMaskRectangularLoop:
  235 00:41DD 7E -  -  -          LD      A, (HL)
  236 00:41DE A2 -  -  -          AND     D
  237 00:41DF 77 -  -  -          LD      (HL), A
  238 00:41E0 23 -  -  -          INC     HL
  239 00:41E1 7E -  -  -          LD      A, (HL)
  240 00:41E2 A3 -  -  -          AND     E
  241 00:41E3 77 -  -  -          LD      (HL), A
  242 00:41E4 78 -  -  -          LD      A, B
  243 00:41E5 06 00 -  -          LD      B, 0
  244 00:41E7 09 -  -  -          ADD     HL, BC
  245 00:41E8 47 -  -  -          LD      B, A
  246 00:41E9 10 F2 -  -          DJNZ    drawMaskRectangularLoop
  247 00:41EB E1 -  -  -          POP     HL
  248 00:41EC D1 -  -  -          POP     DE
  249 00:41ED C1 -  -  -          POP     BC
  250 00:41EE C9 -  -  -          RET
  251 00:41EF -  -  -  -  
  252 00:41EF -  -  -  -  
  253 00:41EF -  -  -  -  ;;;==========================================================================;;;
  254 00:41EF -  -  -  -  ;;; IMAGERY ROUTINES /////////////////////////////////////////////////////// ;;;
  255 00:41EF -  -  -  -  ;;;==========================================================================;;;
  256 00:41EF -  -  -  -          
  257 00:41EF -  -  -  -  drawPicture:
  258 00:41EF -  -  -  -          ;; INPUT:
  259 00:41EF -  -  -  -          ;;   B -- pixelwise height of sprite
  260 00:41EF -  -  -  -          ;;   D -- pixelwise (top) row for sprite
  261 00:41EF -  -  -  -          ;;   E -- pixelwise (left) column for sprite
  262 00:41EF -  -  -  -          ;;   HL -- base of picture data
  263 00:41EF -  -  -  -          ;;
  264 00:41EF -  -  -  -          ;; OUTPUT:
  265 00:41EF -  -  -  -          ;;   (screenBuffer) -- updated to reflect picture
  266 00:41EF -  -  -  -          ;;   <screen data> -- affected rectangle touched
  267 00:41EF -  -  -  -          ;;
  268 00:41EF C5 -  -  -          PUSH    BC                     ; STACK: [PC BC]
  269 00:41F0 D5 -  -  -          PUSH    DE                     ; STACK: [PC BC DE]
  270 00:41F1 E5 -  -  -          PUSH    HL                     ; STACK: [PC BC DE HL]
  271 00:41F2 DD E5 -  -          PUSH    IX                     ; STACK: [PC BC DE HL IX]
  272 00:41F4 E5 -  -  -          PUSH    HL                     ; STACK: [PC BC DE HL IX HL]
  273 00:41F5 0E 08 -  -          LD      C, 8                   ; touch affected area
  274 00:41F7 CD B7 40 -          CALL    screenTouchRectangle   ;
  275 00:41FA CD 86 42 -          CALL    getBufferAddress       ; HL = buffer address
  276 00:41FD 7B -  -  -          LD      A, E                   ; E = ACC = (~E) % 8
  277 00:41FE 2F -  -  -          CPL                            ;
  278 00:41FF E6 07 -  -          AND     007h                   ;
  279 00:4201 5F -  -  -          LD      E, A                   ;
  280 00:4202 CD 71 42 -          CALL    decodeByte             ; C = mask byte
  281 00:4205 3D -  -  -          DEC     A                      ;
  282 00:4206 87 -  -  -          ADD     A, A                   ;
  283 00:4207 3C -  -  -          INC     A                      ;
  284 00:4208 4F -  -  -          LD      C, A                   ;
  285 00:4209 DD 21 17 42         LD      IX, drawPictureRotates ; point IX to rotate code
  286 00:420D 16 00 -  -          LD      D, 0                   ;
  287 00:420F DD 19 -  -          ADD     IX, DE                 ;
  288 00:4211 D1 -  -  -          POP     DE                     ; STACK: [PC BC DE HL IX]
  289 00:4212 -  -  -  -  drawPictureLoop:                       ;
  290 00:4212 C5 -  -  -          PUSH    BC                     ; STACK: [PC BC DE HL IX BC]
  291 00:4213 1A -  -  -          LD      A, (DE)                ; ACC = picture byte
  292 00:4214 13 -  -  -          INC     DE                     ; advance DE to next picture byte
  293 00:4215 DD E9 -  -          JP      (IX)                   ; rotate byte
  294 00:4217 -  -  -  -  drawPictureRotates:                    ;
  295 00:4217 0F -  -  -          RRCA                           ;
  296 00:4218 0F -  -  -          RRCA                           ;
  297 00:4219 0F -  -  -          RRCA                           ;
  298 00:421A 0F -  -  -          RRCA                           ;
  299 00:421B 0F -  -  -          RRCA                           ;
  300 00:421C 0F -  -  -          RRCA                           ;
  301 00:421D 0F -  -  -          RRCA                           ;
  302 00:421E 47 -  -  -          LD      B, A                   ; B = rotated byte
  303 00:421F A1 -  -  -          AND     C                      ; apply byte AND mask to buffer
  304 00:4220 B6 -  -  -          OR      (HL)                   ;
  305 00:4221 77 -  -  -          LD      (HL), A                ;
  306 00:4222 23 -  -  -          INC     HL                     ; move to next buffer byte
  307 00:4223 79 -  -  -          LD      A, C                   ; apply byte AND ~mask to buffer
  308 00:4224 2F -  -  -          CPL                            ;
  309 00:4225 A0 -  -  -          AND     B                      ;
  310 00:4226 B6 -  -  -          OR      (HL)                   ;
  311 00:4227 77 -  -  -          LD      (HL), A                ;
  312 00:4228 01 0B 00 -          LD      BC, 11                 ; move HL to next row
  313 00:422B 09 -  -  -          ADD     HL, BC                 ;
  314 00:422C C1 -  -  -          POP     BC                     ; STACK: [PC BC DE HL IX]
  315 00:422D 10 E3 -  -          DJNZ    drawPictureLoop        ; repeat loop
  316 00:422F DD E1 -  -          POP     IX                     ; STACK: [PC BC DE HL]
  317 00:4231 E1 -  -  -          POP     HL                     ; STACK: [PC BC DE]
  318 00:4232 D1 -  -  -          POP     DE                     ; STACK: [PC BC]
  319 00:4233 C1 -  -  -          POP     BC                     ; STACK: [PC]
  320 00:4234 C9 -  -  -          RET                            ; return
  321 00:4235 -  -  -  -  
  322 00:4235 -  -  -  -  
  323 00:4235 -  -  -  -  drawSprite:
  324 00:4235 -  -  -  -          ;; INPUT:
  325 00:4235 -  -  -  -          ;;   B -- pixelwise height of sprite
  326 00:4235 -  -  -  -          ;;   D -- pixelwise (top) row for sprite
  327 00:4235 -  -  -  -          ;;   E -- pixelwise (left) column for sprite
  328 00:4235 -  -  -  -          ;;   HL -- base of picture data
  329 00:4235 -  -  -  -          ;;   IX -- base of mask data
  330 00:4235 -  -  -  -          ;;
  331 00:4235 -  -  -  -          ;; OUTPUT:
  332 00:4235 -  -  -  -          ;;   <sprite drawn to buffer>
  333 00:4235 -  -  -  -          ;;
  334 00:4235 -  -  -  -          ;; 
  335 00:4235 C5 -  -  -          PUSH    BC                   ; STACK: [PC BC]
  336 00:4236 D5 -  -  -          PUSH    DE                   ; STACK: [PC BC DE]
  337 00:4237 E5 -  -  -          PUSH    HL                   ; STACK: [PC BC DE HL]
  338 00:4238 DD E5 -  -          PUSH    IX                   ; STACK: [PC BC DE HL IX]
  339 00:423A 0E 08 -  -          LD      C, 8                 ; touch affected area
  340 00:423C CD B7 40 -          CALL    screenTouchRectangle ;
  341 00:423F CD 86 42 -          CALL    getBufferAddress     ; HL = buffer address
  342 00:4242 DD 21 53 42         LD      IX, drawSpriteRotates ; point IX to rotates
  343 00:4246 7B -  -  -          LD      A, E                  ;
  344 00:4247 2F -  -  -          CPL                           ;
  345 00:4248 E6 07 -  -          AND     007h                  ;
  346 00:424A 5F -  -  -          LD      E, A                  ;
  347 00:424B 87 -  -  -          ADD     A, A                  ;
  348 00:424C 83 -  -  -          ADD     A, E                  ;
  349 00:424D 16 00 -  -          LD      D, 0                  ;
  350 00:424F DD 19 -  -          ADD     IX, DE                ;
  351 00:4251 -  -  -  -  drawSpriteLoop:                      ;
  352 00:4251 DD E9 -  -          JP      (IX)                 ; rotate both bytes
  353 00:4253 -  -  -  -  drawSpriteRotates:                   ;
  354 00:4253 CB 09 -  -          RRC     C                    ;
  355 00:4255 0F -  -  -          RRCA                         ;
  356 00:4256 CB 09 -  -          RRC     C                    ;
  357 00:4258 0F -  -  -          RRCA                         ;
  358 00:4259 CB 09 -  -          RRC     C                    ;
  359 00:425B 0F -  -  -          RRCA                         ;
  360 00:425C CB 09 -  -          RRC     C                    ;
  361 00:425E 0F -  -  -          RRCA                         ;
  362 00:425F CB 09 -  -          RRC     C                    ;
  363 00:4261 0F -  -  -          RRCA                         ;
  364 00:4262 CB 09 -  -          RRC     C                    ;
  365 00:4264 0F -  -  -          RRCA                         ;
  366 00:4265 CB 09 -  -          RRC     C                    ;
  367 00:4267 0F -  -  -          RRCA                         ;
  368 00:4268 19 -  -  -          ADD     HL, DE               ;
  369 00:4269 10 E6 -  -          DJNZ    drawSpriteLoop       ;
  370 00:426B DD E1 -  -          POP     IX                   ;
  371 00:426D E1 -  -  -          POP     HL                   ;
  372 00:426E D1 -  -  -          POP     DE                   ;
  373 00:426F C1 -  -  -          POP     BC                   ;
  374 00:4270 C9 -  -  -          RET                          ;
  375 00:4271 -  -  -  -  
  376 00:4271 -  -  -  -  
  377 00:4271 -  -  -  -  ;;;==================;;;
  378 00:4271 -  -  -  -  ;;; UTILITY ROUTINES ;;;
  379 00:4271 -  -  -  -  ;;;==================;;;
  380 00:4271 -  -  -  -  
  381 00:4271 -  -  -  -  draw_decodeByte:
  382 00:4271 -  -  -  -  decodeByte:
  383 00:4271 -  -  -  -          ;; INPUT:
  384 00:4271 -  -  -  -          ;;   ACC -- encoded number (0-7, inclusive)
  385 00:4271 -  -  -  -          ;;
  386 00:4271 -  -  -  -          ;; OUTPUT:
  387 00:4271 -  -  -  -          ;;   ACC -- decoded number (2^input)
  388 00:4271 -  -  -  -          ;;
  389 00:4271 -  -  -  -          ;; If I write enough routines similar to this one, maybe they should
  390 00:4271 -  -  -  -          ;; go in their own library.
  391 00:4271 -  -  -  -          ;;
  392 00:4271 D5 -  -  -          PUSH    DE                   ; STACK: [PC DE]
  393 00:4272 E5 -  -  -          PUSH    HL                   ; STACK: [PC DE HL]
  394 00:4273 21 7E 42 -          LD      HL, decodeByteTable  ; HL = base of table
  395 00:4276 5F -  -  -          LD      E, A                 ; DE = ACC
  396 00:4277 16 00 -  -          LD      D, 0                 ;
  397 00:4279 19 -  -  -          ADD     HL, DE               ; point HL to decoded byte
  398 00:427A 7E -  -  -          LD      A, (HL)              ; ACC = decoded byte
  399 00:427B E1 -  -  -          POP     HL                   ; STACK: [PC DE]
  400 00:427C D1 -  -  -          POP     DE                   ; STACK: [PC]
  401 00:427D C9 -  -  -          RET                          ; return
  402 00:427E -  -  -  -          ;;
  403 00:427E -  -  -  -  draw_decodeByte_table:
  404 00:427E -  -  -  -  decodeByteTable:
  405 00:427E 01 -  -  -          .db     00000001b            ; 1 << 0
  406 00:427F 02 -  -  -          .db     00000010b            ; 1 << 1
  407 00:4280 04 -  -  -          .db     00000100b            ; 1 << 2
  408 00:4281 08 -  -  -          .db     00001000b            ; 1 << 3
  409 00:4282 10 -  -  -          .db     00010000b            ; 1 << 4
  410 00:4283 20 -  -  -          .db     00100000b            ; 1 << 5
  411 00:4284 40 -  -  -          .db     01000000b            ; 1 << 6
  412 00:4285 80 -  -  -          .db     10000000b            ; 1 << 7
  413 00:4286 -  -  -  -  
  414 00:4286 -  -  -  -  
  415 00:4286 -  -  -  -  draw_getBufferAddress:
  416 00:4286 -  -  -  -  getBufferAddress:
  417 00:4286 -  -  -  -          ;; INPUT:
  418 00:4286 -  -  -  -          ;;   D -- pixelwise row
  419 00:4286 -  -  -  -          ;;   E -- pixelwise column
  420 00:4286 -  -  -  -          ;;
  421 00:4286 -  -  -  -          ;; OUTPUT:
  422 00:4286 -  -  -  -          ;;   HL -- buffer address
  423 00:4286 -  -  -  -          ;;
  424 00:4286 C5 -  -  -          PUSH    BC                 ; STACK: [PC BC]
  425 00:4287 7A -  -  -          LD      A, D               ; ACC = 4 * row
  426 00:4288 87 -  -  -          ADD     A, A               ;
  427 00:4289 87 -  -  -          ADD     A, A               ;
  428 00:428A 6F -  -  -          LD      L, A               ; BC = HL = 4 * row
  429 00:428B 26 00 -  -          LD      H, 0               ;
  430 00:428D 4D -  -  -          LD      C, L               ;
  431 00:428E 44 -  -  -          LD      B, H               ;
  432 00:428F 29 -  -  -          ADD     HL, HL             ; HL = 8 * row
  433 00:4290 09 -  -  -          ADD     HL, BC             ; HL = 12 * row
  434 00:4291 7B -  -  -          LD      A, E               ; BC = ACC = column // 8
  435 00:4292 0F -  -  -          RRCA                       ;
  436 00:4293 0F -  -  -          RRCA                       ;
  437 00:4294 0F -  -  -          RRCA                       ;
  438 00:4295 E6 1F -  -          AND     00011111b          ;
  439 00:4297 4F -  -  -          LD      C, A               ;
  440 00:4298 06 00 -  -          LD      B, 0               ;
  441 00:429A 09 -  -  -          ADD     HL, BC             ; HL = 12 * row + column // 8
  442 00:429B 01 40 93 -          LD      BC, screenBuffer   ; HL = buffer + 12 * row + column // 8
  443 00:429E 09 -  -  -          ADD     HL, BC             ;
  444 00:429F C1 -  -  -          POP     BC                 ; STACK: [PC]
  445 00:42A0 C9 -  -  -          RET                        ; return
  446 00:42A1 -  -  -  -  
  447 00:42A1 -  -  -  -  
  448 00:42A1 -  -  -  -  draw_getWidthBytewise:
  449 00:42A1 -  -  -  -          ;; INPUT:
  450 00:42A1 -  -  -  -          ;;   C -- pixelwise width of rectangular region
  451 00:42A1 -  -  -  -          ;;   E -- pixelwise (left) column of rectangular region
  452 00:42A1 -  -  -  -          ;;
  453 00:42A1 -  -  -  -          ;; OUTPUT:
  454 00:42A1 -  -  -  -          ;;   ACC -- bytewise width of rectangular region
  455 00:42A1 -  -  -  -          ;;
  456 00:42A1 -  -  -  -          ;; By ``bytewise width'', we mean the number of byte-wide columns
  457 00:42A1 -  -  -  -          ;; with which the rectangular region intersects, NOT just the number
  458 00:42A1 -  -  -  -          ;; of times 8 goes into the width.  Two different rectangles of the
  459 00:42A1 -  -  -  -          ;; same pixelwise width can differ in bytewise width by starting in
  460 00:42A1 -  -  -  -          ;; different columns.
  461 00:42A1 -  -  -  -          ;;
  462 00:42A1 7B -  -  -          LD      A, E                 ; ACC = column % 8 + width - 1
  463 00:42A2 E6 07 -  -          AND     007h                 ;
  464 00:42A4 81 -  -  -          ADD     A, C                 ;
  465 00:42A5 3D -  -  -          DEC     A                    ;
  466 00:42A6 0F -  -  -          RRCA                         ; ACC >>= 3 (ACC //= 8)
  467 00:42A7 0F -  -  -          RRCA                         ;
  468 00:42A8 0F -  -  -          RRCA                         ;
  469 00:42A9 E6 1F -  -          AND     01Fh                 ;
  470 00:42AB 3C -  -  -          INC     A                    ; ACC += 1
  471 00:42AC C9 -  -  -          RET                          ; return
  472 00:42AD -  -  -  -  
  473 00:42AD -  -  -  -  
  474 00:42AD -  -  -  -  draw_getByteMaskLeft:
  475 00:42AD -  -  -  -          ;; INPUT:
  476 00:42AD -  -  -  -          ;;   E -- pixelwise (left) column of rectangular region
  477 00:42AD -  -  -  -          ;;
  478 00:42AD -  -  -  -          ;; OUTPUT:
  479 00:42AD -  -  -  -          ;;   ACC -- left-side byte mask
  480 00:42AD -  -  -  -          ;;
  481 00:42AD 7B -  -  -          LD      A, E                 ; ACC = first byte mask
  482 00:42AE 2F -  -  -          CPL                          ;
  483 00:42AF E6 07 -  -          AND     007h                 ;
  484 00:42B1 CD 71 42 -          CALL    decodeByte           ;
  485 00:42B4 3D -  -  -          DEC     A                    ;
  486 00:42B5 87 -  -  -          ADD     A, A                 ;
  487 00:42B6 3C -  -  -          INC     A                    ;
  488 00:42B7 C9 -  -  -          RET                          ; return
  489 00:42B8 -  -  -  -  
  490 00:42B8 -  -  -  -  
  491 00:42B8 -  -  -  -  draw_getByteMaskRight:
  492 00:42B8 -  -  -  -          ;; INPUT:
  493 00:42B8 -  -  -  -          ;;   C -- pixelwise width of rectangular region
  494 00:42B8 -  -  -  -          ;;   E -- pixelwise (left) column of rectangular region
  495 00:42B8 -  -  -  -          ;;
  496 00:42B8 -  -  -  -          ;; OUTPUT:
  497 00:42B8 -  -  -  -          ;;   ACC -- right-side byte mask
  498 00:42B8 -  -  -  -          ;;
  499 00:42B8 7B -  -  -          LD      A, E                 ; ACC = -(2^((-width-column)%8))
  500 00:42B9 81 -  -  -          ADD     A, C                 ;
  501 00:42BA ED 44 -  -          NEG                          ;
  502 00:42BC E6 07 -  -          AND     007h                 ;
  503 00:42BE CD 71 42 -          CALL    decodeByte           ;
  504 00:42C1 ED 44 -  -          NEG                          ;
  505 00:42C3 C9 -  -  -          RET                          ; return
Listing for file "hello.asm"
    8 00:42C4 -  -  -  -  #include "write.asm"      ; writeSetFont, writeString
Listing for file "../lib/spasm//write.asm"
    1 00:42C4 -  -  -  -  ;;; write.asm -- Library for writing text on the screen.
    2 00:42C4 -  -  -  -  
    3 00:42C4 -  -  -  -  ;;;==========================================================================;;;
    4 00:42C4 -  -  -  -  ;;; DEFINITIONS //////////////////////////////////////////////////////////// ;;;
    5 00:42C4 -  -  -  -  ;;;==========================================================================;;;
    6 00:42C4 -  -  -  -  
    7 00:42C4 -  -  -  -  #define writeFontDimensions     writeData + 0
    8 00:42C4 -  -  -  -  #define writeFontArray          writeFontDimensions + 2
    9 00:42C4 -  -  -  -  #define writeDataEnd            writeFontArray + 2
   10 00:42C4 -  -  -  -  #define WRITE_DATA_SIZE         4
   11 00:42C4 -  -  -  -  
   12 00:42C4 -  -  -  -  ;;;==========================================================================;;;
   13 00:42C4 -  -  -  -  ;;; INTERFACE ////////////////////////////////////////////////////////////// ;;;
   14 00:42C4 -  -  -  -  ;;;==========================================================================;;;
   15 00:42C4 -  -  -  -  
   16 00:42C4 -  -  -  -  writeInit:
   17 00:42C4 -  -  -  -          ;; INPUT:
   18 00:42C4 -  -  -  -          ;;   <none>
   19 00:42C4 -  -  -  -          ;;
   20 00:42C4 -  -  -  -          ;; OUTPUT:
   21 00:42C4 -  -  -  -          ;;   <write library initialized>
   22 00:42C4 -  -  -  -          ;;
   23 00:42C4 -  -  -  -          ;; Writing text is NOT GUARANTEED TO WORK until a font is set with
   24 00:42C4 -  -  -  -          ;; writeSetFont below.
   25 00:42C4 -  -  -  -          ;;
   26 00:42C4 C9 -  -  -          RET
   27 00:42C5 -  -  -  -  
   28 00:42C5 -  -  -  -  
   29 00:42C5 -  -  -  -  writeExit:
   30 00:42C5 C9 -  -  -          RET
   31 00:42C6 -  -  -  -  
   32 00:42C6 -  -  -  -  
   33 00:42C6 -  -  -  -  writeSetFont:
   34 00:42C6 -  -  -  -          ;; INPUT:
   35 00:42C6 -  -  -  -          ;;   HL -- base of font data
   36 00:42C6 -  -  -  -          ;;
   37 00:42C6 -  -  -  -          ;; OUTPUT:
   38 00:42C6 -  -  -  -          ;;   <font initialized in library>
   39 00:42C6 -  -  -  -          ;;
   40 00:42C6 C5 -  -  -          PUSH    BC                        ; STACK: [PC BC]
   41 00:42C7 E5 -  -  -          PUSH    HL                        ; STACK: [PC BC HL]
   42 00:42C8 4E -  -  -          LD      C, (HL)                   ; BC = dimensions, HL = array base
   43 00:42C9 23 -  -  -          INC     HL                        ;
   44 00:42CA 46 -  -  -          LD      B, (HL)                   ;
   45 00:42CB 23 -  -  -          INC     HL                        ;
   46 00:42CC ED 43 EC 86         LD      (writeFontDimensions), BC ; (writeFontDimensiosn) = dimensions
   47 00:42D0 22 EE 86 -          LD      (writeFontArray), HL      ; (writeFontBase) = array base
   48 00:42D3 E1 -  -  -          POP     HL                        ; STACK: [PC BC]
   49 00:42D4 C1 -  -  -          POP     BC                        ; STACK: [PC]
   50 00:42D5 C9 -  -  -          RET                               ; return
   51 00:42D6 -  -  -  -  
   52 00:42D6 -  -  -  -  
   53 00:42D6 -  -  -  -  writeCharacter:
   54 00:42D6 -  -  -  -          ;; INPUT:
   55 00:42D6 -  -  -  -          ;;   ACC -- character to write
   56 00:42D6 -  -  -  -          ;;   D -- pixelwise top row for glyph
   57 00:42D6 -  -  -  -          ;;   E -- pixelwise left column for glyph
   58 00:42D6 -  -  -  -          ;;   <write data>
   59 00:42D6 -  -  -  -          ;;
   60 00:42D6 -  -  -  -          ;; OUTPUT:
   61 00:42D6 -  -  -  -          ;;   <character drawn to buffer>
   62 00:42D6 -  -  -  -          ;;
   63 00:42D6 C5 -  -  -          PUSH    BC              ; STACK: [PC BC]
   64 00:42D7 E5 -  -  -          PUSH    HL              ; STACK: [PC BC HL]
   65 00:42D8 CD FB 42 -          CALL    write_getGlyph  ; B, C, HL = height, width, picture
   66 00:42DB CD EF 41 -          CALL    drawPicture     ; draw picture
   67 00:42DE E1 -  -  -          POP     HL              ; STACK: [PC BC]
   68 00:42DF C1 -  -  -          POP     BC              ; STACK: [PC]
   69 00:42E0 C9 -  -  -          RET                     ; return
   70 00:42E1 -  -  -  -  
   71 00:42E1 -  -  -  -  
   72 00:42E1 -  -  -  -  writeString:
   73 00:42E1 -  -  -  -          ;; INPUT:
   74 00:42E1 -  -  -  -          ;;   HL -- pointer to NUL-terminated string
   75 00:42E1 -  -  -  -          ;;   <write data>
   76 00:42E1 -  -  -  -          ;;
   77 00:42E1 -  -  -  -          ;; OUTPUT:
   78 00:42E1 -  -  -  -          ;;   <string drawn to buffer>
   79 00:42E1 -  -  -  -          ;;
   80 00:42E1 7E -  -  -          LD      A, (HL)             ; ACC = first character
   81 00:42E2 B7 -  -  -          OR      A                   ; return if NUL
   82 00:42E3 C8 -  -  -          RET     Z                   ;
   83 00:42E4 C5 -  -  -          PUSH    BC                  ; STACK: [PC BC]
   84 00:42E5 D5 -  -  -          PUSH    DE                  ; STACK: [PC BC DE]
   85 00:42E6 E5 -  -  -          PUSH    HL                  ; STACK: [PC BC DE HL]
   86 00:42E7 -  -  -  -  writeStringLoop:                    ;
   87 00:42E7 E5 -  -  -          PUSH    HL                  ; STACK: [PC BC DE HL HL]
   88 00:42E8 CD FB 42 -          CALL    write_getGlyph      ; B, C, HL = height, width, picture
   89 00:42EB CD EF 41 -          CALL    drawPicture         ; draw the picture
   90 00:42EE E1 -  -  -          POP     HL                  ; STACK: [PC BC DE HL]
   91 00:42EF 7B -  -  -          LD      A, E                ; advance E to next column
   92 00:42F0 81 -  -  -          ADD     A, C                ;
   93 00:42F1 5F -  -  -          LD      E, A                ;
   94 00:42F2 23 -  -  -          INC     HL                  ; advance HL to next character
   95 00:42F3 7E -  -  -          LD      A, (HL)             ; ACC = next character
   96 00:42F4 B7 -  -  -          OR      A                   ; repeat if character not NUL
   97 00:42F5 20 F0 -  -          JR      NZ, writeStringLoop ;
   98 00:42F7 E1 -  -  -          POP     HL                  ; STACK: [PC BC DE]
   99 00:42F8 D1 -  -  -          POP     DE                  ; STACK: [PC BC]
  100 00:42F9 C1 -  -  -          POP     BC                  ; STACK: [PC]
  101 00:42FA C9 -  -  -          RET                         ; return
  102 00:42FB -  -  -  -  
  103 00:42FB -  -  -  -  
  104 00:42FB -  -  -  -  ;;;==========================================================================;;;
  105 00:42FB -  -  -  -  ;;; SUPPORT ROUTINES /////////////////////////////////////////////////////// ;;;
  106 00:42FB -  -  -  -  ;;;==========================================================================;;;
  107 00:42FB -  -  -  -  
  108 00:42FB -  -  -  -  write_getGlyph:
  109 00:42FB -  -  -  -          ;; INPUT:
  110 00:42FB -  -  -  -          ;;   ACC -- character whose glyph data to retrieve
  111 00:42FB -  -  -  -          ;;   <write data> -- (used to determine glyph)
  112 00:42FB -  -  -  -          ;;
  113 00:42FB -  -  -  -          ;; OUTPUT:
  114 00:42FB -  -  -  -          ;;   B -- pixelwise height of glyph
  115 00:42FB -  -  -  -          ;;   C -- pixelwise width of glyph
  116 00:42FB -  -  -  -          ;;   HL -- picture for glyph
  117 00:42FB -  -  -  -          ;;
  118 00:42FB 2A EE 86 -          LD      HL, (writeFontArray)
  119 00:42FE 87 -  -  -          ADD     A, A
  120 00:42FF 4F -  -  -          LD      C, A
  121 00:4300 06 00 -  -          LD      B, 0
  122 00:4302 09 -  -  -          ADD     HL, BC
  123 00:4303 7E -  -  -          LD      A, (HL)
  124 00:4304 23 -  -  -          INC     HL
  125 00:4305 66 -  -  -          LD      H, (HL)
  126 00:4306 6F -  -  -          LD      L, A
  127 00:4307 ED 4B EC 86         LD      BC, (writeFontDimensions)
  128 00:430B C9 -  -  -          RET
Listing for file "hello.asm"
    9 00:430C -  -  -  -  #include "interrupt.asm"  ;                             [dependency]
Listing for file "../lib/spasm//interrupt.asm"
    1 00:430C -  -  -  -  ;;;==========================================================================;;;
    2 00:430C -  -  -  -  ;;; BUGS /////////////////////////////////////////////////////////////////// ;;;
    3 00:430C -  -  -  -  ;;;==========================================================================;;;
    4 00:430C -  -  -  -  ;;; #       STATUS      DESCRIPTION                                          ;;;
    5 00:430C -  -  -  -  ;;; ------------------------------------------------------------------------ ;;;
    6 00:430C -  -  -  -  ;;; 1       [FIXED]     failure to initialize (interruptHookDispatch) and    ;;;
    7 00:430C -  -  -  -  ;;;                     (interruptHookCount)                                 ;;;
    8 00:430C -  -  -  -  ;;;==========================================================================;;;
    9 00:430C -  -  -  -  
   10 00:430C -  -  -  -  ;;;;;;;;;;;;;;;;;;;;;
   11 00:430C -  -  -  -  ;;; VARIABLE DATA ;;;
   12 00:430C -  -  -  -  ;;;;;;;;;;;;;;;;;;;;;
   13 00:430C -  -  -  -  
   14 00:430C -  -  -  -  #define INTERRUPT_MAX_HOOKS     3
   15 00:430C -  -  -  -  
   16 00:430C -  -  -  -  #define interruptHookCount      interruptData + 0
   17 00:430C -  -  -  -  #define interruptHookDispatch   interruptData + 1
   18 00:430C -  -  -  -  #define interruptDataEnd        interruptData + (3*INTERRUPT_MAX_HOOKS) + 1
   19 00:430C -  -  -  -  
   20 00:430C -  -  -  -  #define INTERRUPT_DATA_SIZE     (3*INTERRUPT_MAX_HOOKS) + 1
   21 00:430C -  -  -  -  
   22 00:430C -  -  -  -  
   23 00:430C -  -  -  -  ;;;;;;;;;;;;;;;;;;;
   24 00:430C -  -  -  -  ;;; DEFINITIONS ;;;
   25 00:430C -  -  -  -  ;;;;;;;;;;;;;;;;;;;
   26 00:430C -  -  -  -  
   27 00:430C -  -  -  -  #define INTERRUPT_WRAPPER_SIZE  interruptWrapperEnd - interruptWrapper
   28 00:430C -  -  -  -  
   29 00:430C -  -  -  -  
   30 00:430C -  -  -  -  #define INTERRUPT_MASK          00001011b
   31 00:430C -  -  -  -  
   32 00:430C -  -  -  -  #define INTERRUPT_TABLE_MSB     8Bh
   33 00:430C -  -  -  -  #define INTERRUPT_TABLE         INTERRUPT_TABLE_MSB * 0100h
   34 00:430C -  -  -  -  #define INTERRUPT_TABLE_SIZE    256 + 1
   35 00:430C -  -  -  -  
   36 00:430C -  -  -  -  #define INTERRUPT_CODE_MSB      8Ah
   37 00:430C -  -  -  -  #define INTERRUPT_CODE          INTERRUPT_CODE_MSB * 0101h
   38 00:430C -  -  -  -  
   39 00:430C -  -  -  -  
   40 00:430C -  -  -  -  interruptWrapper:
   41 00:430C 08 -  -  -          EX      AF, AF'                ;
   42 00:430D D9 -  -  -          EXX                            ;
   43 00:430E DB 04 -  -          IN      A, (04h)               ; read interrupt sources
   44 00:4310 2F -  -  -          CPL                            ; flip bits to RESET sources
   45 00:4311 E6 0B -  -          AND     INTERRUPT_MASK         ; ignore irrelevant bits
   46 00:4313 D3 03 -  -          OUT     (03h), A               ; acknowledge relevant sources
   47 00:4315 3E 0B -  -          LD      A, INTERRUPT_MASK      ; ACC = 1 for each interrupt source
   48 00:4317 D3 03 -  -          OUT     (03h), A               ; re-enable each interrupt source
   49 00:4319 CD F1 86 -          CALL    interruptHookDispatch  ; call installed interrupt handlers
   50 00:431C D9 -  -  -          EXX                            ;
   51 00:431D 08 -  -  -          EX      AF, AF'                ;
   52 00:431E FB -  -  -          EI                             ;
   53 00:431F ED 4D -  -          RETI                           ;
   54 00:4321 -  -  -  -  interruptWrapperEnd:
   55 00:4321 -  -  -  -  
   56 00:4321 -  -  -  -  
   57 00:4321 -  -  -  -  
   58 00:4321 -  -  -  -  ;;;;;;;;;;;;;;;;;
   59 00:4321 -  -  -  -  ;;; INTERFACE ;;;
   60 00:4321 -  -  -  -  ;;;;;;;;;;;;;;;;;
   61 00:4321 -  -  -  -  
   62 00:4321 -  -  -  -  ;;;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 00:4321 -  -  -  -  ;;; USAGE EXAMPLE:
   64 00:4321 -  -  -  -  ;;;
   65 00:4321 -  -  -  -  ;;;     startApp:
   66 00:4321 -  -  -  -  ;;;             CALL    interruptInit     ; initialize library
   67 00:4321 -  -  -  -  ;;;             LD      HL, timerHook     ; install timer hook
   68 00:4321 -  -  -  -  ;;;             CALL    interruptAddHook  ;
   69 00:4321 -  -  -  -  ;;;             LD      HL, keyboardHook  ; install keyboard hook
   70 00:4321 -  -  -  -  ;;;             CALL    interruptAddHook  ;
   71 00:4321 -  -  -  -  ;;;             EI                        ; interrupts are now ready
   72 00:4321 -  -  -  -  ;;;             ;
   73 00:4321 -  -  -  -  ;;;             ; <main application code>
   74 00:4321 -  -  -  -  ;;;             ;
   75 00:4321 -  -  -  -  ;;;             JP      exitApp           ; restore interrupt mode, etc.
   76 00:4321 -  -  -  -  ;;;
   77 00:4321 -  -  -  -  ;;; If a library requires an interrupt hook to run, it is a good idea to
   78 00:4321 -  -  -  -  ;;; install the hook in a library initialization routine.  In this case,
   79 00:4321 -  -  -  -  ;;; it is important that interruptInit is called before the initialization
   80 00:4321 -  -  -  -  ;;; routine of the higher-level library.
   81 00:4321 -  -  -  -  ;;;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 00:4321 -  -  -  -  
   83 00:4321 -  -  -  -  interruptInit:
   84 00:4321 -  -  -  -          ;; INPUT:
   85 00:4321 -  -  -  -          ;;   <none>
   86 00:4321 -  -  -  -          ;;
   87 00:4321 -  -  -  -          ;; OUTPUT:
   88 00:4321 -  -  -  -          ;;   <interrupt data initialized>
   89 00:4321 -  -  -  -          ;;   <interrupts DISABLED>
   90 00:4321 -  -  -  -          ;;
   91 00:4321 -  -  -  -          ;; This routine installs the interrupt handler wrapper and
   92 00:4321 -  -  -  -          ;; prepares it for the installation of additional hooks.
   93 00:4321 -  -  -  -          ;;
   94 00:4321 C5 -  -  -  	PUSH    BC                            ; STACK: [PC BC]
   95 00:4322 D5 -  -  -  	PUSH    DE                            ; STACK: [PC BC DE]
   96 00:4323 E5 -  -  -  	PUSH    HL                            ; STACK: [PC BC DE HL]
   97 00:4324 F3 -  -  -  	DI                                    ; INTERRUPTS OFF
   98 00:4325 3E 0B -  -  	LD      A, INTERRUPT_MASK             ; enable our interrupts
   99 00:4327 D3 03 -  -  	OUT     (03h), A                      ;
  100 00:4329 01 15 00 -          LD      BC, INTERRUPT_WRAPPER_SIZE    ;
  101 00:432C 11 8A 8A -  	LD      DE, INTERRUPT_CODE            ; load interrupt code
  102 00:432F 21 0C 43 -          LD      HL, interruptWrapper          ;
  103 00:4332 ED B0 -  -  	LDIR                                  ;
  104 00:4334 21 00 8B -  	LD      HL, INTERRUPT_TABLE           ; load IR table
  105 00:4337 36 8A -  -  	LD      (HL), INTERRUPT_CODE_MSB      ;
  106 00:4339 11 01 8B -  	LD      DE, INTERRUPT_TABLE + 1       ;
  107 00:433C 01 00 01 -  	LD      BC, INTERRUPT_TABLE_SIZE - 1  ;
  108 00:433F ED B0 -  -  	LDIR                                  ;
  109 00:4341 AF -  -  -          XOR     A                             ; (interruptHookCount) = 0
  110 00:4342 32 F0 86 -          LD      (interruptHookCount), A       ;
  111 00:4345 3E C9 -  -          LD      A, 0C9h                       ; first dispatch instruction = RET
  112 00:4347 32 F1 86 -          LD      (interruptHookDispatch), A    ;
  113 00:434A 3E 8B -  -  	LD      A, INTERRUPT_TABLE_MSB        ; I register = MSB of table
  114 00:434C ED 47 -  -  	LD      I, A                          ;
  115 00:434E ED 5E -  -  	IM      2                             ; set interrupts to mode 2
  116 00:4350 E1 -  -  -  	POP     HL                            ; STACK: [PC BC DE]
  117 00:4351 D1 -  -  -  	POP     DE                            ; STACK: [PC BC]
  118 00:4352 C1 -  -  -  	POP     BC                            ; STACK: [PC]
  119 00:4353 C9 -  -  -  	RET                                   ; return
  120 00:4354 -  -  -  -  
  121 00:4354 -  -  -  -  
  122 00:4354 -  -  -  -  interruptExit:
  123 00:4354 C9 -  -  -          RET
  124 00:4355 -  -  -  -  
  125 00:4355 -  -  -  -  
  126 00:4355 -  -  -  -  interruptAddHook:
  127 00:4355 -  -  -  -          ;; INPUT:
  128 00:4355 -  -  -  -          ;;   HL -- address of hook routine to add
  129 00:4355 -  -  -  -          ;;
  130 00:4355 -  -  -  -          ;; OUTPUT:
  131 00:4355 -  -  -  -          ;;   <interrupt data> -- hook added to interrupt handler
  132 00:4355 -  -  -  -          ;;
  133 00:4355 -  -  -  -          ;; REQUIREMENTS:
  134 00:4355 -  -  -  -          ;;   - Interrupts must be disabled when calling this routine.
  135 00:4355 -  -  -  -          ;;   - The hook routine must preserve all registers.
  136 00:4355 -  -  -  -          ;;   - The correctness of the hook routine must not depend on the
  137 00:4355 -  -  -  -          ;;     order in which the installed hooks are executed.
  138 00:4355 -  -  -  -          ;;
  139 00:4355 C5 -  -  -          PUSH    BC                         ; STACK: [PC BC] 
  140 00:4356 D5 -  -  -          PUSH    DE                         ; STACK: [PC BC DE]
  141 00:4357 E5 -  -  -          PUSH    HL                         ; STACK: [PC BC DE HL]
  142 00:4358 EB -  -  -          EX      DE, HL                     ; DE = routine address
  143 00:4359 3A F0 86 -          LD      A, (interruptHookCount)    ; ACC = count
  144 00:435C 6F -  -  -          LD      L, A                       ; HL = count * 3 + dispatch base
  145 00:435D 26 00 -  -          LD      H, 0                       ;
  146 00:435F 4D -  -  -          LD      C, L                       ;
  147 00:4360 44 -  -  -          LD      B, H                       ;
  148 00:4361 29 -  -  -          ADD     HL, HL                     ;
  149 00:4362 09 -  -  -          ADD     HL, BC                     ;
  150 00:4363 01 F1 86 -          LD      BC, interruptHookDispatch  ;
  151 00:4366 09 -  -  -          ADD     HL, BC                     ;
  152 00:4367 36 CD -  -          LD      (HL), 0CDh                 ; write CALL to routine
  153 00:4369 23 -  -  -          INC     HL                         ;
  154 00:436A 73 -  -  -          LD      (HL), E                    ;
  155 00:436B 23 -  -  -          INC     HL                         ;
  156 00:436C 72 -  -  -          LD      (HL), D                    ;
  157 00:436D 23 -  -  -          INC     HL                         ;
  158 00:436E 36 C9 -  -          LD      (HL), 0C9h                 ; write RET instruction
  159 00:4370 3C -  -  -          INC     A                          ; count = original count + 1
  160 00:4371 32 F0 86 -          LD      (interruptHookCount), A    ;
  161 00:4374 E1 -  -  -          POP     HL                         ; STACK: [PC BC DE]
  162 00:4375 D1 -  -  -          POP     DE                         ; STACK: [PC BC]
  163 00:4376 C1 -  -  -          POP     BC                         ; STACK: [PC]
  164 00:4377 C9 -  -  -          RET                                ; return
Listing for file "hello.asm"
   10 00:4378 -  -  -  -  #include "keyboard.asm"   ; keyboardWait
Listing for file "../lib/spasm//keyboard.asm"
    1 00:4378 -  -  -  -  ;;; keyboard.asm
    2 00:4378 -  -  -  -  
    3 00:4378 -  -  -  -  ;;;==========================================================================;;;
    4 00:4378 -  -  -  -  ;;; INTRODUCTION AND MOTIVATION //////////////////////////////////////////// ;;;
    5 00:4378 -  -  -  -  ;;;==========================================================================;;;
    6 00:4378 -  -  -  -  
    7 00:4378 -  -  -  -  ;;;   About the only helpful thing the TI interrupt routine does for a game is
    8 00:4378 -  -  -  -  ;;; to scan for keypresses. Unfortunately, it can also tamper with the LCD,
    9 00:4378 -  -  -  -  ;;; which means routines that write directly to the screen must disable
   10 00:4378 -  -  -  -  ;;; interrupts, which is undesirable for time-sensitive applications. Thus, in
   11 00:4378 -  -  -  -  ;;; order to eliminate the need for TI's interrupt routine altogether, it seems
   12 00:4378 -  -  -  -  ;;; good to write a simple routine to scan the keyboard for keypresses.
   13 00:4378 -  -  -  -  ;;;
   14 00:4378 -  -  -  -  ;;;   This file is meant to provide comprehensive support for reading keyboard
   15 00:4378 -  -  -  -  ;;; input, including both key manipulation AND the keyboard-reading interrupt
   16 00:4378 -  -  -  -  ;;; routine. Effectively, it is the combination of the previous contents of
   17 00:4378 -  -  -  -  ;;; Keyboard.inc and KeyboardInterrupt.asm.
   18 00:4378 -  -  -  -  
   19 00:4378 -  -  -  -  
   20 00:4378 -  -  -  -  ;;;==========================================================================;;;
   21 00:4378 -  -  -  -  ;;; DEFINITIONS //////////////////////////////////////////////////////////// ;;;
   22 00:4378 -  -  -  -  ;;;==========================================================================;;;
   23 00:4378 -  -  -  -  
   24 00:4378 -  -  -  -  ;;; variables
   25 00:4378 -  -  -  -  #define watchedKey      keyboardData + 0  ; the currently watched key:
   26 00:4378 -  -  -  -  #define watchedKeyBit   keyboardData + 0  ; - bit
   27 00:4378 -  -  -  -  #define watchedKeyGroup keyboardData + 1  ; - group
   28 00:4378 -  -  -  -  #define lastKey         keyboardData + 2  ; the last recorded key:
   29 00:4378 -  -  -  -  #define lastKeyBit      keyboardData + 2  ; - bit
   30 00:4378 -  -  -  -  #define lastKeyGroup    keyboardData + 3  ; - group
   31 00:4378 -  -  -  -  #define keyboardDataEnd keyboardData + 4  ; (END OF DATA)
   32 00:4378 -  -  -  -  
   33 00:4378 -  -  -  -  #define KEYBOARD_DATA_SIZE      4
   34 00:4378 -  -  -  -  
   35 00:4378 -  -  -  -  ;;; constants
   36 00:4378 -  -  -  -  #define KEYBOARD_PORT   01h
   37 00:4378 -  -  -  -  #define KEYBOARD_GROUPS 7
   38 00:4378 -  -  -  -  
   39 00:4378 -  -  -  -  ; Interrupt routine for reading keypresses
   40 00:4378 -  -  -  -  keyboardHook:
   41 00:4378 -  -  -  -          ;; ROUTINE keyboardIR:
   42 00:4378 -  -  -  -          ;;
   43 00:4378 -  -  -  -          ;;   DESCRIPTION:
   44 00:4378 -  -  -  -          ;;     Monitor the keyboard on the Mode 2 interrupt clock,
   45 00:4378 -  -  -  -          ;;     updating (watchedKey) and (lastKey) for use by readKey.
   46 00:4378 -  -  -  -          ;;
   47 00:4378 -  -  -  -          ;;   INPUTS:
   48 00:4378 -  -  -  -          ;;     (watchedKey)  the key corresponding to the currently
   49 00:4378 -  -  -  -          ;;                   monitored ongoing keypress.
   50 00:4378 -  -  -  -          ;;     <keyboard>    monitored by routine
   51 00:4378 -  -  -  -          ;;
   52 00:4378 -  -  -  -          ;;   OUTPUTS:
   53 00:4378 -  -  -  -          ;;     BC            (DESTROYED)
   54 00:4378 -  -  -  -          ;;     (watchedKey)  key corresponding to newly monitored
   55 00:4378 -  -  -  -          ;;                   ongoing keypress (if applicable)
   56 00:4378 -  -  -  -          ;;     (lastKey)     newly finished keystroke (if applicable)
   57 00:4378 -  -  -  -          ;;     <keyboard>    possibly reset by findKeypress or
   58 00:4378 -  -  -  -          ;;                   keyIsPressed
   59 00:4378 -  -  -  -          ;;
   60 00:4378 -  -  -  -          ;;   REQUIREMENTS:
   61 00:4378 -  -  -  -          ;;     (R1) This routine is installed as a Mode 2 interrupt
   62 00:4378 -  -  -  -          ;;          routine (or is called by such a routine), the CPU
   63 00:4378 -  -  -  -          ;;          is set to Interrupt Mode 2, and interrupts are
   64 00:4378 -  -  -  -          ;;          enabled.
   65 00:4378 -  -  -  -          ;;
   66 00:4378 ED 4B FA 86         LD      BC, (watchedKey)        ; BC = watched key
   67 00:437C CB 78 -  -          BIT     7, B                    ; if key invalid:
   68 00:437E 20 0F -  -          JR      NZ, keyboardHook_Valid  ;
   69 00:4380 CD 1D 44 -          CALL    findKeypress            ;     BC = new key
   70 00:4383 CB 78 -  -          BIT     7, B                    ;     return if still invalid  [1]
   71 00:4385 C8 -  -  -          RET     Z                       ;
   72 00:4386 ED 43 FA 86         LD      (watchedKey), BC        ;     (watchedKey) = BC
   73 00:438A ED 43 FC 86         LD      (lastKey), BC           ;     (lastKey) = BC
   74 00:438E C9 -  -  -          RET                             ;     return
   75 00:438F -  -  -  -  keyboardHook_Valid:                     ;
   76 00:438F CD 10 44 -          CALL  keyIsPressed              ; if BC not pressed:
   77 00:4392 C8 -  -  -          RET   Z                         ;     return
   78 00:4393 AF -  -  -          XOR   A                         ; (watchedKey) = 0 (keypress done)
   79 00:4394 32 FB 86 -          LD    (watchedKeyGroup), A      ;
   80 00:4397 32 FA 86 -          LD    (watchedKeyBit), A        ;
   81 00:439A C9 -  -  -          RET                             ; return
   82 00:439B -  -  -  -          ;; NOTES:
   83 00:439B -  -  -  -          ;;  [1] The most recent keypress should not be forgotten until
   84 00:439B -  -  -  -          ;;      another keypress occurs.  Therefore, the most recent keypress
   85 00:439B -  -  -  -          ;;      should not be overwritten unless a new (VALID) keypress has been
   86 00:439B -  -  -  -          ;;      detected.  This condition was violated by the previous version
   87 00:439B -  -  -  -          ;;      of this hook: once the "current" keypress ended, (watchedKey)
   88 00:439B -  -  -  -          ;;      and (lastKey) would both be replaced by the result of
   89 00:439B -  -  -  -          ;;      findKeypress REGARDLESS of whether this result was valid.  The
   90 00:439B -  -  -  -          ;;      hook has since been fixed to return early if the value returned
   91 00:439B -  -  -  -          ;;      by findKeypress is invalid.
   92 00:439B -  -  -  -  
   93 00:439B -  -  -  -  
   94 00:439B -  -  -  -  ;;;==========================================================================;;;
   95 00:439B -  -  -  -  ;;; INTERFACE ////////////////////////////////////////////////////////////// ;;;
   96 00:439B -  -  -  -  ;;;==========================================================================;;;
   97 00:439B -  -  -  -  
   98 00:439B -  -  -  -  keyboardInit:
   99 00:439B -  -  -  -          ;; INPUT:
  100 00:439B -  -  -  -          ;;   <none>
  101 00:439B -  -  -  -          ;;
  102 00:439B -  -  -  -          ;; OUTPUT:
  103 00:439B -  -  -  -          ;;   <keyboard data initialized>
  104 00:439B -  -  -  -          ;;   <keyboard hook added>
  105 00:439B -  -  -  -          ;;
  106 00:439B E5 -  -  -          PUSH    HL               ; STACK: [PC HL]
  107 00:439C 21 00 00 -          LD      HL, 0            ; zero out (watchedKey) and (lastKey)
  108 00:439F 22 FA 86 -          LD      (watchedKey), HL ;
  109 00:43A2 22 FC 86 -          LD      (lastKey), HL    ;
  110 00:43A5 21 78 43 -          LD      HL, keyboardHook ; add keyboard hook
  111 00:43A8 CD 55 43 -          CALL    interruptAddHook ;
  112 00:43AB E1 -  -  -          POP     HL               ; STACK: [PC]
  113 00:43AC C9 -  -  -          RET                      ; return
  114 00:43AD -  -  -  -  
  115 00:43AD -  -  -  -  
  116 00:43AD -  -  -  -  keyboardExit:
  117 00:43AD C9 -  -  -          RET
  118 00:43AE -  -  -  -  
  119 00:43AE -  -  -  -  
  120 00:43AE -  -  -  -  keyboardRead:
  121 00:43AE -  -  -  -          ;; ROUTINE keyboardRead:
  122 00:43AE -  -  -  -          ;;
  123 00:43AE -  -  -  -          ;;   DESCRIPTION:
  124 00:43AE -  -  -  -          ;;     Retrieve most recent keystroke, clear (lastKey), and
  125 00:43AE -  -  -  -          ;;     return the keystroke in ACC.
  126 00:43AE -  -  -  -          ;;
  127 00:43AE -  -  -  -          ;;   INPUTS:
  128 00:43AE -  -  -  -          ;;     (lastKey)  most recent keystroke (DECODED;; updated by
  129 00:43AE -  -  -  -          ;;                keyboardIR above)
  130 00:43AE -  -  -  -          ;;
  131 00:43AE -  -  -  -          ;;   OUTPUTS:
  132 00:43AE -  -  -  -          ;;     ACC        most recent keystroke (ENCODED)
  133 00:43AE -  -  -  -          ;;     (lastKey)  cleared (0)
  134 00:43AE -  -  -  -          ;;
  135 00:43AE -  -  -  -          ;;   REQUIREMENTS:
  136 00:43AE -  -  -  -          ;;     (R1) The keyboardIR routine above is installed as a Mode
  137 00:43AE -  -  -  -          ;;          2 interrupt routine (or is called by such a routine),
  138 00:43AE -  -  -  -          ;;          the CPU is set to Interrupt Mode 2, and interrupts
  139 00:43AE -  -  -  -          ;;          are enabled.
  140 00:43AE -  -  -  -          ;;
  141 00:43AE C5 -  -  -          PUSH    BC              ; STACK: [PC BC]
  142 00:43AF F3 -  -  -          DI                      ; DI to avoid corrupting (lastKey)
  143 00:43B0 ED 4B FC 86         LD      BC, (lastKey)   ; BC = (lastKey)
  144 00:43B4 AF -  -  -          XOR     A               ; (lastKey) = 0
  145 00:43B5 32 FC 86 -          LD      (lastKey+0), A  ;
  146 00:43B8 32 FD 86 -          LD      (lastKey+1), A  ;
  147 00:43BB FB -  -  -          EI                      ; EI again
  148 00:43BC CD FB 43 -          CALL    encodeKey       ; ACC = encoded (lastKey)
  149 00:43BF C1 -  -  -          POP     BC              ; STACK: [PC]
  150 00:43C0 C9 -  -  -          RET                     ; return
  151 00:43C1 -  -  -  -                  
  152 00:43C1 -  -  -  -  
  153 00:43C1 -  -  -  -  keyboardWait
  154 00:43C1 -  -  -  -          ;; ROUTINE keyboardWait:
  155 00:43C1 -  -  -  -          ;;
  156 00:43C1 -  -  -  -          ;;   DESCRIPTION:
  157 00:43C1 -  -  -  -          ;;     Wait for a user keypress, then return it in ACC.
  158 00:43C1 -  -  -  -          ;;
  159 00:43C1 -  -  -  -          ;;   INPUTS:
  160 00:43C1 -  -  -  -          ;;     <keyboard>  used to detect user keypress
  161 00:43C1 -  -  -  -          ;;
  162 00:43C1 -  -  -  -          ;;   OUTPUTS:
  163 00:43C1 -  -  -  -          ;;     ACC         key pressed by user
  164 00:43C1 -  -  -  -          ;;
  165 00:43C1 CD AE 43 -          CALL    keyboardRead     ; ACC = key
  166 00:43C4 B7 -  -  -          OR      A                ; repeat if no key yet
  167 00:43C5 28 FA -  -          JR      Z, keyboardWait  ;
  168 00:43C7 C9 -  -  -          RET                      ; return
  169 00:43C8 -  -  -  -  
  170 00:43C8 -  -  -  -  
  171 00:43C8 -  -  -  -  ;;;==========================================================================;;;
  172 00:43C8 -  -  -  -  ;;; ENCODE AND DECODE ROUTINES ///////////////////////////////////////////// ;;;
  173 00:43C8 -  -  -  -  ;;;==========================================================================;;;
  174 00:43C8 -  -  -  -  
  175 00:43C8 -  -  -  -  ;;;   In order to simplify this approach, we write routines for converting between
  176 00:43C8 -  -  -  -  ;;; the "decoded" (raw) data used by the Keyboard and the "encoded" (Key code)
  177 00:43C8 -  -  -  -  ;;; data seen by the programmer. As before, the encoded data will, by convention,
  178 00:43C8 -  -  -  -  ;;; be stored in the Accumulator. Since the decoded data spans two bytes, it will
  179 00:43C8 -  -  -  -  ;;; be stored in the two registers B, C (group mask in B, bit mask in C). Given
  180 00:43C8 -  -  -  -  ;;; a key specified by group number g and bit number b, the encoded value E, the
  181 00:43C8 -  -  -  -  ;;; bit value B, and the group value G corresponding to that key may be expressed
  182 00:43C8 -  -  -  -  ;;; as follows:
  183 00:43C8 -  -  -  -  ;;;
  184 00:43C8 -  -  -  -  ;;;     E = 8g + b + 1
  185 00:43C8 -  -  -  -  ;;;     G = ~(1 << g)
  186 00:43C8 -  -  -  -  ;;;     B = ~(1 << b)
  187 00:43C8 -  -  -  -  ;;;
  188 00:43C8 -  -  -  -  ;;; The values of g and b can both be readily solved for in terms of E by writing
  189 00:43C8 -  -  -  -  ;;;
  190 00:43C8 -  -  -  -  ;;;     b = E - 8g - 1
  191 00:43C8 -  -  -  -  ;;;     b % 8 = (E - 8g - 1) % 8
  192 00:43C8 -  -  -  -  ;;;     b = (E - 0 - 1) % 8
  193 00:43C8 -  -  -  -  ;;;     b = (E - 1) % 8
  194 00:43C8 -  -  -  -  ;;;
  195 00:43C8 -  -  -  -  ;;;     8g + b = E - 1
  196 00:43C8 -  -  -  -  ;;;     (8g + b) // 8 = (E - 1) // 8
  197 00:43C8 -  -  -  -  ;;;     g = (E - 1) // 8
  198 00:43C8 -  -  -  -  ;;;
  199 00:43C8 -  -  -  -  ;;; However, since solving for g and b in the expressions for B and C would
  200 00:43C8 -  -  -  -  ;;; involve an inverse bit shift, we will settle for an intuitive algorithmic
  201 00:43C8 -  -  -  -  ;;; approach. Thus, G is describable more intuitively as "all ones except a zero
  202 00:43C8 -  -  -  -  ;;; in bit position g," and B can be given an analogous description in terms of
  203 00:43C8 -  -  -  -  ;;; b. These descriptions, while perhaps less rigorous in the mathematical sense
  204 00:43C8 -  -  -  -  ;;; than closed-form expressions, immediately suggest appropriate conversion
  205 00:43C8 -  -  -  -  ;;; algorithms.
  206 00:43C8 -  -  -  -  
  207 00:43C8 -  -  -  -  decodeKey:
  208 00:43C8 -  -  -  -          ;; ROUTINE decodeKey:
  209 00:43C8 -  -  -  -          ;;
  210 00:43C8 -  -  -  -          ;;   DESCRIPTION:
  211 00:43C8 -  -  -  -          ;;     Convert the encoded key in ACC into a group mask and bit
  212 00:43C8 -  -  -  -          ;;     mask in B and C, respectively.
  213 00:43C8 -  -  -  -          ;;
  214 00:43C8 -  -  -  -          ;;   INPUTS:
  215 00:43C8 -  -  -  -          ;;     ACC  encoded key to decode
  216 00:43C8 -  -  -  -          ;;
  217 00:43C8 -  -  -  -          ;;   OUTPUTS:
  218 00:43C8 -  -  -  -          ;;     B    group mask of decoded result
  219 00:43C8 -  -  -  -          ;;     C    bit mask of decoded result
  220 00:43C8 -  -  -  -          ;;
  221 00:43C8 -  -  -  -          ;;   REQUIREMENTS:
  222 00:43C8 -  -  -  -          ;;     (R1) ACC contains a valid key code.
  223 00:43C8 -  -  -  -          ;;
  224 00:43C8 -  -  -  -          ;; B = ~(1 << g)
  225 00:43C8 -  -  -  -          ;;   = ~(1 << (ACC - 1) // 8)
  226 00:43C8 -  -  -  -          ;; C = ~(1 << b)
  227 00:43C8 -  -  -  -          ;;   = ~(1 << (ACC - 1) % 8)
  228 00:43C8 -  -  -  -          ;;
  229 00:43C8 06 FE -  -          LD      B, ~1          ; B = ~1
  230 00:43CA 0F -  -  -          RRCA                   ; rotate bit 0 into Carry
  231 00:43CB 30 02 -  -          JR      NC, $+2+(2*1)  ; if bit 0 set:
  232 00:43CD CB 00 -  -          RLC     B              ;     rotate B left
  233 00:43CF 0F -  -  -          RRCA                   ; rotate bit 1 into Carry
  234 00:43D0 30 04 -  -          JR      NC, $+2+(2*2)  ; if bit 1 set:
  235 00:43D2 CB 00 -  -          RLC     B              ;     rotate B left
  236 00:43D4 CB 00 -  -          RLC     B              ;     rotate B left
  237 00:43D6 0F -  -  -          RRCA                   ; rotate bit 2 into Carry
  238 00:43D7 30 08 -  -          JR      NC, $+2+(2*4)  ; if bit 2 set:
  239 00:43D9 CB 00 -  -          RLC     B              ;     rotate B left
  240 00:43DB CB 00 -  -          RLC     B              ;     rotate B left
  241 00:43DD CB 00 -  -          RLC     B              ;     rotate B left
  242 00:43DF CB 00 -  -          RLC     B              ;     rotate B left
  243 00:43E1 0E FE -  -          LD      C, ~1          ; C = ~1
  244 00:43E3 0F -  -  -          RRCA                   ; rotate bit 3 into Carry
  245 00:43E4 30 02 -  -          JR      NC, $+2+(2*1)  ; if bit 3 set:
  246 00:43E6 CB 01 -  -          RLC     C              ;     rotate C left
  247 00:43E8 0F -  -  -          RRCA                   ; rotate bit 4 into Carry
  248 00:43E9 30 04 -  -          JR      NC, $+2+(2*2)  ; if bit 4 set:
  249 00:43EB CB 01 -  -          RLC     C              ;     rotate C left
  250 00:43ED CB 01 -  -          RLC     C              ;     rotate C left
  251 00:43EF 0F -  -  -          RRCA                   ; rotate bit 5 into Carry
  252 00:43F0 30 08 -  -          JR      NC, $+2+(2*4)  ; if bit 5 set:
  253 00:43F2 CB 01 -  -          RLC     C              ;     rotate C left
  254 00:43F4 CB 01 -  -          RLC     C              ;     rotate C left
  255 00:43F6 CB 01 -  -          RLC     C              ;     rotate C left
  256 00:43F8 CB 01 -  -          RLC     C              ;     rotate C left
  257 00:43FA C9 -  -  -          RET                    ; return
  258 00:43FB -  -  -  -  
  259 00:43FB -  -  -  -  
  260 00:43FB -  -  -  -  encodeKey:
  261 00:43FB -  -  -  -          ;; ROUTINE encodeKey:
  262 00:43FB -  -  -  -          ;;
  263 00:43FB -  -  -  -          ;;   DESCRIPTION:
  264 00:43FB -  -  -  -          ;;     Convert group mask B and bit mask C into an encoded key
  265 00:43FB -  -  -  -          ;;     value in ACC.
  266 00:43FB -  -  -  -          ;;
  267 00:43FB -  -  -  -          ;;   INPUTS:
  268 00:43FB -  -  -  -          ;;     B    group mask
  269 00:43FB -  -  -  -          ;;     C    bit mask
  270 00:43FB -  -  -  -          ;;
  271 00:43FB -  -  -  -          ;;   OUTPUTS:
  272 00:43FB -  -  -  -          ;;     ACC  encoded key
  273 00:43FB -  -  -  -          ;;
  274 00:43FB -  -  -  -          ;;   REQUIREMENTS:
  275 00:43FB -  -  -  -          ;;     (R1) B and C represent the group and bit masks of a VALID
  276 00:43FB -  -  -  -          ;;          KEY
  277 00:43FB -  -  -  -          ;;
  278 00:43FB -  -  -  -          ;; It is important to note that NOT EVERY PAIR (B, C) RESULTS
  279 00:43FB -  -  -  -          ;; IN A VALID KEY! However, if the pair was found by the
  280 00:43FB -  -  -  -          ;; findKeypress routine and the mask denotes a valid group
  281 00:43FB -  -  -  -          ;; (the sign bit is SET) it must correspond to a valid key code.
  282 00:43FB -  -  -  -          ;;
  283 00:43FB -  -  -  -          ;; Also, THIS ROUTINE WILL HANG if either B or C has no bits
  284 00:43FB -  -  -  -          ;; reset! Again, this will not be an issue if B and C are valid
  285 00:43FB -  -  -  -          ;; output from findKeypress.
  286 00:43FB -  -  -  -          ;;
  287 00:43FB AF -  -  -          XOR     A       ; assume ACC = 0
  288 00:43FC CB 78 -  -          BIT     7, B    ; return if invalid key
  289 00:43FE C8 -  -  -          RET     Z       ;
  290 00:43FF C5 -  -  -          PUSH    BC      ; STACK: [PC BC]
  291 00:4400 3D -  -  -          DEC     A       ; ACC = -1
  292 00:4401 3C -  -  -          INC     A       ; ++ A
  293 00:4402 CB 08 -  -          RRC     B       ; rotate B right
  294 00:4404 38 FB -  -          JR      C, $-3  ; repeat from `INC A' if no reset bit yet
  295 00:4406 87 -  -  -          ADD     A, A    ; ACC *= 2  (2x)
  296 00:4407 87 -  -  -          ADD     A, A    ; ACC *= 2  (4x)
  297 00:4408 87 -  -  -          ADD     A, A    ; ACC *= 2  (8x)
  298 00:4409 3C -  -  -          INC     A       ; ++ A
  299 00:440A CB 09 -  -          RRC     C       ; rotate C right
  300 00:440C 38 FB -  -          JR      C, $-3  ; repeat from `INC A' if no reset bit yet
  301 00:440E C1 -  -  -          POP     BC      ; STACK: [PC]
  302 00:440F C9 -  -  -          RET             ; return
  303 00:4410 -  -  -  -  
  304 00:4410 -  -  -  -  
  305 00:4410 -  -  -  -  
  306 00:4410 -  -  -  -  
  307 00:4410 -  -  -  -  ;;;==========================================================================;;;
  308 00:4410 -  -  -  -  ;;; KEYBOARD PORT INTERFACE ROUTINES /////////////////////////////////////// ;;;
  309 00:4410 -  -  -  -  ;;;==========================================================================;;;
  310 00:4410 -  -  -  -  
  311 00:4410 -  -  -  -  keyIsPressed:
  312 00:4410 -  -  -  -          ;; ROUTINE keyIsPressed:
  313 00:4410 -  -  -  -          ;;
  314 00:4410 -  -  -  -          ;;   DESCRIPTION:
  315 00:4410 -  -  -  -          ;;     Set [Zero] if and only if the key represented by the
  316 00:4410 -  -  -  -          ;;     group mask in B and the bit mask in C is currently being
  317 00:4410 -  -  -  -          ;;     pressed according to the keyboard port.
  318 00:4410 -  -  -  -          ;;
  319 00:4410 -  -  -  -          ;;   INPUTS:
  320 00:4410 -  -  -  -          ;;     B           the group mask of the key to check
  321 00:4410 -  -  -  -          ;;     C           the bit mask of the key to check
  322 00:4410 -  -  -  -          ;;     <keyboard>  determines whether key is pressed
  323 00:4410 -  -  -  -          ;;
  324 00:4410 -  -  -  -          ;;   OUTPUTS:
  325 00:4410 -  -  -  -          ;;     [Zero]      set iff key pressed
  326 00:4410 -  -  -  -          ;;     <keyboard>  reset at beginning by writing FFh
  327 00:4410 -  -  -  -          ;;
  328 00:4410 -  -  -  -          ;;   REQUIREMENTS:
  329 00:4410 -  -  -  -          ;;     (R1) B and C represent the group and bit mask of a valid
  330 00:4410 -  -  -  -          ;;          key.
  331 00:4410 -  -  -  -          ;;
  332 00:4410 -  -  -  -          ;; THIS ROUTINE ASSUMES THAT THE MASK IN C HAS ONLY ONE BIT
  333 00:4410 -  -  -  -          ;; RESET!!! Under this assumption, C specifies only one key,
  334 00:4410 -  -  -  -          ;; and that key is being pressed if and only if its reset bit
  335 00:4410 -  -  -  -          ;; is ALSO reset in the input from the Keyboard Port. That is,
  336 00:4410 -  -  -  -          ;; for every bit position 0 <= b < 8, the mask bit C[b] and the
  337 00:4410 -  -  -  -          ;; input bit O[b] must satisfy
  338 00:4410 -  -  -  -          ;;
  339 00:4410 -  -  -  -          ;;     ~(~C[b] AND O[b])
  340 00:4410 -  -  -  -          ;;     ~~C[b] OR ~O[b]
  341 00:4410 -  -  -  -          ;;     C[b] OR ~O[b]
  342 00:4410 -  -  -  -          ;;
  343 00:4410 -  -  -  -          ;; That is,
  344 00:4410 -  -  -  -          ;;
  345 00:4410 -  -  -  -          ;;     C[b] OR ~O[b] == 1
  346 00:4410 -  -  -  -          ;;
  347 00:4410 -  -  -  -          ;; for every bit position b. Thus, considering the entire bytes
  348 00:4410 -  -  -  -          ;; C and O, our condition (for SUCCESS) is equivalent to
  349 00:4410 -  -  -  -          ;;
  350 00:4410 -  -  -  -          ;;     C OR ~O == FFh
  351 00:4410 -  -  -  -          ;;     C OR ~O + 1 == FFh + 1 == 0
  352 00:4410 -  -  -  -          ;;
  353 00:4410 -  -  -  -          ;; Since we want to set the Zero flag if and only if we DO have
  354 00:4410 -  -  -  -          ;; success, the appropriate flag result will be achieved by
  355 00:4410 -  -  -  -          ;; simply evaluating the expression on the left-hand side of
  356 00:4410 -  -  -  -          ;; this equation.
  357 00:4410 -  -  -  -          ;;
  358 00:4410 3E FF -  -          LD      A, 0FFh             ; reset keyboard by writing FFh
  359 00:4412 D3 01 -  -          OUT     (KEYBOARD_PORT), A  ;
  360 00:4414 78 -  -  -          LD      A, B                ; ACC = group mask
  361 00:4415 D3 01 -  -          OUT     (KEYBOARD_PORT), A  ; write group mask to keyboard
  362 00:4417 DB 01 -  -          IN      A, (KEYBOARD_PORT)  ; ACC = byte O from keyboard
  363 00:4419 2F -  -  -          CPL                         ; ACC = ~O
  364 00:441A B1 -  -  -          OR      C                   ; ACC = ~O OR C
  365 00:441B 3C -  -  -          INC     A                   ; ACC = ~O OR C + 1
  366 00:441C C9 -  -  -          RET                         ; return
  367 00:441D -  -  -  -  
  368 00:441D -  -  -  -  
  369 00:441D -  -  -  -  findKeypress:
  370 00:441D -  -  -  -          ;; ROUTINE findKeypress:
  371 00:441D -  -  -  -          ;;
  372 00:441D -  -  -  -          ;;   DESCRIPTION:
  373 00:441D -  -  -  -          ;;     Return the "best" key currently being pressed.
  374 00:441D -  -  -  -          ;;
  375 00:441D -  -  -  -          ;;   INPUTS:
  376 00:441D -  -  -  -          ;;     <keyboard>  read to find keypress
  377 00:441D -  -  -  -          ;;
  378 00:441D -  -  -  -          ;;   OUTPUTS:
  379 00:441D -  -  -  -          ;;     B           group mask of key
  380 00:441D -  -  -  -          ;;     C           bit mask of key
  381 00:441D -  -  -  -          ;;     <keyboard>  reset by writing FFh
  382 00:441D -  -  -  -          ;;
  383 00:441D -  -  -  -          ;; The output represents a valid key if and only if the sign
  384 00:441D -  -  -  -          ;; bit (bit 7) of B is SET.
  385 00:441D -  -  -  -          ;;
  386 00:441D 06 FE -  -          LD      B, 11111110b           ; B = 11111110b (first group mask)
  387 00:441F -  -  -  -  findKeypress_Loop:                     ;
  388 00:441F 3E FF -  -          LD      A, 0FFh                ; reset keyboard by writing FFh
  389 00:4421 D3 01 -  -          OUT     (KEYBOARD_PORT), A     ;
  390 00:4423 78 -  -  -          LD      A, B                   ; write B to keyboard
  391 00:4424 D3 01 -  -          OUT     (KEYBOARD_PORT), A     ;
  392 00:4426 DB 01 -  -          IN      A, (KEYBOARD_PORT)     ; ACC = byte R from keyboard
  393 00:4428 3C -  -  -          INC     A                      ; ACC = R + 1
  394 00:4429 20 06 -  -          JR      NZ, findKeypress_Break ; break if R + 1 NONZERO  [1]
  395 00:442B CB 00 -  -          RLC     B                      ; rotate mask LEFT
  396 00:442D FA 1F 44 -          JP      M, findKeypress_Loop   ; repeat if 0 bit still in range
  397 00:4430 C9 -  -  -          RET                            ; return because key not found
  398 00:4431 -  -  -  -  findKeypress_Break:                    ;
  399 00:4431 3D -  -  -          DEC     A                      ; ACC = R again
  400 00:4432 4F -  -  -          LD      C, A                   ; C = R
  401 00:4433 C9 -  -  -          RET                            ; return
  402 00:4434 -  -  -  -          ;;
  403 00:4434 -  -  -  -          ;; [1] In terms of the INITIAL READ VALUE R, the break condition
  404 00:4434 -  -  -  -          ;;     may be written
  405 00:4434 -  -  -  -          ;;
  406 00:4434 -  -  -  -          ;;       R + 1 nonzero.
  407 00:4434 -  -  -  -          ;;       <==> R + 1 != 0
  408 00:4434 -  -  -  -          ;;       <==> NOT (R + 1 == 0)
  409 00:4434 -  -  -  -          ;;       <==> NOT (R + 1 == FFh + 1)
  410 00:4434 -  -  -  -          ;;       <==> NOT (R == FFh)
  411 00:4434 -  -  -  -          ;;       <==> NOT "All bits of R are set."
  412 00:4434 -  -  -  -          ;;       <==> NOT "No bits of R are reset."
  413 00:4434 -  -  -  -          ;;       <==> NOT NOT "At least one bit of R is reset."
  414 00:4434 -  -  -  -          ;;       <==> "At least one bit of R is reset."
Listing for file "hello.asm"
   11 00:4434 -  -  -  -  
   12 00:4434 -  -  -  -  ; memory equates
   13 00:4434 -  -  -  -  ;
   14 00:4434 -  -  -  -  #define screenData      saveSScreen
   15 00:4434 -  -  -  -  #define drawData        saveSScreen+SCREEN_DATA_SIZE
   16 00:4434 -  -  -  -  #define writeData       saveSScreen+SCREEN_DATA_SIZE+DRAW_DATA_SIZE
   17 00:4434 -  -  -  -  #define interruptData   saveSScreen+SCREEN_DATA_SIZE+DRAW_DATA_SIZE+WRITE_DATA_SIZE
   18 00:4434 -  -  -  -  #define keyboardData    saveSScreen+SCREEN_DATA_SIZE+DRAW_DATA_SIZE+WRITE_DATA_SIZE+INTERRUPT_DATA_SIZE
   19 00:4434 -  -  -  -  
   20 00:4434 -  -  -  -  ; resource inclusion
   21 00:4434 -  -  -  -  ;
   22 00:4434 -  -  -  -  ; This file contains the definition of the font (fontFBF) we use to write
   23 00:4434 -  -  -  -  ; the greeting.
   24 00:4434 -  -  -  -  ;
   25 00:4434 -  -  -  -  #include "fontFBF.asm"
Listing for file "../lib/spasm//fontFBF.asm"
    1 00:4434 -  -  -  -  fontFBF_space:
    2 00:4434 00 -  -  -          .db     00000000b
    3 00:4435 00 -  -  -          .db     00000000b
    4 00:4436 00 -  -  -          .db     00000000b
    5 00:4437 00 -  -  -          .db     00000000b
    6 00:4438 00 -  -  -          .db     00000000b
    7 00:4439 -  -  -  -  fontFBF_exclam:
    8 00:4439 20 -  -  -          .db     00100000b
    9 00:443A 20 -  -  -          .db     00100000b
   10 00:443B 20 -  -  -          .db     00100000b
   11 00:443C 00 -  -  -          .db     00000000b
   12 00:443D 20 -  -  -          .db     00100000b
   13 00:443E -  -  -  -  fontFBF_double_quote:
   14 00:443E 50 -  -  -          .db     01010000b
   15 00:443F 50 -  -  -          .db     01010000b
   16 00:4440 00 -  -  -          .db     00000000b
   17 00:4441 00 -  -  -          .db     00000000b
   18 00:4442 00 -  -  -          .db     00000000b
   19 00:4443 -  -  -  -  fontFBF_pound_sign:
   20 00:4443 50 -  -  -          .db     01010000b
   21 00:4444 F8 -  -  -          .db     11111000b
   22 00:4445 50 -  -  -          .db     01010000b
   23 00:4446 F8 -  -  -          .db     11111000b
   24 00:4447 50 -  -  -          .db     01010000b
   25 00:4448 -  -  -  -  fontFBF_dollar_sign:
   26 00:4448 F8 -  -  -          .db     11111000b
   27 00:4449 A0 -  -  -          .db     10100000b
   28 00:444A F8 -  -  -          .db     11111000b
   29 00:444B 28 -  -  -          .db     00101000b
   30 00:444C F8 -  -  -          .db     11111000b
   31 00:444D -  -  -  -  fontFBF_percent_sign:
   32 00:444D C8 -  -  -          .db     11001000b
   33 00:444E D0 -  -  -          .db     11010000b
   34 00:444F 20 -  -  -          .db     00100000b
   35 00:4450 58 -  -  -          .db     01011000b
   36 00:4451 98 -  -  -          .db     10011000b
   37 00:4452 -  -  -  -  fontFBF_ampersand:
   38 00:4452 78 -  -  -          .db     01111000b
   39 00:4453 48 -  -  -          .db     01001000b
   40 00:4454 E0 -  -  -          .db     11100000b
   41 00:4455 88 -  -  -          .db     10001000b
   42 00:4456 F8 -  -  -          .db     11111000b
   43 00:4457 -  -  -  -  fontFBF_single_quote:
   44 00:4457 20 -  -  -          .db     00100000b
   45 00:4458 20 -  -  -          .db     00100000b
   46 00:4459 00 -  -  -          .db     00000000b
   47 00:445A 00 -  -  -          .db     00000000b
   48 00:445B 00 -  -  -          .db     00000000b
   49 00:445C -  -  -  -  fontFBF_left_parenthesis:
   50 00:445C 10 -  -  -          .db     00010000b
   51 00:445D 20 -  -  -          .db     00100000b
   52 00:445E 20 -  -  -          .db     00100000b
   53 00:445F 20 -  -  -          .db     00100000b
   54 00:4460 10 -  -  -          .db     00010000b
   55 00:4461 -  -  -  -  fontFBF_right_parenthesis:
   56 00:4461 40 -  -  -          .db     01000000b
   57 00:4462 20 -  -  -          .db     00100000b
   58 00:4463 20 -  -  -          .db     00100000b
   59 00:4464 20 -  -  -          .db     00100000b
   60 00:4465 40 -  -  -          .db     01000000b
   61 00:4466 -  -  -  -  fontFBF_asterisk:
   62 00:4466 20 -  -  -          .db     00100000b
   63 00:4467 A8 -  -  -          .db     10101000b
   64 00:4468 70 -  -  -          .db     01110000b
   65 00:4469 A8 -  -  -          .db     10101000b
   66 00:446A 20 -  -  -          .db     00100000b
   67 00:446B -  -  -  -  fontFBF_plus_sign:
   68 00:446B 20 -  -  -          .db     00100000b
   69 00:446C 20 -  -  -          .db     00100000b
   70 00:446D F8 -  -  -          .db     11111000b
   71 00:446E 20 -  -  -          .db     00100000b
   72 00:446F 20 -  -  -          .db     00100000b
   73 00:4470 -  -  -  -  fontFBF_comma:
   74 00:4470 00 -  -  -          .db     00000000b
   75 00:4471 00 -  -  -          .db     00000000b
   76 00:4472 00 -  -  -          .db     00000000b
   77 00:4473 20 -  -  -          .db     00100000b
   78 00:4474 60 -  -  -          .db     01100000b
   79 00:4475 -  -  -  -  fontFBF_dash:
   80 00:4475 00 -  -  -          .db     00000000b
   81 00:4476 00 -  -  -          .db     00000000b
   82 00:4477 F8 -  -  -          .db     11111000b
   83 00:4478 00 -  -  -          .db     00000000b
   84 00:4479 00 -  -  -          .db     00000000b
   85 00:447A -  -  -  -  fontFBF_period:
   86 00:447A 00 -  -  -          .db     00000000b
   87 00:447B 00 -  -  -          .db     00000000b
   88 00:447C 00 -  -  -          .db     00000000b
   89 00:447D 20 -  -  -          .db     00100000b
   90 00:447E 20 -  -  -          .db     00100000b
   91 00:447F -  -  -  -  fontFBF_slash:
   92 00:447F 08 -  -  -          .db     00001000b
   93 00:4480 10 -  -  -          .db     00010000b
   94 00:4481 20 -  -  -          .db     00100000b
   95 00:4482 40 -  -  -          .db     01000000b
   96 00:4483 80 -  -  -          .db     10000000b
   97 00:4484 -  -  -  -  fontFBF_zero:
   98 00:4484 F8 -  -  -          .db     11111000b
   99 00:4485 88 -  -  -          .db     10001000b
  100 00:4486 A8 -  -  -          .db     10101000b
  101 00:4487 88 -  -  -          .db     10001000b
  102 00:4488 F8 -  -  -          .db     11111000b
  103 00:4489 -  -  -  -  fontFBF_one:
  104 00:4489 20 -  -  -          .db     00100000b
  105 00:448A E0 -  -  -          .db     11100000b
  106 00:448B 20 -  -  -          .db     00100000b
  107 00:448C 20 -  -  -          .db     00100000b
  108 00:448D F8 -  -  -          .db     11111000b
  109 00:448E -  -  -  -  fontFBF_two:
  110 00:448E F8 -  -  -          .db     11111000b
  111 00:448F 08 -  -  -          .db     00001000b
  112 00:4490 F8 -  -  -          .db     11111000b
  113 00:4491 80 -  -  -          .db     10000000b
  114 00:4492 F8 -  -  -          .db     11111000b
  115 00:4493 -  -  -  -  fontFBF_three:
  116 00:4493 F8 -  -  -          .db     11111000b
  117 00:4494 08 -  -  -          .db     00001000b
  118 00:4495 78 -  -  -          .db     01111000b
  119 00:4496 08 -  -  -          .db     00001000b
  120 00:4497 F8 -  -  -          .db     11111000b
  121 00:4498 -  -  -  -  fontFBF_four:
  122 00:4498 88 -  -  -          .db     10001000b
  123 00:4499 88 -  -  -          .db     10001000b
  124 00:449A F8 -  -  -          .db     11111000b
  125 00:449B 08 -  -  -          .db     00001000b
  126 00:449C 08 -  -  -          .db     00001000b
  127 00:449D -  -  -  -  fontFBF_five:
  128 00:449D F8 -  -  -          .db     11111000b
  129 00:449E 80 -  -  -          .db     10000000b
  130 00:449F F8 -  -  -          .db     11111000b
  131 00:44A0 08 -  -  -          .db     00001000b
  132 00:44A1 F8 -  -  -          .db     11111000b
  133 00:44A2 -  -  -  -  fontFBF_six:
  134 00:44A2 F8 -  -  -          .db     11111000b
  135 00:44A3 80 -  -  -          .db     10000000b
  136 00:44A4 F8 -  -  -          .db     11111000b
  137 00:44A5 88 -  -  -          .db     10001000b
  138 00:44A6 F8 -  -  -          .db     11111000b
  139 00:44A7 -  -  -  -  fontFBF_seven:
  140 00:44A7 F8 -  -  -          .db     11111000b
  141 00:44A8 08 -  -  -          .db     00001000b
  142 00:44A9 08 -  -  -          .db     00001000b
  143 00:44AA 08 -  -  -          .db     00001000b
  144 00:44AB 08 -  -  -          .db     00001000b
  145 00:44AC -  -  -  -  fontFBF_eight:
  146 00:44AC F8 -  -  -          .db     11111000b
  147 00:44AD 88 -  -  -          .db     10001000b
  148 00:44AE F8 -  -  -          .db     11111000b
  149 00:44AF 88 -  -  -          .db     10001000b
  150 00:44B0 F8 -  -  -          .db     11111000b
  151 00:44B1 -  -  -  -  fontFBF_nine:
  152 00:44B1 F8 -  -  -          .db     11111000b
  153 00:44B2 88 -  -  -          .db     10001000b
  154 00:44B3 F8 -  -  -          .db     11111000b
  155 00:44B4 08 -  -  -          .db     00001000b
  156 00:44B5 F8 -  -  -          .db     11111000b
  157 00:44B6 -  -  -  -  fontFBF_colon:
  158 00:44B6 20 -  -  -          .db     00100000b
  159 00:44B7 20 -  -  -          .db     00100000b
  160 00:44B8 00 -  -  -          .db     00000000b
  161 00:44B9 20 -  -  -          .db     00100000b
  162 00:44BA 20 -  -  -          .db     00100000b
  163 00:44BB -  -  -  -  fontFBF_semicolon:
  164 00:44BB 20 -  -  -          .db     00100000b
  165 00:44BC 20 -  -  -          .db     00100000b
  166 00:44BD 00 -  -  -          .db     00000000b
  167 00:44BE 20 -  -  -          .db     00100000b
  168 00:44BF 60 -  -  -          .db     01100000b
  169 00:44C0 -  -  -  -  fontFBF_less_than_sign:
  170 00:44C0 10 -  -  -          .db     00010000b
  171 00:44C1 20 -  -  -          .db     00100000b
  172 00:44C2 40 -  -  -          .db     01000000b
  173 00:44C3 20 -  -  -          .db     00100000b
  174 00:44C4 10 -  -  -          .db     00010000b
  175 00:44C5 -  -  -  -  fontFBF_equals_sign:
  176 00:44C5 00 -  -  -          .db     00000000b
  177 00:44C6 F8 -  -  -          .db     11111000b
  178 00:44C7 00 -  -  -          .db     00000000b
  179 00:44C8 F8 -  -  -          .db     11111000b
  180 00:44C9 00 -  -  -          .db     00000000b
  181 00:44CA -  -  -  -  fontFBF_greater_than_sign:
  182 00:44CA 40 -  -  -          .db     01000000b
  183 00:44CB 20 -  -  -          .db     00100000b
  184 00:44CC 10 -  -  -          .db     00010000b
  185 00:44CD 20 -  -  -          .db     00100000b
  186 00:44CE 40 -  -  -          .db     01000000b
  187 00:44CF -  -  -  -  fontFBF_question_mark:
  188 00:44CF F8 -  -  -          .db     11111000b
  189 00:44D0 88 -  -  -          .db     10001000b
  190 00:44D1 38 -  -  -          .db     00111000b
  191 00:44D2 00 -  -  -          .db     00000000b
  192 00:44D3 20 -  -  -          .db     00100000b
  193 00:44D4 -  -  -  -  fontFBF_at_sign:
  194 00:44D4 F8 -  -  -          .db     11111000b
  195 00:44D5 A8 -  -  -          .db     10101000b
  196 00:44D6 B8 -  -  -          .db     10111000b
  197 00:44D7 80 -  -  -          .db     10000000b
  198 00:44D8 F8 -  -  -          .db     11111000b
  199 00:44D9 -  -  -  -  fontFBF_A:
  200 00:44D9 F8 -  -  -          .db     11111000b
  201 00:44DA 88 -  -  -          .db     10001000b
  202 00:44DB F8 -  -  -          .db     11111000b
  203 00:44DC 88 -  -  -          .db     10001000b
  204 00:44DD 88 -  -  -          .db     10001000b
  205 00:44DE -  -  -  -  fontFBF_B:
  206 00:44DE F0 -  -  -          .db     11110000b
  207 00:44DF 90 -  -  -          .db     10010000b
  208 00:44E0 F8 -  -  -          .db     11111000b
  209 00:44E1 88 -  -  -          .db     10001000b
  210 00:44E2 F8 -  -  -          .db     11111000b
  211 00:44E3 -  -  -  -  fontFBF_C:
  212 00:44E3 F8 -  -  -          .db     11111000b
  213 00:44E4 80 -  -  -          .db     10000000b
  214 00:44E5 80 -  -  -          .db     10000000b
  215 00:44E6 80 -  -  -          .db     10000000b
  216 00:44E7 F8 -  -  -          .db     11111000b
  217 00:44E8 -  -  -  -  fontFBF_D:
  218 00:44E8 F8 -  -  -          .db     11111000b
  219 00:44E9 48 -  -  -          .db     01001000b
  220 00:44EA 48 -  -  -          .db     01001000b
  221 00:44EB 48 -  -  -          .db     01001000b
  222 00:44EC F8 -  -  -          .db     11111000b
  223 00:44ED -  -  -  -  fontFBF_E:
  224 00:44ED F8 -  -  -          .db     11111000b
  225 00:44EE 80 -  -  -          .db     10000000b
  226 00:44EF F0 -  -  -          .db     11110000b
  227 00:44F0 80 -  -  -          .db     10000000b
  228 00:44F1 F8 -  -  -          .db     11111000b
  229 00:44F2 -  -  -  -  fontFBF_F:
  230 00:44F2 F8 -  -  -          .db     11111000b
  231 00:44F3 80 -  -  -          .db     10000000b
  232 00:44F4 F0 -  -  -          .db     11110000b
  233 00:44F5 80 -  -  -          .db     10000000b
  234 00:44F6 80 -  -  -          .db     10000000b
  235 00:44F7 -  -  -  -  fontFBF_G:
  236 00:44F7 F8 -  -  -          .db     11111000b
  237 00:44F8 80 -  -  -          .db     10000000b
  238 00:44F9 B8 -  -  -          .db     10111000b
  239 00:44FA 88 -  -  -          .db     10001000b
  240 00:44FB F8 -  -  -          .db     11111000b
  241 00:44FC -  -  -  -  fontFBF_H:
  242 00:44FC 88 -  -  -          .db     10001000b
  243 00:44FD 88 -  -  -          .db     10001000b
  244 00:44FE F8 -  -  -          .db     11111000b
  245 00:44FF 88 -  -  -          .db     10001000b
  246 00:4500 88 -  -  -          .db     10001000b
  247 00:4501 -  -  -  -  fontFBF_I:
  248 00:4501 F8 -  -  -          .db     11111000b
  249 00:4502 20 -  -  -          .db     00100000b
  250 00:4503 20 -  -  -          .db     00100000b
  251 00:4504 20 -  -  -          .db     00100000b
  252 00:4505 F8 -  -  -          .db     11111000b
  253 00:4506 -  -  -  -  fontFBF_J:
  254 00:4506 78 -  -  -          .db     01111000b
  255 00:4507 10 -  -  -          .db     00010000b
  256 00:4508 10 -  -  -          .db     00010000b
  257 00:4509 90 -  -  -          .db     10010000b
  258 00:450A F0 -  -  -          .db     11110000b
  259 00:450B -  -  -  -  fontFBF_K:
  260 00:450B 88 -  -  -          .db     10001000b
  261 00:450C 90 -  -  -          .db     10010000b
  262 00:450D E0 -  -  -          .db     11100000b
  263 00:450E 90 -  -  -          .db     10010000b
  264 00:450F 88 -  -  -          .db     10001000b
  265 00:4510 -  -  -  -  fontFBF_L:
  266 00:4510 80 -  -  -          .db     10000000b
  267 00:4511 80 -  -  -          .db     10000000b
  268 00:4512 80 -  -  -          .db     10000000b
  269 00:4513 80 -  -  -          .db     10000000b
  270 00:4514 F8 -  -  -          .db     11111000b
  271 00:4515 -  -  -  -  fontFBF_M:
  272 00:4515 F8 -  -  -          .db     11111000b
  273 00:4516 A8 -  -  -          .db     10101000b
  274 00:4517 A8 -  -  -          .db     10101000b
  275 00:4518 A8 -  -  -          .db     10101000b
  276 00:4519 88 -  -  -          .db     10001000b
  277 00:451A -  -  -  -  fontFBF_N:
  278 00:451A 88 -  -  -          .db     10001000b
  279 00:451B C8 -  -  -          .db     11001000b
  280 00:451C A8 -  -  -          .db     10101000b
  281 00:451D 98 -  -  -          .db     10011000b
  282 00:451E 88 -  -  -          .db     10001000b
  283 00:451F -  -  -  -  fontFBF_O:
  284 00:451F F8 -  -  -          .db     11111000b
  285 00:4520 88 -  -  -          .db     10001000b
  286 00:4521 88 -  -  -          .db     10001000b
  287 00:4522 88 -  -  -          .db     10001000b
  288 00:4523 F8 -  -  -          .db     11111000b
  289 00:4524 -  -  -  -  fontFBF_P:
  290 00:4524 F8 -  -  -          .db     11111000b
  291 00:4525 88 -  -  -          .db     10001000b
  292 00:4526 F8 -  -  -          .db     11111000b
  293 00:4527 80 -  -  -          .db     10000000b
  294 00:4528 80 -  -  -          .db     10000000b
  295 00:4529 -  -  -  -  fontFBF_Q:
  296 00:4529 F8 -  -  -          .db     11111000b
  297 00:452A 88 -  -  -          .db     10001000b
  298 00:452B 88 -  -  -          .db     10001000b
  299 00:452C F8 -  -  -          .db     11111000b
  300 00:452D 20 -  -  -          .db     00100000b
  301 00:452E -  -  -  -  fontFBF_R:
  302 00:452E F8 -  -  -          .db     11111000b
  303 00:452F 88 -  -  -          .db     10001000b
  304 00:4530 F8 -  -  -          .db     11111000b
  305 00:4531 90 -  -  -          .db     10010000b
  306 00:4532 88 -  -  -          .db     10001000b
  307 00:4533 -  -  -  -  fontFBF_S:
  308 00:4533 F8 -  -  -          .db     11111000b
  309 00:4534 80 -  -  -          .db     10000000b
  310 00:4535 F8 -  -  -          .db     11111000b
  311 00:4536 08 -  -  -          .db     00001000b
  312 00:4537 F8 -  -  -          .db     11111000b
  313 00:4538 -  -  -  -  fontFBF_T:
  314 00:4538 F8 -  -  -          .db     11111000b
  315 00:4539 20 -  -  -          .db     00100000b
  316 00:453A 20 -  -  -          .db     00100000b
  317 00:453B 20 -  -  -          .db     00100000b
  318 00:453C 20 -  -  -          .db     00100000b
  319 00:453D -  -  -  -  fontFBF_U:
  320 00:453D 88 -  -  -          .db     10001000b
  321 00:453E 88 -  -  -          .db     10001000b
  322 00:453F 88 -  -  -          .db     10001000b
  323 00:4540 88 -  -  -          .db     10001000b
  324 00:4541 F8 -  -  -          .db     11111000b
  325 00:4542 -  -  -  -  fontFBF_V:
  326 00:4542 88 -  -  -          .db     10001000b
  327 00:4543 88 -  -  -          .db     10001000b
  328 00:4544 88 -  -  -          .db     10001000b
  329 00:4545 50 -  -  -          .db     01010000b
  330 00:4546 20 -  -  -          .db     00100000b
  331 00:4547 -  -  -  -  fontFBF_W:
  332 00:4547 88 -  -  -          .db     10001000b
  333 00:4548 A8 -  -  -          .db     10101000b
  334 00:4549 A8 -  -  -          .db     10101000b
  335 00:454A A8 -  -  -          .db     10101000b
  336 00:454B F8 -  -  -          .db     11111000b
  337 00:454C -  -  -  -  fontFBF_X:
  338 00:454C 88 -  -  -          .db     10001000b
  339 00:454D F8 -  -  -          .db     11111000b
  340 00:454E 20 -  -  -          .db     00100000b
  341 00:454F F8 -  -  -          .db     11111000b
  342 00:4550 88 -  -  -          .db     10001000b
  343 00:4551 -  -  -  -  fontFBF_Y:
  344 00:4551 88 -  -  -          .db     10001000b
  345 00:4552 88 -  -  -          .db     10001000b
  346 00:4553 F8 -  -  -          .db     11111000b
  347 00:4554 20 -  -  -          .db     00100000b
  348 00:4555 20 -  -  -          .db     00100000b
  349 00:4556 -  -  -  -  fontFBF_Z:
  350 00:4556 F8 -  -  -          .db     11111000b
  351 00:4557 10 -  -  -          .db     00010000b
  352 00:4558 20 -  -  -          .db     00100000b
  353 00:4559 40 -  -  -          .db     01000000b
  354 00:455A F8 -  -  -          .db     11111000b
  355 00:455B -  -  -  -  fontFBF_left_bracket:
  356 00:455B 30 -  -  -          .db     00110000b
  357 00:455C 20 -  -  -          .db     00100000b
  358 00:455D 20 -  -  -          .db     00100000b
  359 00:455E 20 -  -  -          .db     00100000b
  360 00:455F 30 -  -  -          .db     00110000b
  361 00:4560 -  -  -  -  fontFBF_backslash:
  362 00:4560 80 -  -  -          .db     10000000b
  363 00:4561 40 -  -  -          .db     01000000b
  364 00:4562 20 -  -  -          .db     00100000b
  365 00:4563 10 -  -  -          .db     00010000b
  366 00:4564 08 -  -  -          .db     00001000b
  367 00:4565 -  -  -  -  fontFBF_right_bracket:
  368 00:4565 60 -  -  -          .db     01100000b
  369 00:4566 20 -  -  -          .db     00100000b
  370 00:4567 20 -  -  -          .db     00100000b
  371 00:4568 20 -  -  -          .db     00100000b
  372 00:4569 60 -  -  -          .db     01100000b
  373 00:456A -  -  -  -  fontFBF_caret:
  374 00:456A 20 -  -  -          .db     00100000b
  375 00:456B 50 -  -  -          .db     01010000b
  376 00:456C 88 -  -  -          .db     10001000b
  377 00:456D 00 -  -  -          .db     00000000b
  378 00:456E 00 -  -  -          .db     00000000b
  379 00:456F -  -  -  -  fontFBF_underscore:
  380 00:456F 00 -  -  -          .db     00000000b
  381 00:4570 00 -  -  -          .db     00000000b
  382 00:4571 00 -  -  -          .db     00000000b
  383 00:4572 00 -  -  -          .db     00000000b
  384 00:4573 F8 -  -  -          .db     11111000b
  385 00:4574 -  -  -  -  fontFBF_backquote:
  386 00:4574 40 -  -  -          .db     01000000b
  387 00:4575 20 -  -  -          .db     00100000b
  388 00:4576 00 -  -  -          .db     00000000b
  389 00:4577 00 -  -  -          .db     00000000b
  390 00:4578 00 -  -  -          .db     00000000b
  391 00:4579 -  -  -  -  fontFBF_left_brace:
  392 00:4579 18 -  -  -          .db     00011000b
  393 00:457A 10 -  -  -          .db     00010000b
  394 00:457B 30 -  -  -          .db     00110000b
  395 00:457C 10 -  -  -          .db     00010000b
  396 00:457D 18 -  -  -          .db     00011000b
  397 00:457E -  -  -  -  fontFBF_pipe_character:
  398 00:457E 20 -  -  -          .db     00100000b
  399 00:457F 20 -  -  -          .db     00100000b
  400 00:4580 20 -  -  -          .db     00100000b
  401 00:4581 20 -  -  -          .db     00100000b
  402 00:4582 20 -  -  -          .db     00100000b
  403 00:4583 -  -  -  -  fontFBF_right_brace:
  404 00:4583 60 -  -  -          .db     01100000b
  405 00:4584 20 -  -  -          .db     00100000b
  406 00:4585 30 -  -  -          .db     00110000b
  407 00:4586 20 -  -  -          .db     00100000b
  408 00:4587 60 -  -  -          .db     01100000b
  409 00:4588 -  -  -  -  fontFBF_tilde:
  410 00:4588 00 -  -  -          .db     00000000b
  411 00:4589 48 -  -  -          .db     01001000b
  412 00:458A A8 -  -  -          .db     10101000b
  413 00:458B 90 -  -  -          .db     10010000b
  414 00:458C 00 -  -  -          .db     00000000b
  415 00:458D -  -  -  -  fontFBF:
  416 00:458D 06 05 -  -          .db     6, 5
  417 00:458F 00 00 -  -          .dw     0
  418 00:4591 00 00 -  -          .dw     0
  419 00:4593 00 00 -  -          .dw     0
  420 00:4595 00 00 -  -          .dw     0
  421 00:4597 00 00 -  -          .dw     0
  422 00:4599 00 00 -  -          .dw     0
  423 00:459B 00 00 -  -          .dw     0
  424 00:459D 00 00 -  -          .dw     0
  425 00:459F 00 00 -  -          .dw     0
  426 00:45A1 00 00 -  -          .dw     0
  427 00:45A3 00 00 -  -          .dw     0
  428 00:45A5 00 00 -  -          .dw     0
  429 00:45A7 00 00 -  -          .dw     0
  430 00:45A9 00 00 -  -          .dw     0
  431 00:45AB 00 00 -  -          .dw     0
  432 00:45AD 00 00 -  -          .dw     0
  433 00:45AF 00 00 -  -          .dw     0
  434 00:45B1 00 00 -  -          .dw     0
  435 00:45B3 00 00 -  -          .dw     0
  436 00:45B5 00 00 -  -          .dw     0
  437 00:45B7 00 00 -  -          .dw     0
  438 00:45B9 00 00 -  -          .dw     0
  439 00:45BB 00 00 -  -          .dw     0
  440 00:45BD 00 00 -  -          .dw     0
  441 00:45BF 00 00 -  -          .dw     0
  442 00:45C1 00 00 -  -          .dw     0
  443 00:45C3 00 00 -  -          .dw     0
  444 00:45C5 00 00 -  -          .dw     0
  445 00:45C7 00 00 -  -          .dw     0
  446 00:45C9 00 00 -  -          .dw     0
  447 00:45CB 00 00 -  -          .dw     0
  448 00:45CD 00 00 -  -          .dw     0
  449 00:45CF 34 44 -  -          .dw     fontFBF_space
  450 00:45D1 39 44 -  -          .dw     fontFBF_exclam
  451 00:45D3 3E 44 -  -          .dw     fontFBF_double_quote
  452 00:45D5 43 44 -  -          .dw     fontFBF_pound_sign
  453 00:45D7 48 44 -  -          .dw     fontFBF_dollar_sign
  454 00:45D9 4D 44 -  -          .dw     fontFBF_percent_sign
  455 00:45DB 52 44 -  -          .dw     fontFBF_ampersand
  456 00:45DD 57 44 -  -          .dw     fontFBF_single_quote
  457 00:45DF 5C 44 -  -          .dw     fontFBF_left_parenthesis
  458 00:45E1 61 44 -  -          .dw     fontFBF_right_parenthesis
  459 00:45E3 66 44 -  -          .dw     fontFBF_asterisk
  460 00:45E5 6B 44 -  -          .dw     fontFBF_plus_sign
  461 00:45E7 70 44 -  -          .dw     fontFBF_comma
  462 00:45E9 75 44 -  -          .dw     fontFBF_dash
  463 00:45EB 7A 44 -  -          .dw     fontFBF_period
  464 00:45ED 7F 44 -  -          .dw     fontFBF_slash
  465 00:45EF 84 44 -  -          .dw     fontFBF_zero
  466 00:45F1 89 44 -  -          .dw     fontFBF_one
  467 00:45F3 8E 44 -  -          .dw     fontFBF_two
  468 00:45F5 93 44 -  -          .dw     fontFBF_three
  469 00:45F7 98 44 -  -          .dw     fontFBF_four
  470 00:45F9 9D 44 -  -          .dw     fontFBF_five
  471 00:45FB A2 44 -  -          .dw     fontFBF_six
  472 00:45FD A7 44 -  -          .dw     fontFBF_seven
  473 00:45FF AC 44 -  -          .dw     fontFBF_eight
  474 00:4601 B1 44 -  -          .dw     fontFBF_nine
  475 00:4603 B6 44 -  -          .dw     fontFBF_colon
  476 00:4605 BB 44 -  -          .dw     fontFBF_semicolon
  477 00:4607 C0 44 -  -          .dw     fontFBF_less_than_sign
  478 00:4609 C5 44 -  -          .dw     fontFBF_equals_sign
  479 00:460B CA 44 -  -          .dw     fontFBF_greater_than_sign
  480 00:460D CF 44 -  -          .dw     fontFBF_question_mark
  481 00:460F D4 44 -  -          .dw     fontFBF_at_sign
  482 00:4611 D9 44 -  -          .dw     fontFBF_A
  483 00:4613 DE 44 -  -          .dw     fontFBF_B
  484 00:4615 E3 44 -  -          .dw     fontFBF_C
  485 00:4617 E8 44 -  -          .dw     fontFBF_D
  486 00:4619 ED 44 -  -          .dw     fontFBF_E
  487 00:461B F2 44 -  -          .dw     fontFBF_F
  488 00:461D F7 44 -  -          .dw     fontFBF_G
  489 00:461F FC 44 -  -          .dw     fontFBF_H
  490 00:4621 01 45 -  -          .dw     fontFBF_I
  491 00:4623 06 45 -  -          .dw     fontFBF_J
  492 00:4625 0B 45 -  -          .dw     fontFBF_K
  493 00:4627 10 45 -  -          .dw     fontFBF_L
  494 00:4629 15 45 -  -          .dw     fontFBF_M
  495 00:462B 1A 45 -  -          .dw     fontFBF_N
  496 00:462D 1F 45 -  -          .dw     fontFBF_O
  497 00:462F 24 45 -  -          .dw     fontFBF_P
  498 00:4631 29 45 -  -          .dw     fontFBF_Q
  499 00:4633 2E 45 -  -          .dw     fontFBF_R
  500 00:4635 33 45 -  -          .dw     fontFBF_S
  501 00:4637 38 45 -  -          .dw     fontFBF_T
  502 00:4639 3D 45 -  -          .dw     fontFBF_U
  503 00:463B 42 45 -  -          .dw     fontFBF_V
  504 00:463D 47 45 -  -          .dw     fontFBF_W
  505 00:463F 4C 45 -  -          .dw     fontFBF_X
  506 00:4641 51 45 -  -          .dw     fontFBF_Y
  507 00:4643 56 45 -  -          .dw     fontFBF_Z
  508 00:4645 5B 45 -  -          .dw     fontFBF_left_bracket
  509 00:4647 60 45 -  -          .dw     fontFBF_backslash
  510 00:4649 65 45 -  -          .dw     fontFBF_right_bracket
  511 00:464B 6A 45 -  -          .dw     fontFBF_caret
  512 00:464D 6F 45 -  -          .dw     fontFBF_underscore
  513 00:464F 74 45 -  -          .dw     fontFBF_backquote
  514 00:4651 D9 44 -  -          .dw     fontFBF_A
  515 00:4653 DE 44 -  -          .dw     fontFBF_B
  516 00:4655 E3 44 -  -          .dw     fontFBF_C
  517 00:4657 E8 44 -  -          .dw     fontFBF_D
  518 00:4659 ED 44 -  -          .dw     fontFBF_E
  519 00:465B F2 44 -  -          .dw     fontFBF_F
  520 00:465D F7 44 -  -          .dw     fontFBF_G
  521 00:465F FC 44 -  -          .dw     fontFBF_H
  522 00:4661 01 45 -  -          .dw     fontFBF_I
  523 00:4663 06 45 -  -          .dw     fontFBF_J
  524 00:4665 0B 45 -  -          .dw     fontFBF_K
  525 00:4667 10 45 -  -          .dw     fontFBF_L
  526 00:4669 15 45 -  -          .dw     fontFBF_M
  527 00:466B 1A 45 -  -          .dw     fontFBF_N
  528 00:466D 1F 45 -  -          .dw     fontFBF_O
  529 00:466F 24 45 -  -          .dw     fontFBF_P
  530 00:4671 29 45 -  -          .dw     fontFBF_Q
  531 00:4673 2E 45 -  -          .dw     fontFBF_R
  532 00:4675 33 45 -  -          .dw     fontFBF_S
  533 00:4677 38 45 -  -          .dw     fontFBF_T
  534 00:4679 3D 45 -  -          .dw     fontFBF_U
  535 00:467B 42 45 -  -          .dw     fontFBF_V
  536 00:467D 47 45 -  -          .dw     fontFBF_W
  537 00:467F 4C 45 -  -          .dw     fontFBF_X
  538 00:4681 51 45 -  -          .dw     fontFBF_Y
  539 00:4683 56 45 -  -          .dw     fontFBF_Z
  540 00:4685 79 45 -  -          .dw     fontFBF_left_brace
  541 00:4687 7E 45 -  -          .dw     fontFBF_pipe_character
  542 00:4689 83 45 -  -          .dw     fontFBF_right_brace
  543 00:468B 88 45 -  -          .dw     fontFBF_tilde
  544 00:468D 00 00 -  -          .dw     0
Listing for file "hello.asm"
   26 00:468F -  -  -  -  
   27 00:468F -  -  -  -  appMain:
   28 00:468F CD A7 40 -          CALL    screenInit       ; initialize libraries, lowest to highest
   29 00:4692 CD 26 41 -          CALL    drawInit         ;
   30 00:4695 CD C4 42 -          CALL    writeInit        ;
   31 00:4698 CD 21 43 -          CALL    interruptInit    ;
   32 00:469B CD 9B 43 -          CALL    keyboardInit     ;
   33 00:469E 21 8D 45 -          LD      HL, fontFBF      ; set font to fontFBF
   34 00:46A1 CD C6 42 -          CALL    writeSetFont     ;
   35 00:46A4 CD B0 41 -          CALL    drawClearScreen  ; clear previous contents of screen buffer
   36 00:46A7 11 00 00 -          LD      DE, 0            ; D, E = top of screen, left of screen
   37 00:46AA 21 C6 46 -          LD      HL, helloString  ; HL = greeting string
   38 00:46AD CD E1 42 -          CALL    writeString      ; write string at top left of screen buffer
   39 00:46B0 CD B8 40 -          CALL    screenUpdate     ; flush string to LCD
   40 00:46B3 CD C1 43 -          CALL    keyboardWait     ; wait for user keypress
   41 00:46B6 CD AD 43 -          CALL    keyboardExit     ; de-initialize libraries, highest to lowest
   42 00:46B9 CD 54 43 -          CALL    interruptExit    ;
   43 00:46BC CD C5 42 -          CALL    writeExit        ;
   44 00:46BF CD 27 41 -          CALL    drawExit         ;
   45 00:46C2 CD B6 40 -          CALL    screenExit       ;
   46 00:46C5 C9 -  -  -          RET                      ; return
   47 00:46C6 -  -  -  -  
   48 00:46C6 -  -  -  -  helloString:
   49 00:46C6 48 45 4C 4C 
              4F 20 57 4F 
              52 4C 44 21 
              00 -  -  -          .db     "HELLO WORLD!", 0
